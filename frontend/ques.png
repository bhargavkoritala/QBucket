%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 952.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Petrenko Kirill
%%CreationDate: 13.01.2020
%%BoundingBox: 0 0 3000 2000
%%HiResBoundingBox: 0 0 3000 2000
%%CropBox: 0 0 3000 2000
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-01-13T18:31:19+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-01-13T18:31:20+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-01-13T18:31:20+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A6Jme827FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUZpukX2oyFLaOqrvJK3woo/ymOCUgObZjxSm&#xA;dke2neW7T4bvUJLqUfaSzUUB/wBd/hbIcUjyDd4eKPOV+5rn5PbbhfJ/lAxH8Dj6/JF4f6X2Lv8A&#xA;D1rdqW0e+S6cCptpB6Uv0A7Njxkcwn8uJfQb8uqTSwywyNFKhjkQ0ZGFCD7g5YC4xBBorMUOxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVVt7a4uZlht42llb7KKKnEmmUYmRoJm2hWtttqW&#xA;oxW0v++I1M7g+DBKBT9OQ4yeQbvAEfqkB9rX1Hy42y6pIh8Xt2IP/AtXG5dy8GP+d9ind6DdRQG5&#xA;t3jvbRftTQHlx/11+0uETHJEsBAsbjySzJNDsVdirsVRuj6a+o3qwBvTiALzynoka/abIylQbcOP&#xA;jlSK1jWVmUWNgPQ0yHZI12MlP238SffBGHU82ebNfpjtFKMm47sVbVmVgykqymoYbEEYqCyG3mHm&#xA;G0a1uKHV7dC1pPsDKi7mNvE+B/trURwm+jmRPjCj9Y5ebHiCDQ7EdRlrhtYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FVSCCW4njgiXlLIwVF8STQYk0mMSTQTjUL5NLjbS9Nakg+G+vF2eRx1R&#xA;T1CL0/z3riL3Lk5J8A4I/EpHljiuxVEWN/dWNws9tIY5B1p0I8GHcYCAebOGQxNhH6rbW1xaJq1l&#xA;H6cUjend269Ipeu3+S3UZGJo0W3LEEccfj5FKMm47sVdiqeWzfU/K1zOu01/OLevf0kHJqfM7HKz&#xA;vL3OVH04iesjSR5Y4qeenYaPbwtcQLealMglEUtfShRvshlH2mI7HK95e5yqjjAsXI/IKSa/Cx43&#xA;OmWckLfaWOP0np/kuu4w8HcSxGcdYxr5KOr6fb2/oXNmzPY3aloC/wBpSpo6N7qcMZXsebHLjAoj&#xA;6ShLS5ktbqK5jNHhcOv0GtPpyRFhrhIxIITDzRbxxaxK8Q/c3IW4j+Ugqf8Ahq5DGdm7UxAma5Hd&#xA;Kcm47sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVTfy8fQN7qH7VnbsYm8JZDwQ/ichPeg5Gn2&#xA;uXcEoybjprp9lYxWR1LUQzw8zHb2yHi0rgVJLdkHiMhIm6DfjhER4pcu7vVYLvQLuQW89iLJZDxj&#xA;uopHYx16Fg5owr1wESHVlGeORoivNLL6zmsruW1m/vIWKkjofAj5jfJg2LaZwMSQUx8uH1ZbrTzu&#xA;l7buqr29SMF0b6OJyOTvbdPuTH+cEnybjuxV2Kp1qG3lfSqd5Jyf+CyuP1Fycn91H4pLljjJv5s/&#xA;5SC7/wCef/Jtchj+lyNV/eH8dEoybjptIS3leGu/C9kVT4AxKSPvyH8Xwcg/3Q/rfoSnJuOnXmbc&#xA;6WT1OnwEn3+LIY+vvcnU/wAP9UJMASaAVJ6AZNxl3oTf77b7jjaeEtNHIoqylR4kEYrS3FDsVdir&#xA;sVdirsVdirsVdirsVdirsVdiqa6b/wAcXWP9SD/k8MhLmG/H9Evh96VZNoTfUv8AlH9H+dz/AMnB&#xA;kI/UXIyf3cPilGTcdN/Nn/HfuvlH/wAmlyGP6XI1X94fx0d5T/5SC0/2f/Jtscn0rpf7wJRk3Hdi&#xA;rsVTrUP+UY0n/jJcf8SyuP1Fycn91H4pLljjJv5s/wCUgu/mn/Jtchj+lyNV/eFKMm46at/yi0f/&#xA;ADHP/wAmVyH8Xwb/APJf536EqybQnPmX/pVf9s63/wCNshj6+9ydT/D/AFQt8pbeYLU+Hqf8mmxy&#xA;/SjSf3g/HRb/AIo1/wD5bX+5f6Y+HHuR+ayd6Mj1S/v/AC/qv1yYzekbf0+VNuUhr0HtkeECQptG&#xA;WU8cuI3yY9lrhuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Koqx1K6svUEBXjKAJEdFdSAajZge+AxBbI&#xA;ZDHkif8AEN9/vu3/AOkeL/mnI8AZ/mJeXyChf6pd3yxJOU4Q8vSREVAOdC2ygdaZIRAYTymVX0Q0&#xA;MUk0qQxjlJIwVB4ljQYSWAFmgmXmiVJNevGQ1CsEr7ooQ/iuQx/SG7Um8hXeVP8AjvWx7KJCT4AR&#xA;tjk+lOl/vB+OiUZNx3Yq7FU61D/lGNJ/4yXH/Esrj9RcnJ/dR+KS5Y4yb+bP+Ugu/mn/ACbXIY/p&#xA;cjVf3hSjJuOmrf8AKLR/8xz/APJlch/F8G//ACX+d+hKsm0Jz5l/6VX/AGzrf/jbIY+vvcnU/wAP&#xA;9UKfleSOPXbZ5HWNB6gLsQoFY2A3OOT6WOmIGQX+Nlv+Hr7/AH5b/wDSRF/zVjxhfy8vL5hFpaNY&#xA;6FqaTyw85zB6SJKjk8HJbZSfHBdyDYIcOOVkb11SHLHEdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdiqdaSq6dYvrEoHrNWLTkPd+jyU8EH45XLc05OL0R4zz6frSZmZmLMSWJqSdyScscZONNUWOk&#xA;3WoybSXKtaWanvy/vHH+qNq+OQluacnGOGBkeuw/Sk2TcZ2KuxVOtQ/5RjSf+Mlx/wASyuP1Fycn&#xA;91H4pLljjJv5s/5SC7+af8m1yGP6XI1X94Uoybjpq3/KLR/8xz/8mVyH8Xwb/wDJf536EqybQnPm&#xA;X/pVf9s63/42yGPr73J1P8P9UJNk3GdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqL0v&#xA;T3v71LdTwQ1aWQ9EjXdmPyGCUqDZix8cqVda1BLy6CwDhZW6+laR+CL3+bdTghGgyzZOI7fSOSjp&#xA;thLf3sVrGaFz8TnoqjdmPyGGUqFsMeMzlQV9cv4rq6WK2HGxtV9G1X/JHVvmx3wQjQ82efIJGh9I&#xA;5Jdkml2KuxVOtQ/5RjSf+Mlx/wASyuP1Fycn91H4pLljjJv5s/5SC7+af8m1yGP6XI1X94Uoybjp&#xA;q3/KLR/8xz/8mVyH8Xwb/wDJf536EqybQnPmX/pVf9s63/42yGPr73J1P8P9UJTDDNNIIoUaSRvs&#xA;ogLMab7AZMlxwCTQRX6F1n/lguP+RT/0yPGO9s8Gf80/JTn0zUoIzJPaTRRjq7xsq7+5GESBYyxy&#xA;AsgobCwdirsVdirsVdirsVdirsVdirsVdirsVdirsVTi3P1Py5NMu0+oS+gp7iGMcnp/rMQDkDvL&#xA;3OTH04yesjXwSfJuMndf0Xom219qi/SltX/mYfwyv6j5Byf7uH9KX3ftSTLHGdirsVdiqdah/wAo&#xA;xpP/ABkuP+JZXH6i5OT+6j8Ulyxxk382f8pBd/NP+Ta5DH9Lkar+8KUZNx01b/lFo/8AmOf/AJMr&#xA;kP4vg3/5L/O/QlWTaE58y/8ASq/7Z1v/AMbZDH197k6n+H+qFvlP/lILX/np/wAmmxyfSjS/3g/H&#xA;RAfpHUP+WmX/AINv65LhDV4ku8pnZXFxN5f1j1pXk4m2482LUrIelcgR6g3wkTjlfkkmWOK7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqm+pADy/o/ubkn/AJGLkI/UXIyf3cfilGTcdN/NdRrcsQP7&#xA;uFIo418FEamg+/IY+Tkar6yO6vuSjJuO7FXYq7FU61D/AJRjSf8AjJcf8SyuP1Fycn91H4pLljjJ&#xA;v5s/5SC7+af8m1yGP6XI1X94V9pp+m2dkl3q6u31ra2tozxcJ3mP/GoPXAZEmgmGOMY3PryH6VbV&#xA;bOC18vQrb3C3MEt20kMi7HiYlFGHZgRuMYm5fBllgI4xRscX6GP5Y4ic+Zf+lV/2zrf/AI2yGPr7&#xA;3J1P8P8AVCj5buILfWraadxHEvMM7dByjZRX6ThyCwx00gJglV/QNr/1drP/AIJv+acHGe4p8Afz&#xA;oq7Q2dhouoQi+guZbowiNISSf3bljWoHbBZJGzMiMISFg3SQZY4jsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirIH0661DQNLW0CSNAbgSgyIhXk4I+0y+GV8QEjblnGZ4410tCf4Y1r/fKf8jof+a8P&#xA;iBr/AC0+77Q35qZW166KsGH7sVBqNo1B6Y4/pTqj+8P46JTk3HdirsVdiqdyj1/KUDjc2d08beyy&#xA;Lyr9+2Vj6nJO+EeRSTLHGZLdRR3l3ba6IDeWjBP0hbx7skiLxIK/ymlR4+2VDYcLmyAkRkqx1Qnm&#xA;G1uZpm1RJhd2Uxokyinp+Ebr+xx6YYEcmvURJPHdxP4pJcscZtVZmCqKsxoAOpJxUBOfNhVNSjtV&#xA;NRZ28VvX/VWv/G2Qx8rcnVfVXcAElybjOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2Kpv5fu7dXn0+8bjZ36iN3/kcGsb/QchMdR0cjTzG8ZcpILUdOutPu3trheLr0&#xA;PZl7Mp8DkoyBDVkxmBoqdreXVpL6ttK8MnTkhIqPA+OEgFEZmJsGkVea/q95AYLm5Z4TQslFUGm4&#xA;rxArkRABsnnnIUTsl+SaV8M0kM0c0Z4yRMHQ9aMpqOuJCYkg2GQTwWuvWlxqEK/VtQtk9S7Sh9KQ&#xA;AfaU/ssadP8AbyoExNdHLlEZQZDaQ59zHMtcN2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KslbWdS03y9pIspvS9UXBk+FGrxl2+0D45VwAyNuac0oY48J7/AL0NF5v8xNKim7qCwB/dxeP+&#xA;rhOKLAavJfP7lLzWAPMN4AKfEp290U4cf0hjqv7wpRk3HdirsVTn/B3mP/lk/wCSkX/NWQ8WPe5P&#xA;5PJ3fc7/AAd5j/5ZP+SkX/NWPix71/J5O77k6s9J1qa1Sw1jT2uLZNoLhJIvWi9gS26+xysyF2C5&#xA;MMUyOGcbHwsIS/8AIeoxEtZyJcR9QrHg/wCPw/jhjmHVryaGQ+ndi5FDTLnBdiqtZWkt3dRW0VBJ&#xA;KwVSxoBXxwE0LZQgZEAMs1XQdZSzTStMtibNaNcT841M0nWpBavEdhlMZi7LsMuCYHBAen70m/wd&#xA;5j/5ZP8AkpF/zVlnix73G/J5O77nf4O8x/8ALJ/yUi/5qx8WPev5PJ3fc7/B3mP/AJZP+SkX/NWP&#xA;ix71/J5O77nf4O8x/wDLJ/yUi/5qx8WPev5PJ3fc7/B3mP8A5ZP+SkX/ADVj4se9fyeTu+53+DvM&#xA;f/LJ/wAlIv8AmrHxY96/k8nd9zv8HeY/+WT/AJKRf81Y+LHvX8nk7vud/g7zH/yyf8lIv+asfFj3&#xA;r+Tyd33O/wAHeY/+WT/kpF/zVj4se9fyeTu+53+DvMf/ACyf8lIv+asfFj3r+Tyd33O/wd5j/wCW&#xA;T/kpF/zVj4se9fyeTu+53+DvMf8Ayyf8lIv+asfFj3r+Tyd33O/wd5j/AOWT/kpF/wA1Y+LHvX8n&#xA;k7vud/g7zH/yyf8AJSL/AJqx8WPev5PJ3fc7/B3mP/lk/wCSkX/NWPix71/J5O77nf4O8x/8sn/J&#xA;SL/mrHxY96/k8nd9zv8AB3mP/lk/5KRf81Y+LHvX8nk7vud/g7zH/wAsn/JSL/mrHxY96/k8nd9y&#xA;rr9pPZ6TpFpcrwuI1uC8dQxAaSo+ySNxggbJKc8DGEQee/3pJCQJkJ2AYVP05YXGHNk/mHy1rV5r&#xA;Fzc21v6kEpUo/OMVAQDoWBymGQAUXO1GmnKZIGyXf4O8x/8ALJ/yUi/5qyfix72n8nk7vud/g7zH&#xA;/wAsn/JSL/mrHxY96/k8nd9zv8HeY/8Alk/5KRf81Y+LHvX8nk7vuSbJuM7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWQf8A&#xA;Okf8vv8AwmV+vycv9x/Sd/zpH/L7/wAJj6/Jf3H9J3/Okf8AL7/wmPr8l/cf0nf86R/y+/8ACY+v&#xA;yX9x/Sd/zpH/AC+/8Jj6/Jf3H9J3/Okf8vv/AAmPr8l/cf0nf86R/wAvv/CY+vyX9x/Sd/zpH/L7&#xA;/wAJj6/Jf3H9J3/Okf8AL7/wmPr8l/cf0nf86R/y+/8ACY+vyX9x/Sd/zpH/AC+/8Jj6/Jf3H9J3&#xA;/Okf8vv/AAmPr8l/cf0nf86R/wAvv/CY+vyX9x/Sd/zpH/L7/wAJj6/Jf3H9J3/Okf8AL7/wmPr8&#xA;l/cf0nf86R/y+/8ACY+vyX9x/Sd/zpH/AC+/8Jj6/Jf3H9J3/Okf8vv/AAmPr8l/cf0nf86R/wAv&#xA;v/CY+vyX9x/Sd/zpH/L7/wAJj6/Jf3H9J3/Okf8AL7/wmPr8l/cf0nf86R/y+/8ACY+vyX9x/Sd/&#xA;zpH/AC+/8Jj6/Jf3H9J3/Okf8vv/AAmPr8l/cf0nf86R/wAvv/CY+vyX9x/Sd/zpH/L7/wAJj6/J&#xA;f3H9J3/Okf8AL7/wmPr8l/cf0nf86R/y+/8ACY+vyX9x/Sd/zpH/AC+/8Jj6/Jf3H9J3/Okf8vv/&#xA;AAmPr8l/cf0nf86R/wAvv/CY+vyX9x/Sd/zpH/L7/wAJj6/Jf3H9J//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:393f0f99-2d61-4f50-87ed-4b543ea39e93</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:393f0f99-2d61-4f50-87ed-4b543ea39e93</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:8d786a35-d6c9-4e79-87a0-efe0008e6ba1</stRef:instanceID>
            <stRef:documentID>xmp.did:8d786a35-d6c9-4e79-87a0-efe0008e6ba1</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f5c2e84b-4f26-4e3a-9931-e58e32008c96</stEvt:instanceID>
                  <stEvt:when>2019-10-08T13:40:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:85a95b65-2a9c-48e3-9fc4-f1c732dfd12c</stEvt:instanceID>
                  <stEvt:when>2020-01-13T12:48:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8d786a35-d6c9-4e79-87a0-efe0008e6ba1</stEvt:instanceID>
                  <stEvt:when>2020-01-13T13:07:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:393f0f99-2d61-4f50-87ed-4b543ea39e93</stEvt:instanceID>
                  <stEvt:when>2020-01-13T18:31:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB красный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB желтый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB зеленый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB голубой</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB синий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB пурпурный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3000 2000 li
3000 0 li
cp
clp
3000 2000 mo
0 2000 li
0 0 li
3000 0 li
3000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.521569 .772549 .8 rgb
f
401.908 587.312 mo
373.311 587.312 348.21 596.36 327.303 614.206 cv
306.632 631.853 296.15 660.007 296.15 697.885 cv
296.15 1301.44 li
296.15 1339.34 306.631 1367.49 327.3 1385.11 cv
348.183 1402.96 373.283 1412.01 401.908 1412.01 cv
411.923 1412.01 420.43 1411.01 427.32 1409.04 cv
360.25 1355.09 li
359.203 1354.25 358.539 1353.02 358.408 1351.68 cv
358.276 1350.35 358.689 1349.01 359.553 1347.98 cv
443.022 1248.46 li
444.771 1246.38 447.868 1246.07 449.988 1247.78 cv
507.666 1294.2 li
507.666 697.885 li
507.666 660.027 497.184 631.873 476.511 614.204 cv
455.583 596.361 430.481 587.312 401.908 587.312 cv
cp
401.908 1422.01 mo
370.834 1422.01 343.548 1412.15 320.808 1392.72 cv
297.813 1373.11 286.15 1342.4 286.15 1301.44 cv
286.15 697.885 li
286.15 656.947 297.812 626.234 320.81 606.6 cv
343.579 587.166 370.864 577.312 401.908 577.312 cv
432.926 577.312 460.211 587.165 483.004 606.598 cv
506.005 626.257 517.666 656.969 517.666 697.885 cv
517.666 1304.65 li
517.666 1306.57 516.561 1308.32 514.825 1309.16 cv
513.088 1309.99 511.029 1309.75 509.531 1308.54 cv
447.536 1258.64 li
370.495 1350.5 li
440.356 1406.69 li
441.683 1407.76 442.375 1409.43 442.194 1411.12 cv
442.012 1412.81 440.981 1414.3 439.458 1415.06 cv
430.107 1419.74 417.825 1422.01 401.908 1422.01 cv
cp
1 1 1 rgb
f
10 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
401.908 587.312 mo
373.311 587.312 348.21 596.36 327.303 614.206 cv
306.632 631.853 296.15 660.007 296.15 697.885 cv
296.15 1301.44 li
296.15 1339.34 306.631 1367.49 327.3 1385.11 cv
348.183 1402.96 373.283 1412.01 401.908 1412.01 cv
411.923 1412.01 420.43 1411.01 427.32 1409.04 cv
360.25 1355.09 li
359.203 1354.25 358.539 1353.02 358.408 1351.68 cv
358.276 1350.35 358.689 1349.01 359.553 1347.98 cv
443.022 1248.46 li
444.771 1246.38 447.868 1246.07 449.988 1247.78 cv
507.666 1294.2 li
507.666 697.885 li
507.666 660.027 497.184 631.873 476.511 614.204 cv
455.583 596.361 430.481 587.312 401.908 587.312 cv
cp
401.908 1422.01 mo
370.834 1422.01 343.548 1412.15 320.808 1392.72 cv
297.813 1373.11 286.15 1342.4 286.15 1301.44 cv
286.15 697.885 li
286.15 656.947 297.812 626.234 320.81 606.6 cv
343.579 587.166 370.864 577.312 401.908 577.312 cv
432.926 577.312 460.211 587.165 483.004 606.598 cv
506.005 626.257 517.666 656.969 517.666 697.885 cv
517.666 1304.65 li
517.666 1306.57 516.561 1308.32 514.825 1309.16 cv
513.088 1309.99 511.029 1309.75 509.531 1308.54 cv
447.536 1258.64 li
370.495 1350.5 li
440.356 1406.69 li
441.683 1407.76 442.375 1409.43 442.194 1411.12 cv
442.012 1412.81 440.981 1414.3 439.458 1415.06 cv
430.107 1419.74 417.825 1422.01 401.908 1422.01 cv
cp
@
836.136 915.676 mo
989.864 915.676 li
989.864 761.947 li
836.136 761.947 li
836.136 915.676 li
cp
994.864 925.676 mo
831.136 925.676 li
828.375 925.676 826.136 923.437 826.136 920.676 cv
826.136 756.947 li
826.136 754.186 828.375 751.947 831.136 751.947 cv
994.864 751.947 li
997.625 751.947 999.864 754.186 999.864 756.947 cv
999.864 920.676 li
999.864 923.437 997.625 925.676 994.864 925.676 cv
cp
836.136 1280.05 mo
989.864 1280.05 li
989.864 1126.32 li
836.136 1126.32 li
836.136 1280.05 li
cp
994.864 1290.05 mo
831.136 1290.05 li
828.375 1290.05 826.136 1287.81 826.136 1285.05 cv
826.136 1121.32 li
826.136 1118.56 828.375 1116.32 831.136 1116.32 cv
994.864 1116.32 li
997.625 1116.32 999.864 1118.56 999.864 1121.32 cv
999.864 1285.05 li
999.864 1287.81 997.625 1290.05 994.864 1290.05 cv
cp
f
836.136 915.676 mo
989.864 915.676 li
989.864 761.947 li
836.136 761.947 li
836.136 915.676 li
cp
994.864 925.676 mo
831.136 925.676 li
828.375 925.676 826.136 923.437 826.136 920.676 cv
826.136 756.947 li
826.136 754.186 828.375 751.947 831.136 751.947 cv
994.864 751.947 li
997.625 751.947 999.864 754.186 999.864 756.947 cv
999.864 920.676 li
999.864 923.437 997.625 925.676 994.864 925.676 cv
cp
836.136 1280.05 mo
989.864 1280.05 li
989.864 1126.32 li
836.136 1126.32 li
836.136 1280.05 li
cp
994.864 1290.05 mo
831.136 1290.05 li
828.375 1290.05 826.136 1287.81 826.136 1285.05 cv
826.136 1121.32 li
826.136 1118.56 828.375 1116.32 831.136 1116.32 cv
994.864 1116.32 li
997.625 1116.32 999.864 1118.56 999.864 1121.32 cv
999.864 1285.05 li
999.864 1287.81 997.625 1290.05 994.864 1290.05 cv
cp
@
2479.54 1293.49 mo
2633.27 1293.49 li
2633.27 1170.07 li
2633.27 1154.49 2636.09 1139.56 2641.66 1125.67 cv
2647.08 1112.11 2653.67 1098.66 2661.24 1085.69 cv
2772 896.272 li
2772.03 896.23 2772.05 896.188 2772.08 896.147 cv
2777.19 887.955 2781.34 878.89 2784.39 869.202 cv
2787.48 859.436 2790.12 847.534 2792.24 833.823 cv
2794.32 820.271 2795.65 804.005 2796.2 785.483 cv
2796.73 766.603 2797 743.157 2797 715.805 cv
2797 667.33 2793.28 629.438 2785.95 603.182 cv
2781.8 588.686 2776.28 575.278 2769.55 563.361 cv
2762.7 551.286 2753.89 537.66 2743.35 522.873 cv
2722.56 494.831 2695.9 472.656 2664.15 457.041 cv
2632.35 441.405 2596.63 433.477 2558.01 433.477 cv
2524.59 433.477 2492.85 439.821 2463.67 452.334 cv
2434.44 464.859 2408.49 481.8 2386.54 502.684 cv
2364.66 524.579 2347.21 550.5 2334.67 579.729 cv
2322.16 608.932 2315.81 640.133 2315.81 672.465 cv
2315.81 762.171 li
2469.54 762.171 li
2469.54 674.07 li
2469.54 645.797 2479.38 623.938 2498.79 609.101 cv
2517.81 594.572 2537.73 587.206 2558.01 587.206 cv
2581.78 587.206 2602.16 595.819 2618.59 612.807 cv
2634.97 629.769 2643.27 650.379 2643.27 674.07 cv
2643.27 759.145 li
2643.27 775.295 2641.9 791.771 2639.19 808.118 cv
2636.41 824.764 2630.51 840.49 2621.66 854.867 cv
2518.96 1021.75 li
2507.41 1041.7 2497.83 1062.46 2490.5 1083.44 cv
2483.23 1104.2 2479.54 1126.33 2479.54 1149.21 cv
2479.54 1293.49 li
cp
2638.27 1303.49 mo
2474.54 1303.49 li
2471.78 1303.49 2469.54 1301.25 2469.54 1298.49 cv
2469.54 1149.21 li
2469.54 1125.2 2473.42 1101.96 2481.06 1080.13 cv
2488.6 1058.55 2498.46 1037.19 2510.35 1016.68 cv
2510.37 1016.64 2510.39 1016.6 2510.41 1016.56 cv
2613.15 849.625 li
2621.31 836.353 2626.76 821.836 2629.33 806.476 cv
2631.94 790.676 2633.27 774.749 2633.27 759.145 cv
2633.27 674.07 li
2633.27 653.06 2625.91 634.787 2611.4 619.756 cv
2596.72 604.583 2579.26 597.206 2558.01 597.206 cv
2539.97 597.206 2522.09 603.881 2504.87 617.045 cv
2487.83 630.072 2479.54 648.725 2479.54 674.07 cv
2479.54 767.171 li
2479.54 769.932 2477.3 772.171 2474.54 772.171 cv
2310.81 772.171 li
2308.05 772.171 2305.81 769.932 2305.81 767.171 cv
2305.81 672.465 li
2305.81 638.772 2312.43 606.246 2325.48 575.79 cv
2338.53 545.365 2356.71 518.375 2379.51 495.569 cv
2379.54 495.54 2379.57 495.511 2379.6 495.483 cv
2402.42 473.756 2429.38 456.146 2459.73 443.143 cv
2490.16 430.093 2523.23 423.477 2558.01 423.477 cv
2598.18 423.477 2635.37 431.75 2668.57 448.067 cv
2701.76 464.393 2729.64 487.583 2751.44 516.995 cv
2762.23 532.137 2771.23 546.054 2778.26 558.437 cv
2785.37 571.045 2791.19 585.181 2795.57 600.459 cv
2803.16 627.624 2807 666.421 2807 715.805 cv
2807 743.25 2806.73 766.791 2806.2 785.771 cv
2805.64 804.708 2804.27 821.385 2802.13 835.347 cv
2799.92 849.566 2797.16 861.967 2793.93 872.212 cv
2790.63 882.675 2786.14 892.49 2780.6 901.381 cv
2669.88 1090.73 li
2662.55 1103.28 2656.18 1116.28 2650.94 1129.39 cv
2645.85 1142.09 2643.27 1155.77 2643.27 1170.07 cv
2643.27 1298.49 li
2643.27 1301.25 2641.03 1303.49 2638.27 1303.49 cv
cp
f
2479.54 1293.49 mo
2633.27 1293.49 li
2633.27 1170.07 li
2633.27 1154.49 2636.09 1139.56 2641.66 1125.67 cv
2647.08 1112.11 2653.67 1098.66 2661.24 1085.69 cv
2772 896.272 li
2772.03 896.23 2772.05 896.188 2772.08 896.147 cv
2777.19 887.955 2781.34 878.89 2784.39 869.202 cv
2787.48 859.436 2790.12 847.534 2792.24 833.823 cv
2794.32 820.271 2795.65 804.005 2796.2 785.483 cv
2796.73 766.603 2797 743.157 2797 715.805 cv
2797 667.33 2793.28 629.438 2785.95 603.182 cv
2781.8 588.686 2776.28 575.278 2769.55 563.361 cv
2762.7 551.286 2753.89 537.66 2743.35 522.873 cv
2722.56 494.831 2695.9 472.656 2664.15 457.041 cv
2632.35 441.405 2596.63 433.477 2558.01 433.477 cv
2524.59 433.477 2492.85 439.821 2463.67 452.334 cv
2434.44 464.859 2408.49 481.8 2386.54 502.684 cv
2364.66 524.579 2347.21 550.5 2334.67 579.729 cv
2322.16 608.932 2315.81 640.133 2315.81 672.465 cv
2315.81 762.171 li
2469.54 762.171 li
2469.54 674.07 li
2469.54 645.797 2479.38 623.938 2498.79 609.101 cv
2517.81 594.572 2537.73 587.206 2558.01 587.206 cv
2581.78 587.206 2602.16 595.819 2618.59 612.807 cv
2634.97 629.769 2643.27 650.379 2643.27 674.07 cv
2643.27 759.145 li
2643.27 775.295 2641.9 791.771 2639.19 808.118 cv
2636.41 824.764 2630.51 840.49 2621.66 854.867 cv
2518.96 1021.75 li
2507.41 1041.7 2497.83 1062.46 2490.5 1083.44 cv
2483.23 1104.2 2479.54 1126.33 2479.54 1149.21 cv
2479.54 1293.49 li
cp
2638.27 1303.49 mo
2474.54 1303.49 li
2471.78 1303.49 2469.54 1301.25 2469.54 1298.49 cv
2469.54 1149.21 li
2469.54 1125.2 2473.42 1101.96 2481.06 1080.13 cv
2488.6 1058.55 2498.46 1037.19 2510.35 1016.68 cv
2510.37 1016.64 2510.39 1016.6 2510.41 1016.56 cv
2613.15 849.625 li
2621.31 836.353 2626.76 821.836 2629.33 806.476 cv
2631.94 790.676 2633.27 774.749 2633.27 759.145 cv
2633.27 674.07 li
2633.27 653.06 2625.91 634.787 2611.4 619.756 cv
2596.72 604.583 2579.26 597.206 2558.01 597.206 cv
2539.97 597.206 2522.09 603.881 2504.87 617.045 cv
2487.83 630.072 2479.54 648.725 2479.54 674.07 cv
2479.54 767.171 li
2479.54 769.932 2477.3 772.171 2474.54 772.171 cv
2310.81 772.171 li
2308.05 772.171 2305.81 769.932 2305.81 767.171 cv
2305.81 672.465 li
2305.81 638.772 2312.43 606.246 2325.48 575.79 cv
2338.53 545.365 2356.71 518.375 2379.51 495.569 cv
2379.54 495.54 2379.57 495.511 2379.6 495.483 cv
2402.42 473.756 2429.38 456.146 2459.73 443.143 cv
2490.16 430.093 2523.23 423.477 2558.01 423.477 cv
2598.18 423.477 2635.37 431.75 2668.57 448.067 cv
2701.76 464.393 2729.64 487.583 2751.44 516.995 cv
2762.23 532.137 2771.23 546.054 2778.26 558.437 cv
2785.37 571.045 2791.19 585.181 2795.57 600.459 cv
2803.16 627.624 2807 666.421 2807 715.805 cv
2807 743.25 2806.73 766.791 2806.2 785.771 cv
2805.64 804.708 2804.27 821.385 2802.13 835.347 cv
2799.92 849.566 2797.16 861.967 2793.93 872.212 cv
2790.63 882.675 2786.14 892.49 2780.6 901.381 cv
2669.88 1090.73 li
2662.55 1103.28 2656.18 1116.28 2650.94 1129.39 cv
2645.85 1142.09 2643.27 1155.77 2643.27 1170.07 cv
2643.27 1298.49 li
2643.27 1301.25 2641.03 1303.49 2638.27 1303.49 cv
cp
@
2995.02 1586 mo
2634.49 1586 li
2631.74 1586 2629.51 1583.76 2629.51 1581 cv
2629.51 1422.27 li
2476.29 1422.27 li
2476.29 1581 li
2476.29 1583.76 2474.06 1586 2471.3 1586 cv
647.815 1586 li
645.878 1586 644.117 1584.88 643.298 1583.11 cv
642.48 1581.35 642.752 1579.28 643.997 1577.79 cv
723.962 1482.13 li
651.96 1422.47 li
650.189 1421 649.647 1418.51 650.648 1416.44 cv
666.242 1384.12 674.148 1345.43 674.148 1301.44 cv
674.148 697.885 li
674.148 652.804 666.224 612.456 650.597 577.96 cv
634.974 543.477 614.4 514.34 589.447 491.361 cv
563.406 469.438 534.072 452.476 502.254 440.943 cv
470.384 429.424 437.849 423.583 405.556 423.583 cv
373.24 423.583 340.705 429.424 308.855 440.944 cv
277.044 452.465 248.243 469.431 223.255 491.369 cv
197.258 514.324 176.146 543.461 160.516 577.96 cv
144.889 612.456 136.965 652.804 136.965 697.885 cv
136.965 1301.44 li
136.965 1348.63 144.88 1389.5 160.491 1422.91 cv
176.1 1456.34 197.19 1484.38 223.178 1506.28 cv
223.233 1506.33 223.288 1506.38 223.341 1506.42 cv
248.339 1529.42 277.11 1546.9 308.854 1558.38 cv
310.596 1559.01 312.341 1559.64 314.091 1560.28 cv
331.969 1566.78 350.454 1573.5 368.211 1576.01 cv
370.797 1576.2 372.837 1578.36 372.837 1581 cv
372.837 1583.76 370.606 1586 367.854 1586 cv
4.9834 1586 li
4.9834 1576 li
328.445 1576 li
322.481 1573.97 316.556 1571.81 310.693 1569.68 cv
308.949 1569.04 307.21 1568.41 305.476 1567.79 cv
272.517 1555.87 242.643 1537.73 216.686 1513.87 cv
189.62 1491.04 167.676 1461.87 151.467 1427.16 cv
135.231 1392.41 126.998 1350.11 126.998 1301.44 cv
126.998 697.885 li
126.998 651.367 135.222 609.626 151.442 573.822 cv
167.66 538.027 189.609 507.757 216.681 483.853 cv
242.618 461.082 272.488 443.484 305.474 431.537 cv
338.412 419.624 372.084 413.583 405.556 413.583 cv
439.003 413.583 472.675 419.624 505.636 431.536 cv
538.599 443.484 568.981 461.06 595.944 483.777 cv
595.999 483.824 596.054 483.872 596.107 483.921 cv
622.088 507.825 643.474 538.071 659.67 573.822 cv
675.891 609.626 684.115 651.367 684.115 697.885 cv
684.115 1301.44 li
684.115 1345.36 676.439 1384.29 661.295 1417.23 cv
734.181 1477.62 li
735.204 1478.47 735.849 1479.7 735.97 1481.02 cv
736.091 1482.35 735.679 1483.67 734.825 1484.69 cv
658.499 1576 li
2466.32 1576 li
2466.32 1417.27 li
2466.32 1414.51 2468.55 1412.27 2471.3 1412.27 cv
2634.49 1412.27 li
2637.24 1412.27 2639.47 1414.51 2639.47 1417.27 cv
2639.47 1576 li
2995.02 1576 li
2995.02 1586 li
cp
f
405.556 418.583 mo
377.353 418.583 348.994 422.951 321.06 431.582 cv
348.995 422.951 377.353 418.583 405.556 418.583 cv
cp
488.12 430.995 mo
493.409 432.59 498.687 434.339 503.943 436.239 cv
514.186 439.952 524.175 444.216 533.885 449.02 cv
524.175 444.217 514.186 439.951 503.943 436.239 cv
498.685 434.338 493.411 432.591 488.12 430.995 cv
cp
533.887 449.021 mo
534.484 449.316 535.08 449.613 535.675 449.913 cv
535.079 449.613 534.485 449.316 533.887 449.021 cv
cp
535.683 449.917 mo
535.739 449.945 535.792 449.972 535.848 450 cv
535.792 449.972 535.739 449.945 535.683 449.917 cv
cp
535.864 450.008 mo
535.918 450.035 535.977 450.065 536.031 450.092 cv
535.975 450.064 535.92 450.036 535.864 450.008 cv
cp
536.042 450.098 mo
536.098 450.126 536.153 450.154 536.208 450.182 cv
536.153 450.154 536.098 450.126 536.042 450.098 cv
cp
536.221 450.188 mo
536.277 450.217 536.329 450.243 536.384 450.271 cv
536.331 450.244 536.275 450.216 536.221 450.188 cv
cp
536.401 450.279 mo
536.453 450.306 536.506 450.333 536.559 450.359 cv
536.506 450.333 536.453 450.306 536.401 450.279 cv
cp
536.582 450.371 mo
536.632 450.396 536.683 450.423 536.733 450.448 cv
536.683 450.422 536.632 450.396 536.582 450.371 cv
cp
536.761 450.462 mo
536.811 450.488 536.863 450.514 536.913 450.54 cv
536.863 450.514 536.811 450.488 536.761 450.462 cv
cp
536.939 450.553 mo
536.99 450.579 537.041 450.604 537.09 450.63 cv
537.04 450.604 536.99 450.579 536.939 450.553 cv
cp
537.118 450.644 mo
537.17 450.671 537.222 450.697 537.274 450.724 cv
537.224 450.698 537.169 450.67 537.118 450.644 cv
cp
537.296 450.735 mo
537.348 450.762 537.402 450.789 537.454 450.816 cv
537.4 450.788 537.35 450.763 537.296 450.735 cv
cp
537.474 450.826 mo
537.528 450.854 537.583 450.882 537.637 450.91 cv
537.583 450.882 537.528 450.854 537.474 450.826 cv
cp
537.652 450.917 mo
537.704 450.944 537.76 450.973 537.813 451 cv
537.759 450.972 537.706 450.945 537.652 450.917 cv
cp
537.831 451.009 mo
537.885 451.037 537.938 451.064 537.992 451.092 cv
537.938 451.064 537.885 451.037 537.831 451.009 cv
cp
538.009 451.101 mo
538.061 451.127 538.116 451.156 538.168 451.183 cv
538.114 451.155 538.063 451.128 538.009 451.101 cv
cp
538.188 451.193 mo
538.244 451.221 538.298 451.25 538.354 451.278 cv
538.298 451.25 538.244 451.221 538.188 451.193 cv
cp
538.364 451.284 mo
538.418 451.312 538.472 451.339 538.526 451.367 cv
538.472 451.339 538.418 451.312 538.364 451.284 cv
cp
538.544 451.377 mo
538.596 451.404 538.647 451.43 538.699 451.457 cv
538.647 451.43 538.596 451.404 538.544 451.377 cv
cp
538.724 451.47 mo
538.772 451.495 538.819 451.519 538.867 451.544 cv
538.819 451.519 538.772 451.495 538.724 451.47 cv
cp
538.905 451.563 mo
538.951 451.588 539 451.613 539.046 451.637 cv
539 451.613 538.952 451.588 538.905 451.563 cv
cp
539.082 451.655 mo
539.13 451.681 539.177 451.705 539.225 451.73 cv
539.179 451.706 539.128 451.68 539.082 451.655 cv
cp
539.26 451.748 mo
539.31 451.774 539.356 451.798 539.407 451.825 cv
539.356 451.798 539.31 451.774 539.26 451.748 cv
cp
539.437 451.84 mo
539.485 451.865 539.532 451.89 539.58 451.916 cv
539.532 451.89 539.485 451.865 539.437 451.84 cv
cp
539.616 451.934 mo
539.662 451.958 539.709 451.982 539.755 452.006 cv
539.707 451.981 539.664 451.959 539.616 451.934 cv
cp
539.794 452.027 mo
539.839 452.05 539.887 452.076 539.932 452.099 cv
539.887 452.076 539.839 452.05 539.794 452.027 cv
cp
539.972 452.12 mo
540.018 452.145 540.068 452.17 540.114 452.195 cv
540.068 452.17 540.018 452.145 539.972 452.12 cv
cp
540.148 452.213 mo
540.196 452.238 540.242 452.262 540.291 452.288 cv
540.242 452.262 540.196 452.238 540.148 452.213 cv
cp
540.326 452.307 mo
540.375 452.332 540.417 452.354 540.465 452.379 cv
540.419 452.355 540.373 452.331 540.326 452.307 cv
cp
540.505 452.4 mo
540.551 452.425 540.601 452.451 540.646 452.475 cv
540.599 452.45 540.553 452.426 540.505 452.4 cv
cp
540.681 452.493 mo
540.729 452.519 540.777 452.544 540.825 452.569 cv
540.777 452.544 540.729 452.519 540.681 452.493 cv
cp
540.858 452.587 mo
540.908 452.613 540.954 452.638 541.004 452.664 cv
540.954 452.638 540.908 452.613 540.858 452.587 cv
cp
541.035 452.68 mo
541.084 452.707 541.133 452.732 541.183 452.759 cv
541.133 452.732 541.084 452.707 541.035 452.68 cv
cp
541.211 452.774 mo
541.258 452.798 541.305 452.824 541.351 452.848 cv
541.305 452.824 541.258 452.798 541.211 452.774 cv
cp
541.392 452.87 mo
541.435 452.892 541.479 452.917 541.522 452.939 cv
541.478 452.915 541.437 452.894 541.392 452.87 cv
cp
541.571 452.965 mo
541.614 452.988 541.655 453.01 541.698 453.032 cv
541.655 453.01 541.614 452.988 541.571 452.965 cv
cp
541.748 453.059 mo
541.79 453.082 541.833 453.104 541.875 453.127 cv
541.833 453.104 541.79 453.082 541.748 453.059 cv
cp
541.925 453.154 mo
541.969 453.177 542.011 453.2 542.055 453.223 cv
542.013 453.201 541.967 453.176 541.925 453.154 cv
cp
542.1 453.247 mo
542.146 453.272 542.195 453.298 542.241 453.323 cv
542.193 453.297 542.148 453.273 542.1 453.247 cv
cp
542.275 453.341 mo
542.321 453.366 542.366 453.39 542.413 453.415 cv
542.366 453.39 542.321 453.366 542.275 453.341 cv
cp
542.454 453.437 mo
542.498 453.46 542.541 453.483 542.585 453.507 cv
542.541 453.483 542.499 453.46 542.454 453.437 cv
cp
542.631 453.532 mo
542.675 453.556 542.721 453.58 542.765 453.604 cv
542.719 453.579 542.677 453.557 542.631 453.532 cv
cp
542.807 453.626 mo
542.853 453.651 542.901 453.677 542.947 453.702 cv
542.899 453.676 542.854 453.652 542.807 453.626 cv
cp
542.982 453.721 mo
543.03 453.747 543.077 453.772 543.125 453.798 cv
543.077 453.772 543.03 453.747 542.982 453.721 cv
cp
543.158 453.816 mo
543.206 453.842 543.25 453.866 543.299 453.892 cv
543.252 453.867 543.204 453.841 543.158 453.816 cv
cp
543.336 453.912 mo
543.38 453.936 543.426 453.961 543.47 453.985 cv
543.426 453.961 543.38 453.936 543.336 453.912 cv
cp
543.514 454.008 mo
543.557 454.032 543.604 454.057 543.647 454.081 cv
543.604 454.057 543.557 454.032 543.514 454.008 cv
cp
543.689 454.104 mo
543.732 454.127 543.774 454.15 543.817 454.173 cv
543.774 454.15 543.732 454.127 543.689 454.104 cv
cp
543.868 454.201 mo
543.912 454.225 543.954 454.248 543.998 454.271 cv
543.956 454.249 543.911 454.224 543.868 454.201 cv
cp
544.042 454.295 mo
544.086 454.319 544.133 454.345 544.177 454.369 cv
544.131 454.344 544.088 454.32 544.042 454.295 cv
cp
544.217 454.391 mo
544.263 454.416 544.311 454.442 544.356 454.467 cv
544.311 454.442 544.263 454.416 544.217 454.391 cv
cp
544.393 454.487 mo
544.438 454.512 544.485 454.537 544.531 454.563 cv
544.485 454.537 544.438 454.512 544.393 454.487 cv
cp
544.569 454.583 mo
544.615 454.608 544.664 454.635 544.71 454.66 cv
544.664 454.635 544.615 454.608 544.569 454.583 cv
cp
544.744 454.679 mo
544.79 454.704 544.836 454.729 544.881 454.754 cv
544.836 454.729 544.79 454.704 544.744 454.679 cv
cp
544.922 454.776 mo
544.966 454.801 545.009 454.825 545.053 454.849 cv
545.009 454.824 544.966 454.801 544.922 454.776 cv
cp
545.1 454.874 mo
545.142 454.897 545.18 454.918 545.222 454.942 cv
545.18 454.918 545.142 454.897 545.1 454.874 cv
cp
545.277 454.972 mo
545.317 454.994 545.361 455.018 545.401 455.041 cv
545.359 455.017 545.319 454.995 545.277 454.972 cv
cp
545.451 455.068 mo
545.493 455.091 545.533 455.113 545.575 455.136 cv
545.533 455.113 545.493 455.091 545.451 455.068 cv
cp
545.627 455.165 mo
545.671 455.189 545.711 455.211 545.754 455.236 cv
545.712 455.212 545.669 455.188 545.627 455.165 cv
cp
545.801 455.262 mo
545.844 455.285 545.886 455.309 545.928 455.332 cv
545.886 455.309 545.844 455.285 545.801 455.262 cv
cp
545.978 455.359 mo
546.02 455.383 546.063 455.406 546.104 455.43 cv
546.063 455.406 546.02 455.383 545.978 455.359 cv
cp
546.153 455.456 mo
546.196 455.48 546.238 455.504 546.282 455.528 cv
546.238 455.504 546.196 455.48 546.153 455.456 cv
cp
546.327 455.553 mo
546.371 455.578 546.416 455.603 546.459 455.627 cv
546.416 455.603 546.371 455.578 546.327 455.553 cv
cp
546.502 455.651 mo
546.546 455.675 546.59 455.7 546.634 455.724 cv
546.59 455.7 546.546 455.675 546.502 455.651 cv
cp
546.677 455.749 mo
546.721 455.773 546.764 455.797 546.808 455.822 cv
546.764 455.797 546.721 455.773 546.677 455.749 cv
cp
546.854 455.847 mo
546.897 455.872 546.941 455.896 546.985 455.921 cv
546.941 455.896 546.897 455.872 546.854 455.847 cv
cp
547.027 455.944 mo
547.072 455.969 547.116 455.994 547.162 456.02 cv
547.116 455.994 547.072 455.969 547.027 455.944 cv
cp
547.202 456.042 mo
547.246 456.067 547.291 456.092 547.334 456.116 cv
547.291 456.092 547.246 456.067 547.202 456.042 cv
cp
547.377 456.141 mo
547.423 456.166 547.469 456.192 547.514 456.217 cv
547.469 456.192 547.423 456.166 547.377 456.141 cv
cp
547.55 456.238 mo
547.596 456.264 547.641 456.289 547.687 456.315 cv
547.641 456.289 547.596 456.264 547.55 456.238 cv
cp
547.726 456.337 mo
547.771 456.362 547.82 456.39 547.866 456.416 cv
547.818 456.389 547.773 456.363 547.726 456.337 cv
cp
547.9 456.435 mo
547.943 456.459 547.99 456.486 548.034 456.51 cv
547.988 456.485 547.945 456.46 547.9 456.435 cv
cp
548.077 456.535 mo
548.122 456.561 548.168 456.587 548.214 456.612 cv
548.168 456.587 548.122 456.561 548.077 456.535 cv
cp
548.249 456.632 mo
548.294 456.658 548.343 456.686 548.388 456.711 cv
548.341 456.685 548.296 456.659 548.249 456.632 cv
cp
548.423 456.731 mo
548.469 456.757 548.516 456.784 548.562 456.81 cv
548.516 456.784 548.469 456.757 548.423 456.731 cv
cp
548.599 456.831 mo
548.644 456.856 548.688 456.881 548.733 456.907 cv
548.688 456.881 548.644 456.856 548.599 456.831 cv
cp
548.774 456.93 mo
548.819 456.956 548.866 456.982 548.911 457.008 cv
548.866 456.982 548.819 456.956 548.774 456.93 cv
cp
548.947 457.029 mo
548.992 457.055 549.037 457.08 549.083 457.106 cv
549.037 457.08 548.992 457.055 548.947 457.029 cv
cp
549.123 457.129 mo
549.168 457.155 549.215 457.182 549.26 457.208 cv
549.215 457.182 549.168 457.155 549.123 457.129 cv
cp
549.295 457.228 mo
549.341 457.253 549.387 457.28 549.432 457.306 cv
549.387 457.28 549.341 457.253 549.295 457.228 cv
cp
549.47 457.328 mo
549.516 457.354 549.561 457.38 549.606 457.406 cv
549.561 457.38 549.516 457.354 549.47 457.328 cv
cp
549.645 457.428 mo
549.689 457.454 549.732 457.479 549.778 457.504 cv
549.732 457.479 549.689 457.454 549.645 457.428 cv
cp
549.819 457.528 mo
549.863 457.553 549.906 457.578 549.949 457.603 cv
549.905 457.578 549.863 457.553 549.819 457.528 cv
cp
549.995 457.629 mo
550.038 457.654 550.08 457.678 550.123 457.703 cv
550.08 457.678 550.038 457.654 549.995 457.629 cv
cp
550.167 457.729 mo
550.213 457.755 550.255 457.779 550.3 457.805 cv
550.255 457.779 550.213 457.755 550.167 457.729 cv
cp
550.34 457.828 mo
550.386 457.854 550.429 457.879 550.474 457.906 cv
550.429 457.879 550.386 457.854 550.34 457.828 cv
cp
550.514 457.929 mo
550.56 457.955 550.604 457.98 550.649 458.006 cv
550.604 457.98 550.56 457.955 550.514 457.929 cv
cp
550.688 458.029 mo
550.733 458.055 550.776 458.081 550.822 458.106 cv
550.776 458.081 550.733 458.055 550.688 458.029 cv
cp
550.861 458.13 mo
550.906 458.156 550.95 458.181 550.995 458.207 cv
550.952 458.182 550.905 458.155 550.861 458.13 cv
cp
551.035 458.231 mo
551.081 458.257 551.123 458.281 551.167 458.308 cv
551.124 458.282 551.079 458.256 551.035 458.231 cv
cp
551.208 458.332 mo
551.254 458.358 551.299 458.384 551.345 458.411 cv
551.299 458.384 551.254 458.358 551.208 458.332 cv
cp
551.38 458.432 mo
551.426 458.458 551.472 458.485 551.517 458.511 cv
551.472 458.485 551.426 458.458 551.38 458.432 cv
cp
551.555 458.533 mo
551.6 458.56 551.644 458.585 551.689 458.612 cv
551.646 458.586 551.598 458.559 551.555 458.533 cv
cp
551.729 458.635 mo
551.773 458.661 551.815 458.686 551.861 458.712 cv
551.817 458.687 551.772 458.66 551.729 458.635 cv
cp
551.902 458.736 mo
551.945 458.762 551.988 458.787 552.031 458.812 cv
551.988 458.787 551.945 458.762 551.902 458.736 cv
cp
552.076 458.838 mo
552.122 458.865 552.162 458.889 552.207 458.915 cv
552.164 458.89 552.12 458.864 552.076 458.838 cv
cp
552.248 458.939 mo
552.293 458.966 552.335 458.991 552.38 459.017 cv
552.337 458.992 552.292 458.965 552.248 458.939 cv
cp
552.421 459.041 mo
552.464 459.066 552.509 459.093 552.552 459.118 cv
552.508 459.093 552.465 459.066 552.421 459.041 cv
cp
552.595 459.143 mo
552.638 459.168 552.681 459.194 552.725 459.22 cv
552.681 459.194 552.638 459.168 552.595 459.143 cv
cp
552.768 459.246 mo
552.811 459.271 552.853 459.296 552.896 459.321 cv
552.853 459.296 552.812 459.271 552.768 459.246 cv
cp
552.94 459.347 mo
552.985 459.374 553.029 459.4 553.074 459.426 cv
553.031 459.401 552.983 459.373 552.94 459.347 cv
cp
553.111 459.448 mo
553.156 459.475 553.2 459.501 553.245 459.528 cv
553.2 459.501 553.156 459.475 553.111 459.448 cv
cp
553.285 459.551 mo
553.33 459.578 553.374 459.604 553.418 459.631 cv
553.375 459.605 553.328 459.577 553.285 459.551 cv
cp
553.457 459.653 mo
553.501 459.68 553.546 459.707 553.591 459.733 cv
553.546 459.707 553.501 459.68 553.457 459.653 cv
cp
553.629 459.756 mo
553.674 459.783 553.718 459.809 553.763 459.835 cv
553.718 459.809 553.674 459.783 553.629 459.756 cv
cp
553.803 459.859 mo
553.846 459.885 553.886 459.909 553.93 459.935 cv
553.888 459.91 553.844 459.884 553.803 459.859 cv
cp
553.977 459.963 mo
554.019 459.988 554.063 460.014 554.104 460.039 cv
554.063 460.014 554.019 459.988 553.977 459.963 cv
cp
554.148 460.065 mo
554.193 460.092 554.235 460.118 554.28 460.145 cv
554.237 460.119 554.191 460.091 554.148 460.065 cv
cp
554.319 460.167 mo
554.364 460.194 554.407 460.22 554.452 460.247 cv
554.406 460.22 554.364 460.194 554.319 460.167 cv
cp
554.492 460.271 mo
554.535 460.297 554.578 460.323 554.621 460.349 cv
554.578 460.323 554.535 460.297 554.492 460.271 cv
cp
554.665 460.375 mo
554.706 460.4 554.75 460.426 554.791 460.451 cv
554.749 460.426 554.706 460.4 554.665 460.375 cv
cp
554.838 460.479 mo
554.878 460.503 554.919 460.528 554.958 460.552 cv
554.919 460.528 554.878 460.503 554.838 460.479 cv
cp
555.012 460.584 mo
555.052 460.608 555.09 460.631 555.129 460.654 cv
555.09 460.631 555.052 460.608 555.012 460.584 cv
cp
555.185 460.688 mo
555.224 460.711 555.262 460.735 555.301 460.758 cv
555.262 460.735 555.224 460.711 555.185 460.688 cv
cp
555.355 460.791 mo
555.396 460.816 555.438 460.841 555.479 460.866 cv
555.438 460.841 555.396 460.816 555.355 460.791 cv
cp
555.525 460.894 mo
555.567 460.919 555.611 460.946 555.654 460.972 cv
555.609 460.945 555.569 460.92 555.525 460.894 cv
cp
555.695 460.997 mo
555.74 461.024 555.782 461.049 555.827 461.076 cv
555.782 461.049 555.74 461.024 555.695 460.997 cv
cp
555.867 461.101 mo
555.91 461.127 555.951 461.152 555.994 461.178 cv
555.951 461.152 555.91 461.127 555.867 461.101 cv
cp
556.04 461.206 mo
556.083 461.232 556.127 461.259 556.169 461.285 cv
556.127 461.259 556.083 461.232 556.04 461.206 cv
cp
556.209 461.309 mo
556.254 461.336 556.297 461.363 556.342 461.39 cv
556.297 461.363 556.254 461.336 556.209 461.309 cv
cp
556.38 461.414 mo
556.425 461.441 556.469 461.467 556.514 461.495 cv
556.469 461.467 556.425 461.441 556.38 461.414 cv
cp
556.552 461.518 mo
556.597 461.545 556.638 461.571 556.683 461.598 cv
556.64 461.572 556.595 461.544 556.552 461.518 cv
cp
556.724 461.624 mo
556.767 461.649 556.812 461.677 556.855 461.704 cv
556.81 461.676 556.769 461.651 556.724 461.624 cv
cp
556.895 461.728 mo
556.936 461.753 556.98 461.78 557.021 461.805 cv
556.979 461.779 556.938 461.754 556.895 461.728 cv
cp
557.069 461.835 mo
557.11 461.86 557.151 461.885 557.192 461.911 cv
557.149 461.884 557.112 461.861 557.069 461.835 cv
cp
557.239 461.939 mo
557.281 461.965 557.321 461.99 557.362 462.015 cv
557.321 461.99 557.281 461.965 557.239 461.939 cv
cp
557.412 462.045 mo
557.452 462.07 557.49 462.094 557.531 462.119 cv
557.492 462.095 557.45 462.069 557.412 462.045 cv
cp
557.583 462.151 mo
557.624 462.176 557.662 462.2 557.703 462.225 cv
557.664 462.201 557.622 462.175 557.583 462.151 cv
cp
557.753 462.256 mo
557.792 462.28 557.833 462.305 557.872 462.33 cv
557.831 462.304 557.794 462.281 557.753 462.256 cv
cp
557.926 462.363 mo
557.965 462.387 557.999 462.408 558.038 462.432 cv
558.001 462.409 557.963 462.386 557.926 462.363 cv
cp
558.098 462.47 mo
558.136 462.493 558.173 462.516 558.21 462.539 cv
558.173 462.516 558.136 462.493 558.098 462.47 cv
cp
558.268 462.575 mo
558.306 462.598 558.343 462.621 558.38 462.645 cv
558.343 462.621 558.306 462.598 558.268 462.575 cv
cp
558.439 462.681 mo
558.474 462.703 558.514 462.728 558.55 462.75 cv
558.512 462.727 558.476 462.704 558.439 462.681 cv
cp
558.611 462.788 mo
558.646 462.81 558.683 462.833 558.719 462.855 cv
558.683 462.833 558.646 462.81 558.611 462.788 cv
cp
558.78 462.894 mo
558.818 462.917 558.854 462.939 558.892 462.963 cv
558.854 462.939 558.818 462.917 558.78 462.894 cv
cp
558.951 463 mo
558.987 463.022 559.025 463.046 559.061 463.068 cv
559.023 463.045 558.988 463.023 558.951 463 cv
cp
559.122 463.106 mo
559.157 463.128 559.193 463.151 559.229 463.173 cv
559.193 463.151 559.157 463.128 559.122 463.106 cv
cp
559.295 463.215 mo
559.329 463.236 559.36 463.256 559.394 463.277 cv
559.36 463.256 559.329 463.236 559.295 463.215 cv
cp
559.465 463.322 mo
559.499 463.343 559.533 463.364 559.566 463.385 cv
559.533 463.364 559.499 463.343 559.465 463.322 cv
cp
559.635 463.428 mo
559.668 463.45 559.7 463.469 559.734 463.49 cv
559.7 463.469 559.668 463.45 559.635 463.428 cv
cp
559.807 463.537 mo
559.839 463.557 559.87 463.576 559.902 463.596 cv
559.87 463.576 559.839 463.557 559.807 463.537 cv
cp
559.978 463.644 mo
560.009 463.664 560.041 463.684 560.073 463.704 cv
560.041 463.684 560.009 463.664 559.978 463.644 cv
cp
560.146 463.75 mo
560.18 463.771 560.213 463.792 560.247 463.813 cv
560.213 463.792 560.18 463.771 560.146 463.75 cv
cp
560.315 463.856 mo
560.349 463.878 560.381 463.898 560.415 463.92 cv
560.381 463.898 560.349 463.878 560.315 463.856 cv
cp
560.486 463.965 mo
560.518 463.985 560.55 464.006 560.583 464.026 cv
560.55 464.006 560.518 463.985 560.486 463.965 cv
cp
560.657 464.073 mo
560.688 464.093 560.72 464.113 560.752 464.133 cv
560.72 464.113 560.688 464.093 560.657 464.073 cv
cp
560.825 464.18 mo
560.857 464.2 560.891 464.222 560.923 464.242 cv
560.89 464.221 560.859 464.201 560.825 464.18 cv
cp
560.996 464.288 mo
561.025 464.307 561.058 464.328 561.088 464.347 cv
561.058 464.328 561.025 464.307 560.996 464.288 cv
cp
561.168 464.398 mo
561.195 464.415 561.226 464.435 561.252 464.452 cv
561.224 464.434 561.197 464.417 561.168 464.398 cv
cp
561.34 464.507 mo
561.366 464.524 561.396 464.542 561.421 464.56 cv
561.396 464.542 561.366 464.524 561.34 464.507 cv
cp
561.507 464.614 mo
561.535 464.632 561.567 464.652 561.595 464.67 cv
561.565 464.651 561.537 464.633 561.507 464.614 cv
cp
561.676 464.722 mo
561.704 464.74 561.735 464.76 561.764 464.778 cv
561.734 464.759 561.706 464.741 561.676 464.722 cv
cp
561.845 464.831 mo
561.873 464.849 561.904 464.869 561.933 464.887 cv
561.903 464.867 561.875 464.85 561.845 464.831 cv
cp
562.015 464.939 mo
562.042 464.957 562.073 464.977 562.101 464.995 cv
562.073 464.977 562.042 464.957 562.015 464.939 cv
cp
562.184 465.048 mo
562.212 465.066 562.241 465.084 562.269 465.103 cv
562.241 465.084 562.212 465.066 562.184 465.048 cv
cp
562.355 465.158 mo
562.382 465.175 562.407 465.191 562.433 465.208 cv
562.407 465.191 562.382 465.175 562.355 465.158 cv
cp
562.527 465.269 mo
562.551 465.284 562.578 465.302 562.603 465.317 cv
562.578 465.302 562.551 465.284 562.527 465.269 cv
cp
562.693 465.375 mo
562.719 465.393 562.746 465.41 562.772 465.427 cv
562.746 465.41 562.719 465.393 562.693 465.375 cv
cp
562.863 465.486 mo
562.889 465.503 562.915 465.52 562.941 465.537 cv
562.915 465.52 562.889 465.503 562.863 465.486 cv
cp
563.031 465.595 mo
563.056 465.611 563.08 465.626 563.105 465.642 cv
563.082 465.627 563.054 465.609 563.031 465.595 cv
cp
563.206 465.708 mo
563.226 465.721 563.247 465.734 563.267 465.747 cv
563.247 465.734 563.226 465.721 563.206 465.708 cv
cp
563.377 465.819 mo
563.395 465.831 563.414 465.843 563.431 465.854 cv
563.414 465.843 563.395 465.831 563.377 465.819 cv
cp
563.546 465.929 mo
563.565 465.941 563.582 465.952 563.601 465.965 cv
563.582 465.952 563.565 465.941 563.546 465.929 cv
cp
563.714 466.038 mo
563.731 466.049 563.751 466.063 563.769 466.074 cv
563.75 466.062 563.733 466.051 563.714 466.038 cv
cp
563.883 466.148 mo
563.902 466.161 563.919 466.172 563.939 466.185 cv
563.919 466.172 563.902 466.161 563.883 466.148 cv
cp
564.05 466.258 mo
564.069 466.27 564.087 466.282 564.106 466.294 cv
564.087 466.282 564.069 466.27 564.05 466.258 cv
cp
564.219 466.368 mo
564.238 466.38 564.257 466.393 564.276 466.405 cv
564.257 466.393 564.238 466.38 564.219 466.368 cv
cp
564.388 466.479 mo
564.405 466.49 564.424 466.502 564.442 466.514 cv
564.424 466.502 564.405 466.49 564.388 466.479 cv
cp
564.558 466.59 mo
564.575 466.602 564.59 466.611 564.607 466.623 cv
564.59 466.611 564.575 466.602 564.558 466.59 cv
cp
564.727 466.701 mo
564.743 466.711 564.759 466.722 564.774 466.732 cv
564.759 466.722 564.743 466.711 564.727 466.701 cv
cp
564.893 466.811 mo
564.911 466.822 564.927 466.833 564.945 466.845 cv
564.927 466.833 564.911 466.822 564.893 466.811 cv
cp
565.063 466.922 mo
565.078 466.933 565.093 466.942 565.109 466.953 cv
565.095 466.944 565.077 466.931 565.063 466.922 cv
cp
565.232 467.034 mo
565.247 467.043 565.261 467.053 565.274 467.062 cv
565.261 467.053 565.247 467.043 565.232 467.034 cv
cp
565.402 467.146 mo
565.416 467.155 565.426 467.162 565.439 467.171 cv
565.427 467.163 565.414 467.154 565.402 467.146 cv
cp
565.571 467.258 mo
565.582 467.265 565.595 467.274 565.605 467.281 cv
565.593 467.273 565.583 467.266 565.571 467.258 cv
cp
565.742 467.372 mo
565.751 467.377 565.759 467.383 565.768 467.389 cv
565.759 467.383 565.751 467.377 565.742 467.372 cv
cp
565.908 467.482 mo
565.919 467.489 565.928 467.495 565.939 467.502 cv
565.928 467.495 565.919 467.489 565.908 467.482 cv
cp
566.076 467.593 mo
566.086 467.6 566.095 467.606 566.105 467.613 cv
566.097 467.607 566.084 467.599 566.076 467.593 cv
cp
566.243 467.705 mo
566.254 467.712 566.262 467.717 566.272 467.725 cv
566.264 467.719 566.252 467.711 566.243 467.705 cv
cp
566.412 467.817 mo
566.419 467.822 566.431 467.83 566.438 467.834 cv
566.429 467.829 566.421 467.823 566.412 467.817 cv
cp
566.58 467.93 mo
566.587 467.934 566.597 467.941 566.604 467.946 cv
566.596 467.94 566.589 467.936 566.58 467.93 cv
cp
566.75 468.043 mo
566.756 468.048 566.761 468.051 566.768 468.056 cv
566.763 468.052 566.755 468.046 566.75 468.043 cv
cp
566.917 468.155 mo
566.923 468.16 566.929 468.163 566.936 468.167 cv
566.93 468.164 566.922 468.158 566.917 468.155 cv
cp
567.088 468.27 mo
567.092 468.272 567.093 468.273 567.096 468.275 cv
567.093 468.273 567.092 468.272 567.088 468.27 cv
cp
567.253 468.381 mo
567.257 468.383 567.263 468.388 567.266 468.39 cv
567.261 468.386 567.259 468.385 567.253 468.381 cv
cp
567.419 468.493 mo
567.423 468.495 567.43 468.5 567.434 468.502 cv
567.429 468.499 567.425 468.497 567.419 468.493 cv
cp
567.587 468.606 mo
567.591 468.608 567.596 468.612 567.599 468.614 cv
567.596 468.612 567.591 468.608 567.587 468.606 cv
cp
567.754 468.719 mo
567.758 468.721 567.763 468.724 567.766 468.727 cv
567.763 468.724 567.758 468.721 567.754 468.719 cv
cp
567.924 468.833 mo
567.926 468.835 567.927 468.835 567.929 468.836 cv
567.924 468.833 li
cp
568.092 468.947 mo
568.093 468.948 li
568.092 468.947 li
cp
568.259 469.061 mo
568.26 469.061 li
568.259 469.061 li
cp
220.724 486.95 mo
220.68 486.987 220.637 487.026 220.593 487.064 cv
220.637 487.026 220.68 486.987 220.724 486.95 cv
cp
220.56 487.092 mo
220.559 487.094 220.557 487.095 220.556 487.096 cv
220.557 487.095 220.559 487.094 220.56 487.092 cv
cp
592.739 487.605 mo
592.765 487.63 li
592.755 487.621 592.749 487.615 592.739 487.606 cv
592.739 487.605 li
cp
220.382 487.249 mo
220.241 487.371 220.102 487.493 219.962 487.615 cv
219.25 488.245 218.542 488.877 217.836 489.516 cv
218.542 488.877 219.25 488.245 219.962 487.615 cv
220.102 487.493 220.241 487.371 220.382 487.249 cv
cp
600.506 495.085 mo
600.508 495.087 600.509 495.088 600.511 495.09 cv
600.509 495.088 600.508 495.087 600.506 495.085 cv
cp
600.649 495.229 mo
600.652 495.232 600.652 495.233 600.655 495.236 cv
600.652 495.233 600.652 495.232 600.649 495.229 cv
cp
600.79 495.372 mo
600.793 495.375 600.798 495.38 600.801 495.383 cv
600.798 495.38 600.793 495.375 600.79 495.372 cv
cp
600.933 495.517 mo
600.936 495.52 600.942 495.526 600.945 495.529 cv
600.942 495.526 600.936 495.52 600.933 495.517 cv
cp
601.073 495.659 mo
601.079 495.665 601.086 495.671 601.092 495.678 cv
601.086 495.671 601.079 495.665 601.073 495.659 cv
cp
601.214 495.802 mo
601.222 495.81 601.229 495.817 601.237 495.825 cv
601.229 495.817 601.222 495.81 601.214 495.802 cv
cp
601.356 495.946 mo
601.365 495.956 601.372 495.962 601.381 495.971 cv
601.374 495.964 601.364 495.954 601.356 495.946 cv
cp
601.5 496.092 mo
601.508 496.102 601.515 496.108 601.524 496.117 cv
601.515 496.108 601.508 496.102 601.5 496.092 cv
cp
601.64 496.236 mo
601.649 496.245 601.661 496.257 601.669 496.266 cv
601.661 496.257 601.649 496.245 601.64 496.236 cv
cp
601.781 496.38 mo
601.793 496.393 601.802 496.401 601.813 496.413 cv
601.803 496.402 601.792 496.391 601.781 496.38 cv
cp
601.922 496.524 mo
601.935 496.537 601.946 496.549 601.958 496.561 cv
601.946 496.549 601.935 496.537 601.922 496.524 cv
cp
602.062 496.667 mo
602.077 496.683 602.089 496.695 602.104 496.71 cv
602.09 496.697 602.075 496.681 602.062 496.667 cv
cp
602.202 496.812 mo
602.217 496.827 602.233 496.844 602.249 496.859 cv
602.232 496.842 602.218 496.828 602.202 496.812 cv
cp
602.342 496.956 mo
602.36 496.974 602.375 496.989 602.393 497.007 cv
602.376 496.991 602.359 496.973 602.342 496.956 cv
cp
602.483 497.102 mo
602.501 497.12 602.518 497.137 602.536 497.155 cv
602.519 497.138 602.5 497.118 602.483 497.102 cv
cp
602.624 497.247 mo
602.642 497.265 602.662 497.286 602.68 497.304 cv
602.661 497.284 602.644 497.267 602.624 497.247 cv
cp
602.764 497.391 mo
602.784 497.412 602.803 497.431 602.824 497.453 cv
602.804 497.433 602.783 497.411 602.764 497.391 cv
cp
602.905 497.538 mo
602.926 497.559 602.946 497.58 602.967 497.601 cv
602.948 497.582 602.925 497.558 602.905 497.538 cv
cp
603.043 497.681 mo
603.067 497.705 603.087 497.727 603.111 497.751 cv
603.089 497.728 603.065 497.704 603.043 497.681 cv
cp
603.185 497.828 mo
603.208 497.852 603.23 497.875 603.253 497.899 cv
603.231 497.876 603.207 497.851 603.185 497.828 cv
cp
603.324 497.973 mo
603.348 497.998 603.374 498.024 603.397 498.049 cv
603.373 498.023 603.35 497.999 603.324 497.973 cv
cp
603.463 498.118 mo
603.49 498.146 603.515 498.172 603.542 498.2 cv
603.515 498.172 603.49 498.146 603.463 498.118 cv
cp
603.602 498.262 mo
603.629 498.292 603.656 498.319 603.684 498.348 cv
603.657 498.321 603.628 498.29 603.602 498.262 cv
cp
603.743 498.411 mo
603.771 498.44 603.799 498.469 603.827 498.498 cv
603.799 498.469 603.771 498.44 603.743 498.411 cv
cp
603.882 498.555 mo
603.911 498.586 603.94 498.617 603.97 498.648 cv
603.94 498.617 603.911 498.586 603.882 498.555 cv
cp
604.021 498.702 mo
604.052 498.734 604.082 498.766 604.113 498.798 cv
604.083 498.768 604.05 498.732 604.021 498.702 cv
cp
604.16 498.848 mo
604.192 498.882 604.223 498.915 604.255 498.948 cv
604.223 498.915 604.192 498.882 604.16 498.848 cv
cp
604.299 498.994 mo
604.333 499.03 604.365 499.063 604.398 499.099 cv
604.365 499.063 604.333 499.03 604.299 498.994 cv
cp
604.437 499.14 mo
604.472 499.177 604.507 499.213 604.542 499.251 cv
604.507 499.213 604.472 499.177 604.437 499.14 cv
cp
604.574 499.285 mo
604.611 499.324 604.648 499.364 604.686 499.402 cv
604.648 499.364 604.611 499.324 604.574 499.285 cv
cp
604.712 499.431 mo
604.75 499.471 604.788 499.511 604.826 499.552 cv
604.788 499.511 604.75 499.471 604.712 499.431 cv
cp
604.853 499.58 mo
604.892 499.622 604.929 499.661 604.969 499.703 cv
604.929 499.661 604.892 499.622 604.853 499.58 cv
cp
604.99 499.725 mo
605.029 499.767 605.071 499.813 605.111 499.854 cv
605.071 499.812 605.029 499.767 604.99 499.725 cv
cp
605.128 499.873 mo
605.17 499.917 605.211 499.961 605.253 500.006 cv
605.211 499.961 605.17 499.917 605.128 499.873 cv
cp
605.266 500.019 mo
605.308 500.064 605.353 500.112 605.396 500.158 cv
605.352 500.111 605.31 500.065 605.266 500.019 cv
cp
605.403 500.166 mo
605.449 500.214 605.492 500.261 605.537 500.309 cv
605.493 500.262 605.447 500.212 605.403 500.166 cv
cp
605.541 500.313 mo
605.588 500.363 605.631 500.409 605.677 500.459 cv
605.632 500.41 605.586 500.361 605.541 500.313 cv
cp
605.681 500.463 mo
625.402 521.597 641.997 546.896 655.134 575.891 cv
671.058 611.041 679.131 652.086 679.131 697.885 cv
679.131 652.085 671.058 611.041 655.134 575.891 cv
641.997 546.894 625.404 521.598 605.681 500.463 cv
cp
144.239 607.5 mo
136.094 634.93 131.981 665.195 131.981 697.885 cv
131.981 1301.44 li
131.981 697.885 li
131.981 665.196 136.095 634.93 144.239 607.5 cv
cp
679.131 1301.44 mo
679.131 1301.52 679.131 1301.61 679.131 1301.69 cv
679.131 1301.61 679.131 1301.52 679.131 1301.44 cv
cp
679.131 1301.79 mo
679.131 1301.84 679.131 1301.9 679.131 1301.95 cv
679.131 1301.9 679.131 1301.84 679.131 1301.79 cv
cp
679.131 1302.06 mo
679.131 1302.11 679.131 1302.16 679.13 1302.21 cv
679.131 1302.16 679.131 1302.11 679.131 1302.06 cv
cp
679.13 1302.33 mo
679.13 1302.38 679.13 1302.42 679.13 1302.46 cv
679.13 1302.42 679.13 1302.37 679.13 1302.33 cv
cp
679.129 1302.59 mo
679.129 1302.63 679.129 1302.68 679.129 1302.72 cv
679.129 1302.68 679.129 1302.63 679.129 1302.59 cv
cp
679.128 1302.86 mo
679.128 1302.9 679.128 1302.94 679.128 1302.97 cv
679.128 1302.93 679.128 1302.9 679.128 1302.86 cv
cp
679.127 1303.12 mo
679.127 1303.16 679.127 1303.19 679.127 1303.23 cv
679.127 1303.19 679.127 1303.16 679.127 1303.12 cv
cp
679.126 1303.39 mo
679.126 1303.42 679.126 1303.45 679.125 1303.48 cv
679.126 1303.45 679.126 1303.42 679.126 1303.39 cv
cp
679.125 1303.64 mo
679.125 1303.67 679.125 1303.71 679.124 1303.74 cv
679.125 1303.7 679.125 1303.67 679.125 1303.64 cv
cp
679.123 1303.91 mo
679.123 1303.93 679.123 1303.96 679.123 1303.99 cv
679.123 1303.96 679.123 1303.93 679.123 1303.91 cv
cp
679.121 1304.17 mo
679.121 1304.19 679.121 1304.21 679.121 1304.23 cv
679.121 1304.21 679.121 1304.19 679.121 1304.17 cv
cp
679.119 1304.44 mo
679.119 1304.45 679.119 1304.47 679.119 1304.48 cv
679.119 1304.47 679.119 1304.45 679.119 1304.44 cv
cp
679.117 1304.7 mo
679.117 1304.71 679.117 1304.72 679.117 1304.73 cv
679.117 1304.72 679.117 1304.71 679.117 1304.7 cv
cp
679.114 1304.96 mo
679.114 1304.97 679.114 1304.97 679.114 1304.97 cv
679.114 1304.96 li
cp
131.981 1301.44 mo
131.981 1331.8 135.221 1359.62 141.644 1384.59 cv
135.221 1359.62 131.981 1331.8 131.981 1301.44 cv
cp
658.974 1410.18 mo
658.969 1410.19 658.964 1410.2 658.96 1410.21 cv
658.964 1410.2 658.97 1410.19 658.974 1410.18 cv
cp
658.893 1410.37 mo
657.692 1413.16 656.44 1415.91 655.134 1418.61 cv
719.018 1471.54 li
655.162 1418.64 li
656.77 1415.14 li
657.495 1413.56 658.203 1411.97 658.893 1410.37 cv
cp
196.387 1487.12 mo
196.387 1487.12 li
196.387 1487.12 li
cp
196.514 1487.27 mo
196.519 1487.27 196.525 1487.28 196.529 1487.28 cv
196.523 1487.28 196.52 1487.27 196.514 1487.27 cv
cp
196.652 1487.42 mo
196.655 1487.42 196.662 1487.43 196.667 1487.44 cv
196.661 1487.43 196.657 1487.43 196.652 1487.42 cv
cp
196.779 1487.56 mo
196.789 1487.57 196.799 1487.58 196.809 1487.6 cv
196.799 1487.58 196.789 1487.57 196.779 1487.56 cv
cp
196.915 1487.71 mo
196.926 1487.73 196.936 1487.74 196.947 1487.75 cv
196.937 1487.74 196.925 1487.72 196.915 1487.71 cv
cp
197.044 1487.86 mo
197.058 1487.87 197.074 1487.89 197.088 1487.91 cv
197.074 1487.89 197.058 1487.87 197.044 1487.86 cv
cp
197.179 1488.01 mo
197.197 1488.03 197.211 1488.04 197.229 1488.06 cv
197.211 1488.04 197.197 1488.03 197.179 1488.01 cv
cp
197.309 1488.15 mo
197.329 1488.17 197.348 1488.2 197.368 1488.22 cv
197.348 1488.2 197.329 1488.17 197.309 1488.15 cv
cp
197.445 1488.3 mo
197.467 1488.33 197.487 1488.35 197.509 1488.38 cv
197.487 1488.35 197.467 1488.33 197.445 1488.3 cv
cp
197.575 1488.45 mo
197.599 1488.47 197.624 1488.5 197.648 1488.53 cv
197.624 1488.5 197.599 1488.47 197.575 1488.45 cv
cp
197.713 1488.6 mo
197.739 1488.63 197.763 1488.66 197.789 1488.68 cv
197.763 1488.66 197.739 1488.63 197.713 1488.6 cv
cp
197.843 1488.74 mo
197.872 1488.78 197.901 1488.81 197.93 1488.84 cv
197.901 1488.81 197.872 1488.78 197.843 1488.74 cv
cp
197.977 1488.89 mo
198.009 1488.93 198.042 1488.96 198.073 1489 cv
198.042 1488.96 198.009 1488.93 197.977 1488.89 cv
cp
198.106 1489.04 mo
198.141 1489.07 198.178 1489.11 198.212 1489.15 cv
198.178 1489.11 198.141 1489.07 198.106 1489.04 cv
cp
198.245 1489.19 mo
198.281 1489.23 198.318 1489.27 198.354 1489.31 cv
198.318 1489.27 198.281 1489.23 198.245 1489.19 cv
cp
198.376 1489.33 mo
198.417 1489.38 198.456 1489.42 198.496 1489.46 cv
198.456 1489.42 198.417 1489.38 198.376 1489.33 cv
cp
198.51 1489.48 mo
205.224 1496.83 212.355 1503.69 219.893 1510.04 cv
220.053 1510.18 li
234.962 1523.89 251.19 1535.67 268.57 1545.43 cv
251.16 1535.66 234.905 1523.85 219.973 1510.11 cv
212.407 1503.73 205.248 1496.85 198.51 1489.48 cv
cp
268.576 1545.43 mo
268.632 1545.47 268.688 1545.5 268.743 1545.53 cv
268.688 1545.5 268.632 1545.47 268.576 1545.43 cv
cp
268.75 1545.53 mo
268.803 1545.56 268.852 1545.59 268.904 1545.62 cv
268.852 1545.59 268.803 1545.56 268.75 1545.53 cv
cp
268.928 1545.63 mo
268.979 1545.66 269.031 1545.69 269.082 1545.72 cv
269.031 1545.69 268.979 1545.66 268.928 1545.63 cv
cp
269.102 1545.73 mo
269.15 1545.76 269.2 1545.78 269.249 1545.81 cv
269.2 1545.78 269.15 1545.76 269.102 1545.73 cv
cp
269.278 1545.83 mo
269.325 1545.85 269.37 1545.88 269.417 1545.91 cv
269.37 1545.88 269.325 1545.85 269.278 1545.83 cv
cp
269.455 1545.93 mo
269.5 1545.95 269.547 1545.98 269.592 1546 cv
269.547 1545.98 269.5 1545.95 269.455 1545.93 cv
cp
269.627 1546.02 mo
269.671 1546.05 269.716 1546.07 269.759 1546.09 cv
269.716 1546.07 269.671 1546.05 269.627 1546.02 cv
cp
269.806 1546.12 mo
269.846 1546.14 269.884 1546.16 269.923 1546.19 cv
269.884 1546.16 269.846 1546.14 269.806 1546.12 cv
cp
269.982 1546.22 mo
270.023 1546.24 270.061 1546.26 270.103 1546.29 cv
270.063 1546.26 270.022 1546.24 269.982 1546.22 cv
cp
270.156 1546.31 mo
270.196 1546.34 270.233 1546.36 270.273 1546.38 cv
270.233 1546.36 270.196 1546.34 270.156 1546.31 cv
cp
270.332 1546.41 mo
270.368 1546.43 270.409 1546.45 270.446 1546.47 cv
270.407 1546.45 270.37 1546.43 270.332 1546.41 cv
cp
270.508 1546.51 mo
270.544 1546.53 270.579 1546.55 270.616 1546.57 cv
270.579 1546.55 270.544 1546.53 270.508 1546.51 cv
cp
270.683 1546.6 mo
270.721 1546.63 270.759 1546.65 270.797 1546.67 cv
270.759 1546.65 270.721 1546.63 270.683 1546.6 cv
cp
270.857 1546.7 mo
270.894 1546.72 270.93 1546.74 270.967 1546.76 cv
270.93 1546.74 270.894 1546.72 270.857 1546.7 cv
cp
271.033 1546.8 mo
271.069 1546.82 271.105 1546.84 271.142 1546.86 cv
271.105 1546.84 271.069 1546.82 271.033 1546.8 cv
cp
271.209 1546.89 mo
271.244 1546.91 271.275 1546.93 271.31 1546.95 cv
271.277 1546.93 271.242 1546.91 271.209 1546.89 cv
cp
271.385 1546.99 mo
271.419 1547.01 271.452 1547.03 271.486 1547.04 cv
271.454 1547.03 271.418 1547.01 271.385 1546.99 cv
cp
271.561 1547.08 mo
271.594 1547.1 271.622 1547.12 271.655 1547.14 cv
271.624 1547.12 271.592 1547.1 271.561 1547.08 cv
cp
271.738 1547.18 mo
271.769 1547.2 271.8 1547.21 271.831 1547.23 cv
271.8 1547.21 271.769 1547.2 271.738 1547.18 cv
cp
271.913 1547.28 mo
271.942 1547.29 271.974 1547.31 272.003 1547.33 cv
271.974 1547.31 271.942 1547.29 271.913 1547.28 cv
cp
272.089 1547.37 mo
272.118 1547.39 272.15 1547.4 272.18 1547.42 cv
272.148 1547.4 272.119 1547.39 272.089 1547.37 cv
cp
272.267 1547.47 mo
272.294 1547.48 272.319 1547.5 272.346 1547.51 cv
272.319 1547.5 272.294 1547.48 272.267 1547.47 cv
cp
272.442 1547.56 mo
272.469 1547.58 272.498 1547.59 272.525 1547.61 cv
272.498 1547.59 272.469 1547.58 272.442 1547.56 cv
cp
272.618 1547.66 mo
272.646 1547.67 272.67 1547.68 272.697 1547.7 cv
272.67 1547.68 272.646 1547.67 272.618 1547.66 cv
cp
272.794 1547.75 mo
272.821 1547.77 272.85 1547.78 272.877 1547.8 cv
272.85 1547.78 272.821 1547.77 272.794 1547.75 cv
cp
272.97 1547.85 mo
272.996 1547.86 273.019 1547.87 273.044 1547.89 cv
273.019 1547.87 272.996 1547.86 272.97 1547.85 cv
cp
273.147 1547.94 mo
273.171 1547.95 273.196 1547.97 273.22 1547.98 cv
273.196 1547.97 273.171 1547.95 273.147 1547.94 cv
cp
273.324 1548.04 mo
273.347 1548.05 273.37 1548.06 273.392 1548.07 cv
273.37 1548.06 273.347 1548.05 273.324 1548.04 cv
cp
273.499 1548.13 mo
273.526 1548.14 273.552 1548.16 273.579 1548.17 cv
273.552 1548.16 273.526 1548.14 273.499 1548.13 cv
cp
273.676 1548.22 mo
273.698 1548.23 273.724 1548.25 273.746 1548.26 cv
273.722 1548.25 273.7 1548.23 273.676 1548.22 cv
cp
273.853 1548.32 mo
273.876 1548.33 273.901 1548.34 273.925 1548.35 cv
273.901 1548.34 273.876 1548.33 273.853 1548.32 cv
cp
274.028 1548.41 mo
274.051 1548.42 274.073 1548.43 274.095 1548.45 cv
274.073 1548.43 274.051 1548.42 274.028 1548.41 cv
cp
274.207 1548.5 mo
274.227 1548.51 274.249 1548.53 274.269 1548.54 cv
274.249 1548.53 274.227 1548.51 274.207 1548.5 cv
cp
274.385 1548.6 mo
274.404 1548.61 274.419 1548.62 274.437 1548.63 cv
274.419 1548.62 274.404 1548.61 274.385 1548.6 cv
cp
274.561 1548.69 mo
274.581 1548.7 274.599 1548.71 274.619 1548.72 cv
274.599 1548.71 274.581 1548.7 274.561 1548.69 cv
cp
274.738 1548.78 mo
274.756 1548.79 274.772 1548.8 274.79 1548.81 cv
274.773 1548.8 274.755 1548.79 274.738 1548.78 cv
cp
274.913 1548.88 mo
274.934 1548.89 274.954 1548.9 274.975 1548.91 cv
274.954 1548.9 274.934 1548.89 274.913 1548.88 cv
cp
275.092 1548.97 mo
275.11 1548.98 275.125 1548.99 275.144 1549 cv
275.127 1548.99 275.108 1548.98 275.092 1548.97 cv
cp
275.268 1549.06 mo
275.286 1549.07 275.306 1549.08 275.324 1549.09 cv
275.306 1549.08 275.286 1549.07 275.268 1549.06 cv
cp
275.448 1549.16 mo
275.461 1549.16 275.474 1549.17 275.487 1549.18 cv
275.474 1549.17 275.461 1549.16 275.448 1549.16 cv
cp
275.624 1549.25 mo
275.639 1549.26 275.657 1549.26 275.672 1549.27 cv
275.655 1549.26 275.64 1549.26 275.624 1549.25 cv
cp
275.8 1549.34 mo
275.817 1549.35 275.831 1549.36 275.847 1549.36 cv
275.832 1549.36 275.815 1549.35 275.8 1549.34 cv
cp
275.979 1549.43 mo
275.993 1549.44 276.008 1549.45 276.022 1549.46 cv
276.008 1549.45 275.993 1549.44 275.979 1549.43 cv
cp
276.156 1549.52 mo
276.169 1549.53 276.182 1549.54 276.195 1549.54 cv
276.182 1549.54 276.169 1549.53 276.156 1549.52 cv
cp
276.333 1549.62 mo
276.346 1549.62 276.362 1549.63 276.375 1549.64 cv
276.36 1549.63 276.348 1549.62 276.333 1549.62 cv
cp
276.512 1549.71 mo
276.522 1549.71 276.536 1549.72 276.547 1549.73 cv
276.535 1549.72 276.524 1549.71 276.512 1549.71 cv
cp
276.688 1549.8 mo
276.703 1549.81 276.717 1549.81 276.731 1549.82 cv
276.717 1549.81 276.703 1549.81 276.688 1549.8 cv
cp
276.865 1549.89 mo
276.879 1549.9 276.897 1549.91 276.913 1549.91 cv
276.896 1549.91 276.881 1549.9 276.865 1549.89 cv
cp
277.042 1549.98 mo
277.06 1549.99 277.077 1550 277.096 1550.01 cv
277.077 1550 277.06 1549.99 277.042 1549.98 cv
cp
277.221 1550.07 mo
277.233 1550.08 277.249 1550.09 277.262 1550.09 cv
277.249 1550.09 277.233 1550.08 277.221 1550.07 cv
cp
277.399 1550.16 mo
277.412 1550.17 277.426 1550.18 277.439 1550.18 cv
277.426 1550.18 277.412 1550.17 277.399 1550.16 cv
cp
277.578 1550.25 mo
277.589 1550.26 277.6 1550.27 277.611 1550.27 cv
277.6 1550.27 277.589 1550.26 277.578 1550.25 cv
cp
277.755 1550.35 mo
277.769 1550.35 277.78 1550.36 277.793 1550.37 cv
277.78 1550.36 277.769 1550.35 277.755 1550.35 cv
cp
277.934 1550.44 mo
277.945 1550.44 277.956 1550.45 277.967 1550.45 cv
277.956 1550.45 277.945 1550.44 277.934 1550.44 cv
cp
278.111 1550.53 mo
278.125 1550.53 278.136 1550.54 278.149 1550.55 cv
278.136 1550.54 278.125 1550.53 278.111 1550.53 cv
cp
278.289 1550.62 mo
278.302 1550.62 278.314 1550.63 278.328 1550.64 cv
278.314 1550.63 278.302 1550.62 278.289 1550.62 cv
cp
278.468 1550.71 mo
278.48 1550.71 278.493 1550.72 278.506 1550.73 cv
278.493 1550.72 278.48 1550.71 278.468 1550.71 cv
cp
278.647 1550.8 mo
278.658 1550.8 278.667 1550.81 278.678 1550.81 cv
278.667 1550.81 278.658 1550.8 278.647 1550.8 cv
cp
278.825 1550.89 mo
278.836 1550.89 278.846 1550.9 278.857 1550.9 cv
278.846 1550.9 278.836 1550.89 278.825 1550.89 cv
cp
279.004 1550.98 mo
279.014 1550.98 279.022 1550.99 279.031 1550.99 cv
279.022 1550.99 279.014 1550.98 279.004 1550.98 cv
cp
279.181 1551.07 mo
279.194 1551.07 279.207 1551.08 279.22 1551.09 cv
279.207 1551.08 279.194 1551.07 279.181 1551.07 cv
cp
279.36 1551.16 mo
279.372 1551.16 279.384 1551.17 279.395 1551.17 cv
279.384 1551.17 279.372 1551.16 279.36 1551.16 cv
cp
279.537 1551.24 mo
279.552 1551.25 279.571 1551.26 279.586 1551.27 cv
279.571 1551.26 279.552 1551.25 279.537 1551.24 cv
cp
279.715 1551.33 mo
279.73 1551.34 279.747 1551.35 279.762 1551.36 cv
279.747 1551.35 279.73 1551.34 279.715 1551.33 cv
cp
279.894 1551.42 mo
279.911 1551.43 279.93 1551.44 279.946 1551.45 cv
279.928 1551.44 279.913 1551.43 279.894 1551.42 cv
cp
280.074 1551.51 mo
280.088 1551.52 280.106 1551.53 280.121 1551.53 cv
280.106 1551.53 280.088 1551.52 280.074 1551.51 cv
cp
280.251 1551.6 mo
280.27 1551.61 280.291 1551.62 280.31 1551.63 cv
280.29 1551.62 280.272 1551.61 280.251 1551.6 cv
cp
280.43 1551.69 mo
280.45 1551.7 280.467 1551.71 280.487 1551.72 cv
280.468 1551.71 280.448 1551.7 280.43 1551.69 cv
cp
280.608 1551.78 mo
280.63 1551.79 280.652 1551.8 280.674 1551.81 cv
280.652 1551.8 280.63 1551.79 280.608 1551.78 cv
cp
280.788 1551.86 mo
280.81 1551.88 280.831 1551.89 280.854 1551.9 cv
280.831 1551.89 280.81 1551.88 280.788 1551.86 cv
cp
280.965 1551.95 mo
280.991 1551.96 281.016 1551.98 281.042 1551.99 cv
281.018 1551.98 280.989 1551.96 280.965 1551.95 cv
cp
281.146 1552.04 mo
281.168 1552.05 281.19 1552.06 281.212 1552.07 cv
281.19 1552.06 281.168 1552.05 281.146 1552.04 cv
cp
281.324 1552.13 mo
281.35 1552.14 281.376 1552.15 281.402 1552.17 cv
281.376 1552.15 281.35 1552.14 281.324 1552.13 cv
cp
281.503 1552.21 mo
281.529 1552.23 281.555 1552.24 281.582 1552.25 cv
281.557 1552.24 281.527 1552.23 281.503 1552.21 cv
cp
281.682 1552.3 mo
281.708 1552.32 281.736 1552.33 281.762 1552.34 cv
281.734 1552.33 281.71 1552.32 281.682 1552.3 cv
cp
281.863 1552.39 mo
281.889 1552.4 281.912 1552.42 281.938 1552.43 cv
281.914 1552.42 281.888 1552.4 281.863 1552.39 cv
cp
282.041 1552.48 mo
282.071 1552.49 282.103 1552.51 282.133 1552.52 cv
282.101 1552.51 282.073 1552.49 282.041 1552.48 cv
cp
282.22 1552.56 mo
282.248 1552.58 282.28 1552.59 282.309 1552.61 cv
282.278 1552.59 282.25 1552.58 282.22 1552.56 cv
cp
282.401 1552.65 mo
282.429 1552.67 282.459 1552.68 282.487 1552.69 cv
282.457 1552.68 282.431 1552.67 282.401 1552.65 cv
cp
282.581 1552.74 mo
282.611 1552.75 282.642 1552.77 282.671 1552.78 cv
282.642 1552.77 282.611 1552.75 282.581 1552.74 cv
cp
282.759 1552.83 mo
282.794 1552.84 282.833 1552.86 282.868 1552.88 cv
282.833 1552.86 282.794 1552.84 282.759 1552.83 cv
cp
282.937 1552.91 mo
282.975 1552.93 283.011 1552.95 283.049 1552.96 cv
283.013 1552.95 282.973 1552.93 282.937 1552.91 cv
cp
283.117 1553 mo
283.157 1553.02 283.197 1553.04 283.236 1553.05 cv
283.197 1553.04 283.157 1553.02 283.117 1553 cv
cp
283.297 1553.08 mo
283.337 1553.1 283.375 1553.12 283.415 1553.14 cv
283.375 1553.12 283.337 1553.1 283.297 1553.08 cv
cp
283.477 1553.17 mo
283.523 1553.19 283.569 1553.21 283.616 1553.24 cv
283.569 1553.21 283.523 1553.19 283.477 1553.17 cv
cp
283.655 1553.25 mo
283.703 1553.28 283.752 1553.3 283.801 1553.32 cv
283.752 1553.3 283.704 1553.28 283.655 1553.25 cv
cp
283.834 1553.34 mo
283.882 1553.36 283.932 1553.39 283.979 1553.41 cv
283.932 1553.39 283.882 1553.36 283.834 1553.34 cv
cp
284.016 1553.43 mo
284.063 1553.45 284.108 1553.47 284.155 1553.49 cv
284.108 1553.47 284.063 1553.45 284.016 1553.43 cv
cp
284.197 1553.51 mo
284.25 1553.54 284.306 1553.56 284.358 1553.59 cv
284.306 1553.56 284.25 1553.54 284.197 1553.51 cv
cp
284.375 1553.6 mo
284.429 1553.62 284.481 1553.65 284.536 1553.67 cv
284.481 1553.65 284.429 1553.62 284.375 1553.6 cv
cp
284.556 1553.68 mo
284.612 1553.71 284.668 1553.74 284.725 1553.76 cv
284.668 1553.74 284.612 1553.71 284.556 1553.68 cv
cp
284.736 1553.77 mo
284.796 1553.8 284.853 1553.82 284.914 1553.85 cv
284.853 1553.82 284.796 1553.8 284.736 1553.77 cv
cp
284.916 1553.85 mo
292.159 1557.26 299.578 1560.34 307.165 1563.08 cv
311.219 1564.55 li
309.865 1564.06 308.513 1563.57 307.164 1563.08 cv
299.578 1560.34 292.159 1557.26 284.916 1553.85 cv
cp
326.412 1570.01 mo
326.438 1570.02 326.463 1570.03 326.489 1570.04 cv
326.463 1570.03 326.438 1570.02 326.412 1570.01 cv
cp
9.9668 1581 mo
367.854 1581 li
367.517 1580.96 li
353.959 1579.05 340.152 1574.8 326.532 1570.05 cv
327.704 1570.46 328.877 1570.87 330.048 1571.27 cv
358.597 1581 li
9.9668 1581 li
cp
2634.49 1581 mo
2990.03 1581 li
2634.49 1581 li
cp
648.95 1579.64 mo
647.814 1581 li
2471.3 1581 li
2471.3 1417.27 li
2634.49 1417.27 li
2471.3 1417.27 li
2471.3 1581 li
647.815 1581 li
648.95 1579.64 li
cp
3000 1591 mo
2634.49 1591 li
2628.99 1591 2624.52 1586.51 2624.52 1581 cv
2624.52 1427.27 li
2481.27 1427.27 li
2481.27 1581 li
2481.27 1586.51 2476.8 1591 2471.3 1591 cv
647.815 1591 li
643.958 1591 640.412 1588.73 638.782 1585.23 cv
637.152 1581.72 637.7 1577.54 640.179 1574.57 cv
716.917 1482.77 li
648.788 1426.33 li
645.234 1423.38 644.155 1418.42 646.163 1414.26 cv
661.426 1382.63 669.165 1344.67 669.165 1301.44 cv
669.165 697.885 li
669.165 653.523 661.391 613.871 646.061 580.029 cv
630.733 546.198 610.581 517.631 586.159 495.12 cv
560.59 473.61 531.791 456.965 500.561 445.646 cv
469.237 434.324 437.271 428.583 405.556 428.583 cv
373.818 428.583 341.852 434.324 310.545 445.647 cv
279.322 456.956 251.056 473.605 226.537 495.131 cv
201.079 517.61 180.389 546.177 165.052 580.03 cv
149.722 613.871 141.948 653.523 141.948 697.885 cv
141.948 1301.44 li
141.948 1347.89 149.705 1388.05 165.003 1420.79 cv
180.303 1453.55 200.954 1481.03 226.383 1502.45 cv
226.492 1502.54 226.593 1502.63 226.693 1502.72 cv
251.218 1525.29 279.423 1542.42 310.543 1553.67 cv
312.289 1554.3 314.037 1554.94 315.79 1555.58 cv
333.378 1561.98 351.563 1568.59 368.773 1571.04 cv
373.863 1571.51 377.821 1575.85 377.821 1581 cv
377.821 1586.51 373.35 1591 367.854 1591 cv
0 1591 li
0 1571 li
299.766 1571 li
267.803 1558.87 238.766 1540.93 213.397 1517.63 cv
185.81 1494.34 163.455 1464.61 146.954 1429.28 cv
130.406 1393.86 122.015 1350.85 122.015 1301.44 cv
122.015 697.885 li
122.015 650.647 130.389 608.211 146.906 571.753 cv
163.416 535.31 185.785 504.473 213.389 480.099 cv
239.801 456.911 270.21 438.993 303.781 426.834 cv
337.266 414.724 371.507 408.583 405.556 408.583 cv
439.581 408.583 473.82 414.723 507.325 426.832 cv
540.844 438.981 571.736 456.852 599.149 479.948 cv
599.264 480.045 599.372 480.14 599.478 480.238 cv
625.953 504.597 647.732 535.388 664.207 571.752 cv
680.724 608.211 689.098 650.647 689.098 697.885 cv
689.098 1301.44 li
689.098 1344.51 681.8 1382.97 667.401 1415.81 cv
737.354 1473.77 li
739.389 1475.46 740.693 1477.93 740.933 1480.57 cv
741.173 1483.2 740.338 1485.88 738.643 1487.91 cv
669.182 1571 li
2461.34 1571 li
2461.34 1417.27 li
2461.34 1411.76 2465.81 1407.27 2471.3 1407.27 cv
2634.49 1407.27 li
2639.99 1407.27 2644.46 1411.76 2644.46 1417.27 cv
2644.46 1571 li
3000 1571 li
3000 1591 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.1%%For: (Petrenko Kirill) ()%%Title: (952.eps)%%CreationDate: 13.01.2020 18:31%%Canvassize: 16383%AI9_DataStream%Gb"-6$]eT8E@1Ggc@<>@5_(\t.\D*$C'Oi?e\1(l6F$a%4mRiLd%K(!bS`S_Cj(05^OG5?+u2rc>IV]5_m\,?O'6'_SS(,1,JK!/%nn12!H2Zd(n".;jj3?oik?!H3n4UO!lQP3df&^O/qsVl2nEbpST5o>XoZ*<E?G6=9S(CH.rU@_llPHb^r:$c)m@Tu_3rJ]n+6>FW%%UVGIn`'5V/3gcGFo(h"q28m0YM[!?o(J0K<li.e]]eg5OL+%8r#=YdmB9lSjJup3ho`juQ?_+*rq^5U&DdZ4ci;snm+jTHj_mc`%nop>5dl4*_rB&uQ('"9*^Q?'4s#TI%^O#VPP;c:o5(EN'*qQFbPN1isbJWl'5<\i4`ERbY_fh@DoBe1@Eej[8ptbZUr4n5r]Ro=s%WuXrr3X#EVV8N>Ae*d5Ds7V4eLj[G8It,B]]`(*uLR@/3hTg<Uh#HP^8[RjA5(!,(M^NG8Z0tq$f;g13?hsHq7lt((8'bIFO^Iq4%E+Z4mkMjNr>Gj^_l1qZ8q:4H=5C;tWZT$UUf5KMpp&+iTY2gG9BMnRIIXL\Pc/63\r`0ph6e&IVIf&uRB.r>&j6F5m:Y=RR-h@<1%KYMs+k)[jFb.)iti^\+,Y7@s)iGX0mq3ra]HA:tQoDu`(rn4?eIJlD*NkYuT?F^iJEF$*Fe[NFG5GsV/_0PjkP"(f"6OZm`gAQ"M%goEZ88/M52`oumJ4TFI5=2/Lq99ZnDlL=c<2p]7n7W7gPWrL+X\Z4,.XoG:P/`6U%mB]mf&^GlQqqGg#XB3188tLBUp"f$$Qfs)E%jJSJ[ncCR&?G-94rbhY'^QH]hr*I-h5C`PhYN>-6YAhhLDtogumI+E[.)5WE2m7`/rn"@Ql1OW=lgJ0[j0QXAT"fSpd,,l=b?l6<%rf)-f2^&A'YN0UgG4M8ls$Rpi^FV..E?Q%Q5d'qUGL)jsPQ0pioC%2!cKBZL^Rr2fqTkf+AA,rP4SsUjHi!I/)]?TO*IdaDs%@h!%PPtCnVuP^IOGW*+U3T)rq#*L.&W?V)D&5\>S4&tFCWa?2oA9L^1-"._rfAZ+A,lH)=,UOO-J0sN`ii_+"n,FAmCd$_aT"^+!;S_N%2NJ*VfBLg]cX+9`*`(DB^Am`<J+;UMP;cEQIf.[pP?]Z`>/L4M+?coF+8\l;kK`m!nmoDSZaYGaLc:WVrk7sLo:PGFK(kijrTY!4%rD,*Hnb%h'5J5bUH.m`dRilUD-[QeilY&)fQ2HgJmkB_^VbP9K&q8dLgApAA]q0fKMC(tH^>d8(\'L\\GkT[[IX(bV&UjT-;eW?n%LRU4erp\6h^O?(WKmo0/L&$Z%F4%0W7r#7%(Q&)PCfo<u/,c<XI]hJ^*m#ehJcA#Bo(TfTeaHhd5Q:KV<Bk3[pol1p%P=/$I7S>^%nJg)^0hTC.OnDjakV)Hn`\jC],Fg=t`S9JIqOY@YQ]JZO&[tPB]QjFr2c%0fkN>W*ms"P@h<8WEQko[7T2>.\e=l=QD=dXRfZ]Iq%HL^@PG<^J0:[>3sg>?1EnI9smbEP3Td1c@qqX1oH/IsCkml]d6IsE68fl*J^j#`lfci9p+YJdh.I.cOk\'NP4lYDpCk'?TgK%BTH%:0hMg=2IeRgPrrdcVNGUh)no]^\m1T9P,(O2m9+9s7Mj/h`Vckr)\ZGs4s_W:L8qCpdZ!S1U[3k\L\M'+<>@6>Q/(,YD[Wti]O;f%D<pS8kF;o4\a$?RXn97"d21^<NBd8<=G)t./YRpbE#VR20"NJ0(isN`3o7g0G`$]<>*Db1/h*\Ja%a->a)oJpK^?"jdRY7*C2WiN%Nn\s(G@`A/p`]g<UlnA"<K:+_b>#NQb#+0t\Z>:)eQ7$DNOX%pHf2P?CTH'-h!hhU7la?;Y26ROLMQGe/]](gg="E4*:ikOO(brc%T5,K,m8f5lNt[R9*7q52mb6D=hgZYl,WYE>h]_H7?1#Fu[Qc]oh"!Fbj!;YcNgo_>=Df)hcQhq8]-H!kc]2I)*Cn#Pk[3A[SrWWm%mHus**N/:,jrYXegqE$`?'j==d>*(mYrqH]>Q<>cH2OXk0fNA:>Lt!+9l#m5FtF_VU`T%Y\h$dga[j-g-da9@:GP0H):u@s7%N=*%X$fgOcmoQoAYF-)`DtEG(Bp!j_3A%^iGRXP%T,%P/ih<8cnnTV9bDf(Bmi^("-"Nd-f%Y_\4+omVK`GJO")6qRG3*''dQD-C1oJ)%Uriu.#RX.''(lEmdSauE:pkD>C0K_<VP$&:<2>]"PEMqF<3rTVZGLTdW3N;--G?7eCTkGD837R;O1H@T:9/NnG%:AcdrF,^Re>Ka%;"q)MWPEuXkm.e@na&g$Z)I*gJ>9dS=Pe8=FO\>NbMu@0DN?rHa.N2EF2PZqWRN";[u0m0*E"6OiHu4(Oj"ktp:-mk#bjJFBb.;0%a)G5#2!N^=Rf;Lt$FGTP&$]"P[0Q=oHE7;_ld^*u41'h.O]dTa4edEo)_>U[1`MQ96_j!j9%PQ!AdN&NW=`ZQcpB&-e]an(XtQcD%ELb$gGCD+;<08Z*mI5:PZQn<gfW^9JXYaaq91O7uVk"n;s8%+mY*[HspqPVRhr9ArK08R_ZbtN@.R^okd0AU&@+o)8M&!@Q,(_*N%A*,'!bY!L7Le/7K/S.dQ0PmnkS;qXF9aXK%S80UR@olS:XdgXd7'.Ho.8s1>Q.2q8W:!2f.OQXA':"_?;N$nu;1;GW@R(5?j\XJ0%[1bseW3T;!!mPaUXTC'Um=>XF<BrFg#/Pu5eF(dfB-a>lRMoeU0G;S>^abtRV0lHR(NY,VnU\;n1'bkg4I\%;RI7b12eDkR#@ue#%S's'\nR4K,mO2^<gQ$u;?!fR/*]W$TkHs$9*d\mY`uN:_:-6&-*m<S>rJS3029=V0h,+AVP<"fo_OWdESW;^=2Hbs%GU)X$G<F%;%CU.bgnNm(m]tM$@b)g;BUh6%#iRZ,L4NT"^OeGtpYmR4aD0N>/a?PQ[I4^YWa@(k?A_cr.PNXF4moib`.LTOFkn[gpXYL2YZ:Nlo%$u.OZMlcDFepG/f$*_Pd504q]O\+,7C)=-(P#rMdVS"F[fH)D;!k5O-Y%?m!;%Hfo"B7f$$c_9caleKj3MtPbPO;Tg$d=DN8d9bh%D'CXaO\75&/5\k*\S_^9^l!&,*jf[$?b&GOQftmA(GWFm+[r(/BgOe!U?-?%>%4?r?)X"g)hqN'7TJA&"7HlpO2nM]H&%#Ug>DE[%nMo7M*RV#f\kgb6P<'1W@gi=Zj%.W2V^(Pgo07+S(B1_u5MY&sa6B/8EVY-9r@!&'H/*-%k-;ttpf%2ZDKpC"7>$!8+C?tHTBlFQ%o=s6#%Iur?I*j'd^@UsBs+]#GnaNl'Dr*%G*KJ/F$iaX<Y=`Q4qSRWE0enb:.^N/&13,mu9?:OI;rnn[s6tfN,0Gk6IC9">gWsrI%Ri`EAYe"dEmV3JReSfpa[I^]9Eq8B)i`1.Nc6o7ab-!.5KB2X?Y?/QL11,&#/%ZuK<HgK`5KiM5N[(dcj7A<Aft5ENH\[]2kTTiX%,0HM8#$6fM4">G7pu@*InAjRkr.5M%rb1M\*:NjRL4_TAh<M3*)0b*YHM;U4J&jM3i]lQk<J"mtFFPa6V=>)*"s!rCd=%7/XDN)3%?hhZq@J*c@-QOPCWiN3E\3j!$nK6$]hFU[g`fOIVOrl=S6O%87._\s=EI57BF[pkp:]Akig2<NDb[%k@bXFW)o*^s8=Yj"3M-qia%en]l=GHsJL%(XJ0%oh'm;_8b?-C24S9GM-Wkg#a\UI9iX)Db6Nq./]'1?A(^;40Mc@D#$N&S+0uj]8.bG790.7Plrm7+4[<;SBED%&Of8++0ChDEm#Ga3s.m=iit24UG-KDg(H0$RQE6E'`u`jRK&[_-K7$+_sI0ZOT=F4_M>]r_bPap"=jhA/RZO_KFn?=DG^!,GZCn1%lCX7\GC#c[*/j`e48I\u)s\39,G"DnY`RG8mLCG_MoD6jVd,>h!7U2bs1+V[j_hbN4D5(-3;ibXc35;7K_&]a0D`'9b7-\o_@^^0%N;HSt=ja2>8qT0F#t,m=ZgKZEc[jbg`I^1l/Uq?"6I7m&KD_"b69?+@\\8W'Sn$*u4]a8l/X@lQ7_VL&3:i9h<DT!?N%\fOoJHDT%[i.TAd'3e6dpdSNeTBE&"bM)S=+`\"<ni6j4bMfr'O&fpZ&Fc5Zs(cXfeP_9,!_+5h9bQ%T*';HbC4N$o6)/mH77[Q4I#*=V7/&F%a_uMrG2),3[EC"6&%aXd9<S]G/o((I,<k6l*d=%nq>JA)R$0_pp^_a>d4B754tDM3]gHdQkhkf)*1;I8,>U'RDi!BeRCPn$Z6tNN%Or4`D7kl!g7"O;r[hsj@,`;22$qCo"%Dsn'LDUL5*'%o&M[5=jK!Q*+GmM1<cl:n%^4SAf)1$@ah/q^)&*.>`g>%<sQ3jhLj#*1-%RUX;t6o0BMb6;Eg_djei@EsChq,f8$.@5G\lN`HVoUP#Ji9I(uEp6[YM]Zs"bK'2#00]+)%su23+24"/Zef9D/U+8J^UM]F<=J7#%rGl)\7#$H,((F3\g5e"CS7n=SBUN(-J5so@X;>1Ifda#aBTR5!'fF/q)e<[`2;U/bUX$u9*IC/7:W/<43eG"@rPYC[mKb'[%8+@+%'TiF=:e0#)>otMuXN7^2V1m%#M(*OtPL>kN\ta%\S=o"[Auhl9.SS;a"*P0Ea:=VcX(eb!k0hTs;CuKWoJMo%W\Z'16D]uBYsGe^%Tn'CmQ/7U;VqTEQhOWWVH5u>)QJX9^J'3nL!Oc+]>b-m1*Vo%mB?.\M9+2UHs5;kmF$MfOp3<*-^3l"KIsV."4Q`FM3W?qQE76@W%StTFtl<Z:<]?7M)e2/#cJIAH04&&NJ6r3`Hg'>/oNB.?JLWmpFF,NCM&0nu:[u+VrP]3@C3YH1(g\]\Ib"@@f#Z#!V9V"(N!A#"'%_,AC>-aB(YS>atue84oT`k=DOMLo$[X(?d[Ym0EV#\oulC1MP;?sA0+araBojrS?!K0=:L$Jk^*2)]OC:#-h$GO134(2Dk-&MG-_%io0>J$ibNs*8t3Ud\W`9DG1#M,EL=NNog5;]^n+S+3T)[V]B,^pt4W?&LiA9>!ded!MFNA[4)!reQT:4OSUA;Hm)Hpje!?@!$?Q?%/Y44hmmBYjpt(Gnprc*o+smDQ6/PTfrM>JL3Jm_tQ+kTMS.k.$Q^t%scRI@&UGPM]le>]2d&nojMh/%enj!d`gm.l7?1lMA)P6pi%PQQ>1(AB'Rr4Ck5d0M5'N4W52h9,A0,`Wt'.7T;o<G#SPAmhF^lQ4+e:$BiPXt9-?!ug=n9&geI-Hp(jbU"iQ/oR=Db[WMh'2;n;%_!8VjR&pb.<m4Z%=^dO1g6NmCfOn<<DrdbQCkpr9"*#RbEY7=jd)eGml2ep[b#gi9NKB4HCNuKmru7)`@2@20_hcj^eSd&n>L%*M%Z_QA=b.V:t>V?mFm/&^7qi,AIT%2Ik1r*Q6(:Z>l6$9PRa,QKeh67fpPoQ917I+]6Vg/GO]GXeW@>/#.(=cqih(E;1>n7%;N0pqT%955bqbNLeLTGo\2\nRoTN",AQ.F$fA<cWUL/%+5uLa'u$rRt*/,E)e[O'N9g=nHNgTAB59RGkLk4\N807*_qQ1HT?aCp@)F@$E2u%5)._B%:`ipMh3sD]JR]0(rj.!bR.4H4,018o8-p6kC*+e'uU?e5,BS^OoGcEWZhZ%@Tj^q\WHOs^pfVer&2JRFSkU;?l0c6\WD>8%AngIeV,+@uL^09<I*q#^ohrm0@rLjnCZa_tZ/:=pVtnbR9:ms1C^Jo:)3\X$0_9C#bA]rEo>P=c2Hr.D]#QQ&)/2&GTiY1-gS`^%%MB8SG3tnq&;%sl8a*eb4Fp)usrQZ*ANg^cps"_t;1a5-<EH0O;@oL!DkqB/jKn%>q-1(rD-If=\01<N;4*Jou6EKGBnZG*C$4*Vg%(=Peb<?ppmo_r>QF1cFpmH'BiQ?re$T6Tj[eB"Me]:-`A=Y6+V$Su;qr72HnBU1.5Bq?:^@%^Z.W(fU:6j!gIiaVF76stbB'nOV`%N&4AT//TMKiWZAV;dJOd-lPER5-CU"!3Qe*7ho;<hU)4bJb]Z1"6YTXi+7V]6rgb0&k3V,[E*:).[.7Q;\3HDZLeZ>ResRu#f#0a%s0jrb=)q.X#9YMRO"<-,i(YaV7=",<UI`Hi5[eA8Gj9UTIeTpnc`AWclG:`^"=Qd8'A3VEAYh?051k*9K&n!qo:Y7elmgku,@[6b%??.+"):qpXXt\R7mClc3],m);#sBr8Nad2RbG]d&)-*(p47;rReaMfpA(VmZJ1!h$m+?h@+'V`m40+5,<Uj")r,Pg^J$1j2X=et!%)7io`5<JM(h"\o1dn6uP=Ie5F.f]KXq6\<e\=r_DN%&KM;U#2!8/,RapnpSLHNr&9UE2r*'.a5UNeMW,M,Q_ONS!m_dCV](O:Hb`%Gdll'pB3C/LG`(I[DU\&-/eM^S!02YOiK1'^_-iK___d6DNkU1Sb"t(dr>T\mt)[o.*HmdB(($%&,fU0B_ul._+j[@9Jl]$*]=b"%$h!]"m$`:^0^$LIJAZm4GXTElnq`J^+VG;,QN<%@395f0O>5%UM-0.n3F``;g6OYJQ1].-5dT$ENI%&Zd:c$^QF3;@ehlKR)NkGI%0o`)GXcj@IOT=-7?r%<Co\#DG>#0oZ/2QWLZGPBf"cFW$X1S+CjEC3$Y*1mBh:;8CPW4rlp#")`S[2ph4`aYFB<A2jO6"uuN;V@>%+f[<'BWJZsMLFB@>hYcDH[IfB<f_YeD4#?Xqf+im[QL'S4!/e[o3HXLpTeS$LXL#5a2OS'MoYCe'\j3YE'p0O]<L)$"+>5D(3_tE%GNMOO(S'_MY'(t%p->]p$Dbls'6B!!qTSX#a(6(Bh!emlf@00?CXR9-/q8$QpO(Zkl18ne(i4Hdqd\g60+YYe%lj>sa*[&Y*r"iM%%A34]a)XK@3-=,1j-$P=WAg?"F8pA;`%r:rg$8]c7=aYUeQEpkN2Dbq.3Hqm=s>fDK$okngaica^fr=;36,noO8!t];UXIKbjPq`%lg$b7OZre&IK%(t]uXG@B/t/`VUO?T/["ZhmNjK'Q)DULH`!m`?-_GoYK0ocI!@Enn=&RP,)&lKFeXLY6O"8?m!,2#>i"5+4qSf!%K4[@=HK)fdYL3gZE3\oA*^jkm@:tHJ?XglHMVdE7_:'deKC9r=.,BDED2@&Z%P>m$YIHb=I#H.Cg2!MX784kJq'Y.LhHtl2763qZ%l.ROIPW/HM3Y`3B:AdM1C",ssU5%so:r[[$V"rAOWB?`:F(2-g9-:jT=)dj?8l=-d"?K,#dsaAkjEk&:=Ee"O\)Vi-MZTe^1g`pp%Vk2MbVnsbJm,0[BqA$p?(!D)O.f'1q^N1mi9f7u'F-uM[*cPPrn"KjV(qloG8_ouo4PdXFq>6f?^44+.AOo=nNHKlJZ'Y[!V@mt]%RB&5T0aQ+`mneC(pEn1`gk6?m2]"IFS>]9_>FYoSENOQ-dc3])(9XA,9;TLtj(=o?WPc^QN'P\TfI->+#9*DOdhq<EBK'GBbotRg%iN03cGKU]t\\/jIl"4Y=7IMUEm6WnXcLBUnRX9t!%GS1dp'*;Zf/Z;FG+:2RX3$BsjIf](!TF.*npNT>6tW$ok4kN;:d?kFALEu`%.l+'_YsthAZ9%`I5a'Y7#mj,)^BhE_\;ifS6NEF-E)#74HN+IS"4nqa()<]#58"Rfl9?>_rRV+"ruH%AN:g!bS$+cF6X*R#U+@o8%I^cAeR&_f^[2+B5UDI)"b:@mIL%OpkW[Y@h$9(Yf]29QQeNid'L0gAMJ6GmSYtW<@#-NURK/aA4.X5oA,212(P\VJNbaRKVHP$#,%86*YWi!jXXhWkunPiDk!oc&oHUF7(963Lla!6RQ&iWFnPcHq_b84cU*3:8?\HR6RN_S\Rni@N[@ThL7'W&+B'lT.4SUj!f(4-o[I%6k(2"0#?oWG2J>AS>Z5"j.4EcgTfPim[U!\Q4"K+#6r+?QAHr8o8naV10Je:83b)%e+&[B1#]-I/"?g,d]8J;??LUiDLh(PH?rJM%hI]"REH:`]\GL!Qjj#Uj,\GqMdp'#N^`^Vt1/9MJJOUY0RN<NOi-FBAot708eKPZN"k`n,oHJ#nS#p!7A:fdq\L=RdaWd@T%$Zg`%g)Q&NPkMnN!>4aF#gL!")^I(3Mr#S'Z$]fDh2IE0M8"Zl9h,O)&I!)3E((1_`uF*IE-FM2=1a$q'(&So\+kWGkZa_S84k&^fGaVr%*3;6W^eChq7.4FN[6Ea<:U8.6-)3$kJid@`[YST:^273&#&S;QNRWrU#C\]Upc<[:$a$;J1V9n/9df@O7Pg1Qd/(;qHa&G^,bLH4%q_OCTcD\J6oOt;ApLA[S2qFP09H\fI'&RrP:DQCddF3A2K"bqkgXUnJQ?t]jCiRT8hS5\lG7O0_beHgh^K^QkL&jS!q[),_"4f^)%QEZD(?R%;1Y?b8@MC?>G@T-T:]U\9D<-'=0Nala%IbjhhfFO'9.q<Xo78#6pG;i[?d<t+3AnG[>=G0KqJoqKo)\)<he+hT5!k'h*%D0oRD::jfUI.`VUBGq!4E*A!V4rQf\3^WVrW6.RF]k=H3:4$=VcMGLRRrgR&k"sIihY9.hP,E6=F!@1Q1q(D14N$s1\Cu#$CqM3A%mQL/S+`I!bqV9Ncd1M$$U3&m0V]6.@nJ;/kPRLcK:Xdm`HR0@CG6,1Y9[gIHi?"ZV9B-eAe"`CnRh9qPR?@q6[!V+W<b38Zjd&-)%c/3B^'5Jr(0!K4qfFM1neD1m3o8LH;Cf/Ah:_njIWY^bHf$2[s9Pm-!F?Q:'@Fk[#oV3eaTHB9"?Ub_`m;V(3pJYO<qj-lDVeq[\%*5iH8=>gPB<mJCG`927#"sC<I7Gbk*jJ-_:VcCo62b*U$4KTS!,KGi'dGG#pk*@%*r2,H39lunA[Z2a/UnDeKGu6rPL#qV[[`6s@%c;W!S;M0(Yldf@Q2DGrFF!Y8A.Kp-gOrB0IP]S0im"&f&$mQ`fOngHXj:P8H#%SmQLqg2TmC3^8&\+\SK?5*l_7b]gEZDaV:+!>o%/WK9,ND1NJOd;,oh0MsWm:f;9QJ&QD4)1nXor)q*<o`CW\12=(#ONQ8*1)S&i-XD^Jb<h.R'G7K0=rdZ8!RE<X1[<SY/MYmXD1.]%Y2,*<idEYTHP0+!J68[&aqdD0+d=R/Z@u)]Sj[96*%QY;"ESJ%ktm`<5gT>E4Qf!OU&r+4!eC>kEpi/khpV+7o_C:krBN#C*W/\S%!b\J'o(`K@Ne-<*KAZidJL9W1`aOBpY^G;YJE3[?*=/9K-s4g?I5goWgjaAUc@%\H@U,djS>Yu6QW%hj-M?/dUIQ+Qd(NB@DQVC[%SpPYKgUVO1J!\!Id(=PjjNDWu%n047I^"dVT"B@8n@?a*:2a($GOB\G[e-_p49)!nmlUU4+lEV5ar"4h%ICu?*XI0Bbk7r1DT0+3%bUGUPY,+DX[`$f+:+m?ZId!&=bZC,JYQ^u`CJ>)p14D<:*N3Vamui1YFe@fT?S'7>EUSq60QS9lCT!<S*6qg[LZ5,I*EUQ:SHhb7%CZbUc?W5D.AcoWd1[Hf?S\2kb6bM66ZiMKF?n4,o9Zo-=2FHl/,7N$+D8,%BZ@PNKc'G?h+:P'Y<+ruUS$m[F8(,nt&bta3P=KC(%0`PDHbXVMSLM8LP7to`^7>'WF,>4U+1C/6\Mu6cFpTp9*[Uq1bC:MN,[Ct2cB%sq7Dn!F;`JF"t>qVK\>KlnL=Er>gNHONVe78Mb%o:,.)m;th^;<R[XXFtIDTA/4BI`q\:\mA[Rf<%?OeIib[($ub2&+>=WY%n@)Te-C)=l+)TVT`#eBbqKOkIDV?Y\@^ij%Rp.qV<N5%drJ$JQM9XlS"WJ6J9/1Ifab5IK/]-J<*f&*:Ch953,-q7AE:^kW9XbC\f3^pD`PpD+AMBedf_c*m8f'&/NZ4=c:i]e%aaD95824F%cIa_l)3DCA\%H's4D-,WL0C`=p>-C?ZS]*QjXBkZghDYg>q/4U?-K_Lk1j!k2X/kc6(<;m9"&id1#1el?I52WZi`0CM.bMXRPTsX%K:6#<d0=<n1IU#Qc#P^_c4RL9Z.TER#&*.MNGfCV%]*_D4'`n%%r^RAhoIbNZ#r79*X4Cc%`l;r2m.`JBVsAT'!M&LeD6,fHHU`O%'[tT`A22n$@_+=D3-%%ohC]7kDI]7+=Z?qDEZpLE)['2@F$CF\ZHAODg$Uo]%+Vd0YkI(_`G/'>aS)H=YXc,dBIM)WiPUD&%#AIE%:jWK*T(dB!'i16Pa&"mbp2P6l&FVWFZ>DaS@=.-JT2'fqQK>G>S&=r'/u@Df!-NIPZWOcp#'E[Kk@3*jk8B16eCi-?c@'[.Ch,/2%+d_eSls6)rm^LcSNA[':YNFJ:;n(8h]13-VZqWA%5u)6fW?>gj+=D?S]N_m+Am[^*$g,Qeh@k+C]U9nf16OFOGdB(I6buJB>t7_k%:"e*)TZo.:k'NcG014^A;"ud[^'o^0./`s.S,]olou2?DMOUo]qe%JY1RA"X9E,DF/aOI3+*mr$p>E`'m[KX7Rh:.rPd;Za>L9J[%\%2E#_8g`h]i;V)\m"EV530k53HcKeog_.=4KInFY-rG`(mo8DOqY7>.n_,T0)A-d3A;j7HD4^?a8PA9:VYS<9V-1@IfH:`op_,X%r"nG/Ud(1ss1*&?P(+j'OT4qCIp&REc:H'[^m.37&W?T3CaYHt94]mX><HJ,"'_rs0=urW)-HrK>o[?)U@0U]7m@d<(Y()L^HtfO%2UObJiplA&^RT9\^&6515P3,0G57td^/)9ILZM%`+aoC&8>#_oTAq4]F=R'!"#4^=%)WT?8)Hhj03*NWM%P[i(i?p'-ZRL_cML>R%)sDQbdK!6maLe9BUO<uKXE%SBY&2pNA<l\u^^,+NQ5+]"?KB17l1Q<i4g(9m_X,]&@KWZY?t`PCn]4)_`4/-kk-]2XV4CJ+]A#kE%,KkYsffN73gfhBeL+TeM#O*h"W(\*`QoK;"(Q^4T]\ia!m+;YY@;OG>>fNogkIZ.A1U47Cp@d.hU6s'QCJh/CAKd[JAW;gU?WMLT%FCSBlU@fj;SOp1gH:KfhG/;0]5')g(r0f!baFKFlN7;62A5EKfB'Ih()^jQE1hMGN!#l/7_6'sToU7Jl=djq$NIYRiqRRh`V/3Qm%q!8&*Y&uGLSq]+O96<k<CHHl[<mIS`g+_=b_ASVUcWW:@L:\>85r:oM`N$s6nN5!*Y\bO!VGCqj_f:XHS$<Fmq9BP>5Yp8T_KL^e%[YFR$$A!M@8TqG38-7A!JrujHZ#J9Yj<";,#]]*(LWt!'oL./tjmF:50?_Dn0\?FH$RjS'$rSA9!QMbn#Z_'c5`rdoBd[B@6*p1l%UV9ZKHHOb*BmSW4XC?lQ9\.[+`j2X#gA"O\.W@=`-4!?IXh)c0<F@.4\^pe^+Di7-mmCZ)cb_tcQeL;i=Rot2M7D]<\n6]c09OlA%S9*:5K=iOkm.PMcRbJDmRV?Ph"c#-GN<P-(5uj[:24^P?n*RXPlr^?XX,WDd$kCkJjD\3*NC0:N*;W-`[t=s`=![I@%&4P\oh$ef%][CP5,D0_5lG"4,8fQRC!WNZ*CFXZ9rB'@Ai.%/P,WbS4m\'Sn):fi-57[aa-+GU/5N)i?>oJ9fqe>Is+CGN[CdThT)Oj)_F#;fu%k)Yuu!F'a?(k5au`NgG8].Nd&X"/@eUg@@^(Kc24R>GbkdStT6E3n?G;Z&B0Ai\17r)DTd3R:S#<8_BAB./3YE3jW7&)EU7FCS']%msF>#*npc]YS6Rth`u1LO17/0lt[S*m1&ndFGJm)@f[pjR)^fQWkR+^glJ6hh7d=Iq;'fSpnKJA5i9@>cYOqSb$qhM\%/9?h>bQ;%^SH.&8b;_?k4'bBj%Gi]QSaaVBc^X04MIV:HjT"cM=#d1$=AP)Q_EmbTB7;KDu\tmX5C[;rp&nB=+C/00.5(nrl+Fehr?X]J+NOb%Dr3a*o8504.iN2`_'3[a\hcMA#C^f75$\o.-4]V:=#$oK&6$2U14TiX];lpjDSikfoDeji?f\C4q+p#j4oG8NpuDB#s864Jr"j(9%_f$(cn3>OBGC%@QYa]0Q9#'QJV+C&<l0t0F3o9'Zo,TGVGB\9Xs8CL@S%$H$:Z"?crT_Lo5953l/M7"fk4S$VLS%rRg)BA5ds'-q%^4,\@c',(*>8m4i^O?+@fscHUp@R`*%f_;hn:/T1p:^M%8)E1F:\pVk0Rd<D!"6G.N5aFHQi\`_^D5T&r=`MKCTeT?<<0:f$fNRl%`MMr6aqZHbOilUG$$q\9FsTU`O`"o8/g_1?.i4YGil'>14QV9t[#)F(UbR+<OJs]'?'@h?68AEKU"(Yinf1oY=/CUm\<SQfFfX;"%DLNo"9To"iPtYO<P'A9[i'ig4C<0*piC[oRcRVEd>koX`hVsf6"b.)SE"uIMD$sEB%,\ru4=a]o.WU=,YCbDi#7,&MLB_YMlM7b'%fn\:ajN7*U,"kqu@P(X]d!4k+lL%KTHpbhP62J9K6cGH>g1C75M$c;nGa1Eq01o`nO<K-?0!3a.ZKN&0I*L=_YN!#$6I@hR9>5V8%hoa37Ma[d>c>ht+]fb1)PG^85>^=GMZfH8i?"DSW+G%'E^1R7gBp>Dk0*]"X-82dXaI^Luh&tT-K1>_fLnA?D,;&!;e)]R?WZOdM%>aKf>nq+/PY_=Mp;n+^,UN!sPFt.31l.E%:r!5Jp'n%SF0CS&1R0/m:XcPUA6_8i%opC%LM/.Yf?,7=S8bDu(.-e)rQ0OX_6S$/&%-.;RMPh#1CZ]B:+P@5fE!n&8GGR1-O`C>]+9&S$p"C,"^_Y#Yr8g=R!7ZiC[\(?1h7[&n^k-"9'`L8PjT&>/o<YJ)obL-D+r2rSk%O=lCLD/42?dj-^$='=MmijW9O)j`:nIEC'm.EHH\(sU\b85=38KhMRDRMCG,L-X=)qrfFkQm$3@>Tq5uo6?M7ndUYsN:`.>X[u!V%?6n@[*2c_<d@`6$1<-<+:ojLk-<.hiZbc;YBbb>sRDVa(6(T@.8Z#_@Z&QB4D8u^4m1&G4l#pUD@<cIpQO;_TBd3?]0A;&<.mc4t%,5##H>G1HSS6RL7@^T$qY\,.*U'I/GDD#!VX:FIt>UfV"f#?/hg;Z-eDRR!;cGq>VU+j#6W7$Ro?;?qPa]Q@E#HAu1Ln0-0OC(F`%ohMePfS'fZ_3OT:KcT2qlAJXcj.I[+NVMnfX[+5ueq+XM,g@`c/8A),):>G5b!hOLVGiV^,'FZcVT0)8,=S&r;eZ@a%nTsX4A^&a%-)(D3SEAof][Aa.:0r%!fR8P5/)$t#iXec@k`[)fc20&L&P?@.;$+L)<.^HK#dPX4E:He'75+855X2F7aZ#$,,Nkb5=(uW!<,,n2%5U+BFj!%C,r(=02B%!Aff2^$WOVG&h\T[4=ad&UjdCn$F`NGF5j;hga?"(LN"(!1)eZg9oCN1lP&R\dsUrl#:(M;,%==&6(Ofh%I%Tp+_@RLBiMO4%renj1K!;3_mZaT;X2R5"NbG;pmY\0h^*Ao@lf`F+no/-EKI!s0MmP2r)q&o/%(nng:Hj]dhVEtHf'-C3F??l>nf%M9Gs]l%oE-L?E/*1YZ.1\-?1Un^d:$JMcfcKT'J;3r>m^.H=V"=6'[anc?gq&-4g7iPKDl/C<.GmIWa0=Z)6O)E?[<+<uH#MH'fm%e\*/hnS;&,b7M;!?j\rTd8`kZq/VG-cl5("#YJ)r0fqg1,@f6O@&$,9;8rUNH;3rUD)3%VkT);`4eNj!49HH,8Hc=MXeMtEPKD#a%9A(KYXg!5lh"N"S->=;LElna<`67LSCY,^CM4bYJCn<+0%S7Bg8gF_=OLR((8PLI43mGr8dn7sG4F-IUfcpT$*gK.q?'htHjACmL%Z1r,<aiI.uFd0&gC`Ul]nu0cZM8]Qs]Ac\Ech)YI'Xd.?o(K@hf0:/i0$BsjQ)kAH.X+1^M"XuBpUY0\[2)>9S)_qoQC:?BOk3Yl%'J[-P3b2Z`og:i)q=]d@a$dj)+e)R29_QQ]a$I_HQcGk&A>D+iLf>?P\(hG%&q,Op%Ij(oL43^q6q;%Y/4<::Ok7_%_DccX2P,=I%$\t]bOlk1A8lpe1NFb;h7[6a_eIB,7kgG9$_lpd3q]j"'J5iEs$pgLc!dbi_9J!5N."@_s/#Vpf`3U+GifdZ(kp:+W`[C^qkERMH%:jO*9<]#;[;O:0dV*e/O1uqO`OE`X]q,+FYk6)PuOih-1BKe@p\E+%FdkY&SaWN0T%I1RXb\pY/!XFW%[J_rCb1cV"5%Y`Pnm!j!%0Y:VVEnjIR'*PT:7T2.FBLh-AY>m/H=cKV8!OIPED#NQP`Rn+V=YbqMZ]!fY[>nRZ%MGC@cBBW4d]spZV,D+L),uUt)LsZ$Yq2_@%ThK$f<NlZBSZjmC6mC?[E`.^m;,&4OX-'5:lM,lrL88:P`":ICKu5-2&.&g7rlD*4-^n8@-(/r)ZYH=IVrlgef!kl$j&"3DUu:B7%=[T17;SmMg=%ER'P&nh/jiF5cA'8RH2``M<>`Fo8no/YB(H/5Z-oR?W0r5N1S<VZ&(.hWA3A&YqIT:*%1<C_6+l#XG<K\]KcR%fY%&FHK!_0huNNXgg2_R#bNp=])u&cZcE5Il)Q=#,&-of-#@nL^nWC5>.!+UAE+hT,kn9&C/WXS@l+<Ei8=1R08PgF,^Y[5=]+BD@KE%ANLDLRQOeT,a6Tp:N1#OT)d-uE$E?,kBSg$FPY9>W['PT:([u@F#L<[?D,\Yjl-F3N1*AP0h9'aqSf&*2Xoc8K=VF.hD@>_+CDKZ%@)q-ue8a;/>t,Z[r_$t\.Z]S(3;h<.Dr3[,ouFtrDf2_M55k$5+'u^1Joc.__Fd2s6akD#OX?8,0+eZ/OO]DYnL1.WELr(K<7msT%#=:RG?R/]q`GOFC'/)m=/fb<+apWB=_9eC[.pV,^LRr)i\;aK/bApCT$NGbtY$qQe#pHW?XRnu!.AgIFH(SLa4>i,*U5f7P01IoK%U"W)BF5*^XrAT2NG5T[9pUP/uiB3jmP4D@0-jV0sL_f^(2.[J#WrbCso-u>dXq87!QaVjN9R$``*P.mBW6PlY)l6,A_d\_#c>@9[%eZ1`+"``HU["?2e8(eZ)g^,3/`W-E+BSN[oA=*F*&J)pd'+nV^>EKUZPgHNR)k/*V#S-a$gmZ"B)AIg+a)PDDCr*)lRt*#a9V9*Z%)lLddnK-PK]SAJ!AtUJt$*e>`Pe]:-=L[cDd\J^:4`qNfrY7-DO8pZth4(/RIZIS5/]$K*]qF+0giZq[B*'5!*n0\ae+DIrHtq\3%JN=$b:Ku@=e^*T6\p<2c7ba_hS>=\-`Z1-ObMkKZgS&bP_lSoYRE_;/GC6-P4K=:W4N.D1YD"`^2pqS+;IMOGL"YONASLc@R/CL+%@DrNC*k_c"`uGaGc;TAoJ^p?XTnfu,En@0SLQImpdbJem)_aS1>P'Y55&uo#.2!LDd\F\k&]G;0%FG-:G^MRu@`h)2!/*V!8oJRF%CQP6:F9_Zq-u3r,3BJMGrQ$`HlT'P:]Q/8Q;(N?mQRAUl[BR#0VGYoPdBKalL%iO#>#T2?LnE>58PQ68D[N;eUJM/LRjc:j52\?W%K+l]j"1`qMk+k,G^]bJMmjD=0![b1N?(%8&cD/'NJa@\V6s6bQ6$UWK@#>AY<"Se+UseT9hr*J$LcOG5=I%uDh@2UR'aP+?!khK$%>!rV5&s`HieJ)D[5_;!-IHrhQgaQnmRUB&q%)M'c68Rn\]M'AA7*^2t(S3G=FheZ`EeMrH0!+haDc,@r&%&md/eBOr6Lf3F\;^iH%!eRne:_RGlUe)r&blk(C<[[@0M[9/OYB]gXZBXITmN`O:V01]4;UJK.6^sMrJpl3\%a1Z#R7!W]'<"WXcGXMjZXeK[fu`!U8\h6l%_6(Rb088jf6lZkI4OXuWodd^^pjpC%<Z"cHU19)3!k&R>@5^^t-G;t8\lME9p3>SN"kG@(UBCGB0a20`(is0PM\>24XK-a\<%8Y_%8C0u'+3[9.oB/-0Z$mN:%K-R:;l5D!V_h<d[6uqZ'&$YI6/d&HNcANo]X#or8/r<&43Q+WmKlrjmOqVJFLGj,,-H/jZ%25(=P$"!%Eb[TWE[h\$dDJ4eY^CF:!,;($%37^3,*NOf@10h)_K,%(P'AtOmYE2h^XPPZ[Xud-E*$%$k_p+ge8`<uc.$)pUljRG'H6],K;9VL%6hddY?0.&HFh6YpA8Yk.3eC;oM;q.I-?5-'2,P`19V\5C""8ar#Y?20j:,?0':[f%H;n<XghNro?S-Qp(SJ&A4r"^g'>V[WTut\f%0f>B6C2W?[hYP%*23]a0<<I_0E?2l=*L(er,UDAGlI6GP.).+A!jkOrC8Ck2;\p%&*-uZb1IoCBV;Wsm<C';]C9t8]"M&K2"u9L"%G"AjXM6G(5#PBM2Ma=`^oQX16W_RN492k,q!g[NPmKo)ASjoQAWZtJ:0L1,QlYjtpkQt:/L.M]B$a<n_M:R:r"$4\,(`]XdnJD.4%]9Q%jH,jTZ7,3=>DK>GA]GcA\1(@OLX7b)23?ZUq[a0Wmd3VS8CLB3&'JUji,K"F7+hD(D"$f%ZbBULR8PiGfJZcdAL%^iS;%++r%;Wr:qbT=a`b%a9Xd6g7tnhJYGM7uV]+#a6Sep$`A*>=&m-JTafdKdqt7OcsM7"ZQeBe68'oh,")^dJ47_`(<*6YV<aD2&'7QERq)%llUM3W*C;1=K<nQ:l$$1Bkj/@$@C0Z_0A?n&</8[V8EX,%J)jL5TdsM&EX><6PWP@YcTXAbGmh'c=*pG)dXf\UXlB2!WtZCGAosQ%[7=2S\lk7/a9MuJdBqq+^_agPou+f^:[gdFnPQM4?qXBaeL,+f_//;"c('7,3%$$R"21prU_+fP#%5:>eTEK*$erc>H=0j2N@.6'%!9u%FY$'2@MK;Vuh:_oS"1MsV9_9(O$aIB-_h=c0K.Sp!fEq^FZFhHS((b0p(!Ln`(+:FW,,CGaL4IeX?j[Gqq$oD6b@DC%%^h1*%.O+F,P8"'QAboub1GVs@kdhs*QQ6;J!1#8kbK7Ec("e)rK[BH<65W`3SeQ$L@jqEWa6!F3;5)1P7:IpdKLtgE6rFUg@/)b9Pq^$8%I'Cbfa(Cu66hjmq:ba1`R2Ra`bSJhnJ-pZV"Da45[Ao=&F>/Kh]>.U8qYN?N)2L&0`Xn+WG=VQHL7JT4\3"7a/"A/M/H''*0h.KX%1IUHGGa4I(6'd9_BMO5pcpnE.V7a6qY;hL128_^I4I,>c=H?o]0l2ep$Jl'q4;qBEY6djU5o,5R&r\Ei+6#C%2H@u[W?$;momoCI%$nTe)$kP.dcM8]J#kYAh/W$&sJS2Xtd4=Fn5`$Ce:aaoSM6R?=Bt)[[%9m-O#cS1$\WR]N;-\^mMFN$Q)f%g6&-f]aM@lijY-pfq%Lu'@9I."AV'9qtl@_28Ai"!C8%7%hJ_pj-L2R405JJ2AF1`8=\nOlR/+d)"B5$$F@eCfq1'F,!K>)a/&?*[eZ0IV)jU'EO@/;UH)%J-RSlMP3q^7AVe&,^<Olpt_5!QcQSI5CjG@RIM'e^@QESjhh)ELYc\KGbR/NRb&j3*_Gl!B=>LKN@Ph21!)n@o-=H-*&:;$Z';,4%BspTd&dFZ^?sl5]CUsl>(E$CkM2I-7UY^q;$V:B[QaN,p.9ml`#;a5=Pf?H8k57qQ+!UN>n<bDa^,D@=&I)*Dpm&Z&(nDs^*f5PH%$a7KX_f,[aI1W;$0a*?p)ds42UNApmi/L?H7G%r37f9#)YQZP8mV(!IM4T*YA:='n9jh',Dja>OYLmf\03Q5lCLKkp^jFM)7ufri%2$IbR3$o@`<KQo2c)Z+58^]pUS3U3R:"g9#/JG$9N!$.q&MTM&+2R&70*;PbFEN]PUShgd%BXd'E&`jN1PB3`b/]=+cbKjU;cK_Q%0]QNE1h$0'[fJB)h)f:R-F[CYcWpH\e`G6PP;uih_;#CY#&YOp<8(l=/g5re0iX6/L!CT.+`QV%[nMd?Yo<^o;6Aj#N"m;JYm.6D%ks$CQMC8ULq.^`J,`HDVTnmeGO]#)"kn"NE'XsG4'ipU&+'@r>9*BXU>Lhkiiu&6qe.ChHc!0-_WSee7S7u-6AB?f!5JK)aCh5FG%@P`3b0-\AoM'?^[8j=Z0.(ql25%A.ppd1j1L_`=t1CV.YR.MRCFq)bS9?hF3`Dqh90V&d6>0BQk7>j7Xd_0+egq\&_.j[>Igg[+^%$+J,7*Ye+$RTP`Y`A/QA@FZR46nHm0o,R4QR@m]"9W-'-eVJtXnrXtHi\=WCj-tm6(Gl@.\KH.mKM#$2A4$$WKi_20Ij=2ao1=?t%T^ZDK#&EX;k&M/1ZEeJ6NAZHhTKk29S_=#us.WY]0E][882Gk<(_MAL<"3NLe^K[=eK\7,^gdZ_8$>fYS?WiDBG3O&Wr\$5"ri`Z%&PijN&aL+n!BPf1%p+`N,E.P7aOO%l8/N*-=:t\u/(.C[=6p<u+'R$9Q%tQYch*[UJ>-=JYRj_",$^Dp\!1D2FST;rX&1%&T\.<C%SYC[6(b,Z:?jEm7B[BF85D+0;67WU&V_6,TR>>N!il7WuJbR[DR1"bQ_Dft,ToAA(PBrLEG+H(Q$4+\f6#`qN?-&G99O#W-bRte?%YA2';m!k%^EZB<Xm(0NZ&'+`s@EW5`lM*mZT`Za:SH<J]8U&igY,CE6d*Ae5mji%TF>U]dl"[)JZ!c8#GHV8Pi+E3>&hK44W&&OE%,n$h=24[T#EZ?g>OG!b\7Qj0k`c/.*6&5l"%*)-?#Y6?bfruB(2?=%ml5=V"SO#@0?kPYrd:c3qEcgTUV?RMoSFZb(+#@-4^3#3>%+L6ooC0L/X1*sjNTXAKYilV;76b>G@=ol9J671YQ7.MHtW"CP1B%(.![+HC"Mj9u<AGIDZQk3Vc5&t=U7FAM;e5u:242B>b6<H+G%6q2iC"4;qidq<8kRINOBn+;T@.Wa\8@'.FMM4\\*"0tE8?9%1)K@:I>$/kJ9J-O;u2YKuFXn>-=/&I-L")oTjb(Q<cF&2;"oJ%NJ%;VK`Ek!D?P"5^b#8TL9>Jmf'$+qoBX0AHbp-KZe"*YJl:ln2[]\RBQ4(%I>b0t=7XMX#&&ULeT79rK#W#O(O!Q>cZ.4i#NALQ2Mf%)]qX5N=G3[5*BMG%N=d#(7kpR`O0dt0Zk(:;i.Gt+X,J?8aG';U(,X+#!C!!-%J<>B@$(0W\,DO4j;F)P(3N].-qOlQbH-!=>I];%.oMq"eVL"]jDt%Hbs#Z*,Y]"F*)Am";%W-31]W:OOA4>-*JmHk)eNo\gZUM?$0JBpZ_"'10pY(4Vi5-'A\@CY'Tigb#%7N4U/e1P%Okp30kpLhcQ&,d@pDG(s.S"7_.fi+_U:H@;Nn@c^TR;X:!*I09K;8JN!DZ/C(q?4#4>La@9e@Nuc*&e9T(2Kp:0T<rKW-b7)]kl5%ZUgsD@DR-9ZjH!qaprSF'd8n^)]F6'2"`MjP!^(PK*=6JiY76;W*&7#i/t07U8_14.H2nC"XIWLXme6Bp0EFX.i`PrH494N;BV3'%/GkN3rK,[V!S8^rE!F4C/go$+k^BZ!==>V`#K!O<_on0XTIr$2Z#gWZP>R2*eiZO"-6U:kCE(p[,7.M8/(t@DUr,WQ;,OMr$/kg5%?pLl,=9Xe@.%Mf*Z<Eh7AsKh@PCB8gM^U7.&1!]L(Q_;k/"lP!)uSdkT`(Me@<IF!M#/D3hY#Z0i6>B\C%(qtoa?'lQM=HS7%NIb%VOltXVBQ'<jUAq8bn^i12lRr&eV:#G6JsAp<Jk&SK[nt\9ffS]'%4[2X?dYY5!:;FRl*i.r4G&pVrBXkPp:ZPNtB<%>d\e72psl[%TJi4GXH$ahWP#pBV^SPuX4\<QhuUXcMSWh*A[_k8,G9RAT`*2)2H^dRE[%h!Jqj7pk$/h^,:`h]3-^K%DE#uW*LuKE0ZMFEolgHM%)%F:!r'B6N1mA3/O:QsupX0sV5>nTG'gZMM^nfZ%)%#fZJ(iL2!rFf@I&@P#KlULBfi)Z,q3a']*6_\G10Hg1eEeT#Br!qfHjpih%D"O_?ofO!lSI&,c*VI;OWX2\AnfP-Nff6I"fDAqN3Eu&_B]ha$1tQCa&s-O!b",73)TpNTD3jr[Fli$_;*;XqfFI7.NDo,ZT,"AY%&u>WhOZ&+g.'t3;)s=L(#j*tq,U?s^dK>TPfS7T4Yll6l`R#oP7Y*pR#)\nQNX/@#a]?HjC@\e<]ME&U$O*&2cP3Neks?+39r=XN%kC+^)3C8nV!sFA^CCNUnno2cS`"Qf$+<(UH%o8i^6DTd,"@uRS&1ob+fjI4'lr>]k3bTEs;X4u/R:sZ)ZnXs?hNAXcNG'"ePZH.8%V\Klr*cQ>SfYP`.oZC0R,%cZ'<.kSnaET7d+\6-uH%'AjL<W856uu=pk]et:(Ml!?[si2_`]>\B_-t/=Yq?$dj>G[8ntQg+a^e.$%;N]lcGZ:0/SpSP=d9J-$KL>#u5]QljC;MCoR$&m@MTq(ips,,r<$Wg)Y'?'ofIJWtA;tmR(eC#o4.aLnL1Z`NKus-3&Zl6D$m808%d31e9/LAX-d4;PX3IS9U![OMC0lWo`laU#[Y4]kXX_WE`]Ga+P@f!):#I$N(Eg15=$.7gsCuK%UC$7'<ZsQ5QislVSW"6]m,snJj%-MX7Si,p0;-ta8SPl7kp@Dc1/Qh9>RU^bdY6,XO^4/+>Y.e=Vm*FFS_k#D]e3<CaC._+,]R44iFhV^_HQtEljk:8_!c<ITudFD&W%SY$`9E!TNOLh'tQ;a<qddPJD28Q-ok$YIq(.2eOm(`XjGjjFME;.^(A_ar0o8tR^(:7F9nU4hk@ogbcGkEmp?X>NVs3#VBTc-fVM%:=Q*&Yq?IL:`2/PT"l..m&[ufUh!/$8+SQ9RU?t%jH9V-`=nUn"pn56IC@9\^!a7J9/N!(Fh!\DU?::l*Q6]JbX6*>gJE\<i>86n%#hb;aH\OtVR1d0@:SeRpTV>UJ&#@mZ<)^8ikn[YJbU89[BgBOijb9eeb*moLg_-prV=Dd(@<Ja8e"[6RA$KEtF7-i1b'G*ZEL6n6%`#)W;>HETQ0gE'LEAfS9)W!kUFdAW@CPd@-"qbk/SfeN)&IEfCE'`k7irma`Ul-r=NL+3Z0=&`H2EErQk\J8,h8ostliQ*!PmC>M%'+gSsQ@"G/Bh_A4VCdY/672eKJmQsC=>Y:+h5%ARm!##"kY;U:,bDh.LQBni>6pW&<ha/-_3oqZ_@/V;?a4=q"!k:]Y+NC>$i.df%BWl.dGbK%MbJ/K]27k&t3WP>"%"GQb`JF^>MDYFk!IdeuU)'IM/Hof-oFS(0OKH3j`P&.16X>Jtnmh>R96,T*c,h`c!=/49a>8Q=%/B:"I7KSc[M89R.0<#-[R?8OmO=$(<=OHp;OCgK3>a-8W1D-ckdid=i:^e.A'-aB-'Gsnh\t!Ca6$O"($2e>s61NqB2#/m][(n>5%*ci-P_9,^G%R'\4=U[JZJHZL21-c=8A[W#o56S57@1dfUOW@&s.7JO_;YX?P)MfUnVdNLm3j@>;(adiXi^!"&_,[[6%c3d16(CX'%HGE1`%a--;"H?o[6u_WUF&Dq1D/E:VChp0lKJ/P7H*&$:)2@>g[D:LtX\n_U0\C0koIVCtTmeKlq4dRK^mp7qDH.gcA%Kn?%FCKC%RADG=#VKck-dc/V9B2P?##itc(VAQ/)M(R?2]u%PT6O,Y%WF#ME@!mXp1IkJ=]SToFHJW'k^YO#3TJ$SB<H[:-S>9bbE>$hP81_T%$KF(9osM!s`LGBc%*,,O$e8=U"GA3+X_"Hd,J0*&g-e&rI[VjVOi:m6j5`g-Lk4,TM,t*P9pAeEjmD=?<%Ql4A]bk.8:ogkJlHkX%Ar&G1ZAN\3SfeN$T?nUKHfce%(<1?e^,cB"?+:B)8_BQm[n,=dI61np[/0848@6lC@T4'CWB(BBb+aqZ;p(b_>1%.2X<L?mdN#&l%V2jbSB%9.4`kDXGAhO1Xc'g(TB0rf'5\>+0[e#BEC8`unY_Mlr54;V_fPRE"1enE-*FjIZi>s8&XtUQsd?8Mqcp2"d:U]p)^X:g[%/5XEK"IQdo,oK^4Zo_CB_It?>%'t>P7WX&7Un,X*SfS0tXjtu_B[^W-HH)'A1r`0eD@-mbKTcXc6_]uSXE^j&kpk+<G-NuN78,bk%oj]#G_YqPJ#5[UFp8%-aH7Bit5S'VJ>.=i%#,k%n]U0En/\hD&167Jaof?Do"E'?iisFNs_q&%kCgK!*^Lu3%e6^M!?5$+<5Y`a:%;#'pLW/Z\f/W+CY7q0EXVaM'u!_:kB=k*jWXAOo]$/\^iJ^F[p`<_-4)Dq%oRtgDTdC`r<ViM*#-DtKR6WOTt@4&app`WbJnNAQ)%SS1GXe4U"mLF)VdjI'=4g(%E_dMc"HBM<,.<hU.^raKcKR]M-L6..2)L0Sq^H],\,JRqG4PnO6C7&7?/rQI<^&_[OScjVn,Wq?_&%>_BquDJ5c>ET%#/W9Nf1P':hLF3tjH_j-$THM'Xe)0<=fQ(PB/+3&^mn4!rDk5sJcYCH?@[niU1qY'XUpOE&5ofnT<kHEdUrpb?K%hrQBfnEg$b:Yn;4mTXtTm^_`So3WL:rr6<m1B`,&jVZ.;WBXih&,[`-J\GE!V?Q:f.s)@*b>%<O91;OLDA+&thpP`WCB<"i$nfc@%EY-dDRilbf+cFc*J:kB<%9lXPKj$^=.JaMY$#0a.V*JBC-p>l0$Q5'!`Pd[$*NA!-\2a3R:HSkn!o"Sf_omkNU662+@dN-*#I=C8%?U-(D'Im.LSng)$K0gjH61fC-ns5-56MY./;+U<.qhR"@X2^UqBakb,//[P]rLK%3\iNPko:Tr6;,b^3]9%[P5n/!?eT+.eUH6<:%'8Q)YAER_d/:9pThfp=\I^CX^^fcC,e.K\g72AhJ=pF>iF='2O2[>=5j98[1,SiZ*U2GM'@]6Mc4U$Pl5XL0p&Gj/'B\lLgGT+U.%(df9aRtru^7Ugj//U5N*^edqRgfNQVHAci@0l)H\i[p6Gc:s`;Y\cY"_'5##YQHUA!$b21+T)h/Y2,0n"!-T(ArI9MVr#37TMHKh%!1*kZ7B!qXU*jPA29V_l*E&Eh;apP98Kf!_1,0r32@\scOR.QK!&ccNUaski@&>.p'GAi-R-W)<7ZB;^67N[_Z*VL];D"B,kYl!i%K386QJeY:g*$t^A@\?7#US?Op&Q@#oQW7f8CUKU75X[HtOf,uc,$3rbL_MTKFftRipSRa/]J<!X4TN51<agS6^i9tJjQ,>P-_D#a%[HgoB$hUMt?s!X^K=,pSP!QN86@akE1!RtB@B=#KOC7l.%)AB47/`>"BsWVUAH9HE+3ACD<u#P.\F(V.m3KCaV+hWaRK(6-,K3H`%'HE@\Bj,SEn4FC6L?,9(&23#sjh4Ja[RgNL/G)8R;%2c[7EA\5UWi7ULXOZKZ4]Lg=8#b?C;(cP%P8;rZXVDU6!@5?08=sq,oe\%%2cB)u-k=:WfV*'8@RZud;b1(M_TF2r1/)\0*?CsV#gQpnUS1_0T`b'c1fPM1T`UdGeh!J=%'Vs@H6Td5_f3pb2@O%<=aHU(k(7oX%B\am#cVgRSE4s!N-oM3lOdIFdA'r(P<)U)TQqf(UR[@>20iP9/7a%gDfk)gN30G_L8;ZM;Ce8F$1&2,RH4Xu0n0+>;V[iWl81lct%riL?_eQOIoWEk_h+t,Gel;o-C?oEOgBEGf&'dZ_"AjueY=ee(`!jlGB83gOI_l@]TVHj@g#oWOX4%4JcMODN/,]1Om(Q^2PU=E)h%M,/gnH:U\*[)s<NZW3X9_#fjqp46$):6EO)ZO'T(#Z!hG\>pU"_dN'Dr*(^o6u3]t/MK[1oOh;5DTM31/A,[0Df^ep&LKn[F!AU=%FNC5EWu>\MKms]FWffOWH2&GGV%E9@%8[pueoF+`dQ/_G,D?uS-^jRrXDH-WN+^418(i2m[G6QpI#)H$j&T1g"KgBC2Kk+o3$;m,%(/R`d2idd.+pQrLVhnldQ6sVPpe%8&$?OH%j.1`)JB(*n9VtQ$4RM$eR6r,`W1`3K86:Y=?jX=VR%cDD=3kn8A4LMhN01nL?l?.M%Kjs<%@Am.##;16<M9#sU.u9-.k[q'hGZ!uB0Gqc1.L&.N/!LDmGa9CF=k@#Nd?&XnJm6hU,*6/"#8E\p+RX'7pBsJ-V?.Td(`\35%;U+qC=HNqWN)c2dn9tsFbXH@`ibL4W!-S??k,0@1%N[_($)T!O1gGl<_HUbUg5[(RMoUAe!82,r45iQBH3M<bR'[K%B.!Fl!.l.1%)?hOGcPkLVQ_D2XQ;0:P=TFGs-Xo[jojTV4!bsL;idd(<Cdjig>&ag%qfN@%apKiV;8Li-$cd;:5Z^mS<qpu=7uCb.X0P'$q2rWp%3iu,8A8i5,U\1_6K\GV$+mfcI#J+4eF[HPP7PI(N\ZPpS7SO@0K4LMr9dgctf=Tclm!A`+%'3p2K>c<&/=ZE'9JT`/i.RB'4M6]9%Fu]D_l)KlLhK00I%igs>Xm.a<*E'I8/m:csOFmb9"Q^sM]2b8ZeG=uYomr5Q&sflj<`UXQNKu7'3A^'WCl`74Wedk.V@cGS2MfU&%5bOu\d6sbN&h$6ULX\i@GQc%uVaN+,@*5C\3E!C"c6W?=/;aF&:H"0L3ZlIo&5`Gda`V/q2$_V3+9<^@8G^1dT`R$Fh(3_>>&irl%*MW/"JRJU@j\515s.*)A:(*;K'-FZQ<'5q9a=_15(XNC6]`Lqt?F&;4:@lVdWHSW`D0mE*?;rbBe"g*j[b>>o7_O?53WhG^<btkm%1n:kV@PTKHSdnm)jJ0e$_[JuD<C![]k"Cl_!fed%/1j"+-kF.!Y:>,$CRN.P3Y:b*e*hr@5,t?8i?d,Q0Zc"s?^b]pJ8c=.R@M3n%OV0DP,SKe1.NS%;6E0!R8OJ$l>_>+h3c\OA=FEQ*.UL,A-a!;V,Y&s&,)n56>K3t`&06=!4DkZ1Z4b.bS:B>WCqkIb.^"h)ompj^%*>@ar;Qu:dB/O9RptD,o/Ybk@0&\11I3:6:he>(Tklt/L+U`r-TTpeN$8'O_XodulY;R7s+G3ZRHdK=2TK2qk5\7_T)n-V1YQpAN%YF6_.n"F+/`#!%MJM)rqe<e#X'q8&F"M?tMC3"+lGQ_GoAqbsS"5j1hGSMJKn&3\SKY\an7a(&K1a_["VF-\)O.D,X';Z!T0dAMM%9%3p5SZ<[>juHkXCW6ifN5u*!(<`pmZ[8!I7i3$j@"(SP=j@p:cX3mJN";$+MeV8CAg+sj7OtX`Q4AA#(7eO2#r9S3=fHd(?6NjW%P-Q"_"g"RI\5uQ'C*?toN+UZV[:/#ZZf1s'b<&.IQj7:Ri:P9F>#E]K-(h:ROA_J:Sd7IFJ$T!P^i9c:H=0hb<$s/US7Z3qC"Q@D%P2KA0qR,CA9\bqX98GNh*j'+pS0jl4^oD*("7K6Z;H8i@WBZTJS1M*g<-2ngYQKX>Xf6m8e"OiOdhE\@dN5AK=!/[dN)Jp9^/0/D%C6B;O!Zan(O`V$JY\-!r@F7c(+])Y7P@!J[AYVp6r'N$1ku;hf14u2m$-6LAG*oSjU)?kZoJrWLaLh)8U(1)P,m+edn7@u!=+-^2%b[nu/TTP8>F;Q3(8K]g`4g-CTqF.@n8BO=u2&cZ2U2t'RJ7Q^$<*ZIpq^*%.V'^Ac/RHhW$?Wf-Pk0TV9S>T%1^OP@&:LJmKZ7EN%@UoW-*$R[_eV&936#f5Ud#eSGOtgBlEYmDD;2U34':V9$`g]S&aGs6k\p[RfoTSP2frI,&;Gt:8NBh#X482+uGR,I(/e4\R'qL7f%1H"!Z?lulmUN/s$eOk<>A\C24dhnU.O(d$SCf*`jUZa`lPW$mg<AhQQ85t?.6GJXo%S0OuaZqqnrBeXn;.asVNXM3lK$FMm=M.`6%A-g!>8jlU02D6=$)$%Ur8hT1e@Dd$#GU7JH!ssmQkl`',q>_RIAT4=V_Y@A47[MC^aeUYf;^%p1WZ7n^f@H2nQoWOT"><D,+i)K)%p%G7<=%s>o?\7D:CU8d%"JD6+/g>J:r,5TU!HH''<*O`W".\WXP/8YKjqZ;g.#UbC8/s$C[2bra-&kpHBjjc=:8rqX(do//30:DE%QF;`R/bEHU>u68aQ3_%2HH;PS'ZJh<"rd(5l^lZ0F^u`.K'FTCLVO\&il6]EFe>+2:#lBMB2L$.l\bMDg7X*%qo_h<dRLpsCRq`Y%TOK'0+G9oIUrYE.G&iAs"!C<G)</f_!Y;Xcbl^AD=8'/QF=%/AZZ:8Q$Wn&mTJK_l<]/S0-Tb+&6J#h*3\im^&N5gYNV5Z9P>/`Z%#1',)L)Q`s\`gKI7>+#"W+d30C3e'a=52AC9f/^96fB5QO;\`UN4oBkGiBk>K$@!W!\Fa0FL[0oZFGjsJCk;m@]`i'e1W*@KTVB8%ScmLj7r:)KM1'6.Ef<b+^\C=m!A'pu1Wg,E=C]=</q@)JCM79GmlI,b`8aD%imi+dIWL`1e@7c,MT'?3#E^C\Za(GgHlY8&'1>k_%fWWN$*9X7>^Zl?.jl0BporBU"ZdNbT#A^8JY\7:_r*m#c.1b[`USnZm;%;YAHAT6P:c1.@-h7E!P(M"$]4.FI3<M!IZ-a[?bTu?C%DmoM[OB1\V);jDAPr6soYPYI=kdI3R?;Y^'<D=jmD!_A$5r'"lNB)#tN2T.Dpk"Bs!!J!i2^G'5;M6Q7I?K,\F]s+3X]JL#B%VR(%qua0N$5c6Yi/`93<**5G@"<%fk,eE:WJtH;.Cqd(\HniVE:JKZat@;k-t>87)g(EKi*i`e,oHf8hT1(3n1Z9$4>A5(I*=mmM,bIh%%q[[g4\=ji6N+L)!@q/N*QW=QoKjGGc2)1F[uqAWM/Z;o!_SQ21rM]Fb;ql?MZ=G'GJgm'WJ-&Q>3IYheUgcS.YMqJ?eEN$'s-,L%.2l9.h`[Z7I'T%j!L4pEK[UPOdU-djXiBK,H]]ke^/M$VANNaUc=1FV]9\Y>SI?]PX!e)2"@D'Z>-1CKESgr<`/<!tVQkCJed2aW%VI0BuoW&]4@\XLq!XD5:V^eIHOlZ]YdZ]S*7F(sI0mC_IVUT&[@!W`_MG7HX&+9S<##?M'9\i4A?hbheo'`RX@]pFU*0O1,36b=(%.Zu9tol[[C80jahBAKn`U+QNnW+Ole<1BYFbXgdpEsXCm`<rP,(trH'(lBnJ,%FNJjZ)sK_!FHd[L6,Gc/9C[1Emt\5J$%%J,YBK%kW+XN,"RTOHYMc8l)Dl[:h5nDMiJ`P3,K)c<[bt<g4PR"qZ[HG(o[(.F]L?<3oPo.A0jlSlAOo,8W:#PF&Maj*Nc3M=6g,2bL?.D%c9^88f@V9,o8DSLo\eACOfs96O^A`M5(CE[U4Ul81K/D>[UDlXMM=3gR`L;Z\UQ_c45"kQ=X+=@W7+-N,Hr1>d0s9GZmU\7a@N=d%:(e#=+)Wmc3MK_8Ssbuj)G=mPdmj:pMRCTAkD:?#C%*$Z2^++=F4p>^OhR\k@\SV^=a_JKIA_j,2dY]j:C+X?Bs;%860h;?FL-o:%g=&<.HTLB\-CkSamoh9=Jn35adt>)O7g=tA-@44QTL#l60]7ru]"rG=D(n8n</Sq=7*t9-dd,+Fcu>lam/P?5%30p6<&4u*[Ub0=%!hGdVf6.d?\p.U,SN3@*fsb-o%c_(nqda6R(neE&:%EW4BS'$]<&=Md-AWjI]@/u#O#4F2rA1]2P+`fk1T2j/C`E1+l_*:0qRLPQ%-+B"$,=.(n(H_2#a/qt<p36(?OOl4NEf`M<Nei8K*VhKn!_Cbe\Y#Q:R3Ogm5Js6iQM\mKNB;uj)`mLFG!_suSnOaY:P1A"@""?T%a3L1okqf*]n.]N\B/g9p>OIa%/Qa@(0g:e92l/[rF"8.u*e_i^)2-QYI*ZIEZ>Ip0cY/l*[.hl>%#u[0&D>^-6.(nsNt8[3m_n5Q%7/%,`,_u='G')'cM@7hf62/TPE6PIC]&uX?d64P[GFmrkoMJeuAPCD)^PbNQ'AkTd'ZbP[c6D"FF;s31-CGaD<QYA*UO;4+OCU*p%T1SAP2gIph$n4-a(nApRa@E1YE'BHc$AA==c=^V&5^E[u1YJ-r;E%CAcak?gPs(9$R7dPd:'^#>fpEa.QoEH+g4-0p)sK/f[:5,+%-[g_0bIk6No9l\aj>?:pcf>fb++,GaL.(cER7X$%IOZ;EEB[=:DDTFJmY8],g6qLLkit^#B)E2URh+RnSiE@1@&728EBZ1ZE<W;p%3M-msi>C?i5!.>=\[6??6UE]4_>-c.=!N8;Pg<HiaQPH/T<SkT2>9f?9Rm;c;1nG-BH2*FNUiJ;>-YBt62:qc%jnX!q!>M+"uK]M%Hj6<7SuEan1Y*6,K$O2Y8EpXDUN8UdU6XFgkHj2,8_J$PcNr"(/7QZqN2R04X3UN7C;EAh;E:@,3HU7-c=]q=e=$U)ZR>-Hgf$D#%MhW0KFX\(\7Ni#u1R>;2]XBWX1Wnhnl.nD^Z_dUrPg:iLDU8-[;Bk#<q7POaF$AnG$3!\ich_PO6]L\_HiMC\XIhKZSrUf-dV,>V%(rDm8R;IlTA5GHGlK606C6[$iEo\X?.A'o64@>\1fdg:"gF/ZpFL#@g8,3RT92XnJq$^e-_`aR])<Xued5Y&gH^9.]^JR/s>U=C*%TR8)3W00DAPg>_q7NlW5ch,Ob$^K(PEC&&)p70Ius+nN$c=][]Y78cijMcf_%LgWqP)WIO#pe[iWF\Z"0loP-4!X]!kBp<%/K<mE%G3-sD9UCX)Y+>0PCdkq?UiAS^W,+<rF`9O>l':/O31lV[(L#L55',IJ#&u`fZQh8RBcH4kGZ'J^HfBFmEkqh5_>0%]A<_Saq$a7j%&D9XIGoknZ:ATpWL`j]*qM]Q57=oD)I9%[ahZi=$#"/H$lHIeXgngH*cb_:-*(%Z9o\#@3@Wd%GB@?%o=>nT?/AXBSB@:G^2_*!h%-[d>pA>sDjI<L,oK3d/%T.@C,gaJf\C0'NAp^H$uq+I:J);&NFAahi=>n'K+'9@1U)YiZ8cc%EX5UUp(:&0r"Y%J6EO9a;l2C4/s%&3]3Jf0&XeB)m^+rJ]m,30*;USIf=+ZJ:R),D*aJe'@LM8;dK6A`J#IPES&`31cOWb<9l,a"oO=Q$.Q7G_S'%#O3;TbgY22JrJ_-%'&A(Nk'4&a#:p:@B:'4j]^H9TZqQElE_nkGVCU_eiApR=G@u07kA,SHF<JV5AEW[icQkh'%<n^k-E.Z,b=tma]&-@3@tLMl,]KMZ%<f&IKrN]ad*h$f3nH@[9[F7/%>6%YA'%5T%U$o-p/U<j-5XCdoiSIZ8fd?uP%)"H[d'UH!U3D@Z_#:0ihO2T5n5;<^1TW2;^PUg8%"^2kU1\Z]94[`q,FtDecD9qXo\;G/^D!]FI*GgdA@s;PH874p5`9p;T37X#D)$2<`R)ki/jWnLG42!EQh@4L<f6;M.adqt)/-P>3%cD8TNH=Wptk$%n2T';eKQ3*\ldlZ#tFik%cH=n"hLs<;20bDibbLbF<=egS[p<N)"fZ06t\MM>-8J'\!SSA&f%cJA;1FX&A$Id+f%)6fm9l/^,X?jk/<-?<bepe+el:@:fM;6KLH\MH$9n?&89R0u6=YKlMD8jCmsn$nq!oe<Eh3k$oU]VnRe[km:;=ILsc3tpq`7$nB8%i!tW%pl4#G&gh5Z\=M1$>MI0b%#N"/l\!sFZ2+bBais.rB2YuR[ke&!V9PUASQY!HJILR^VZ'C]?fQ<a;5]m#cJ6^4.,<"V;`d)3%OoeaUWL\T<0V)fP47b<mRb=X1Z2At)7XX3=jpHnm_r,]]88kA"ft!Xs+k>OFmHdA,)p:_<$jjDk*7W9D0Z15hWL`iQ&m'6kB,W*J%)XGnuNoZXHcg6U/e5VOTlqHh9Q5Iljc:m-S[MYRgRAiFkBq<qFP1@eS_<gO.^,DP8R4j'nKu*+LV`Yg\hdCV>Ta@u+@s7#6lA;=c%`pE'%78__O4-Q(o%l@U*[,&kV.?2mrXi0Sb*N_+Ja'+KBXY\hiO`e@d3]gmha?*R<$E7r*XYV9YP,Hbi;h@X+*N_-R)K-SW&D(>R%%g"(>>%cP=_-!5LlcbYum6'r#PP1*[3>8SPF?NKh_<\1ka-DY:RHIs"g`<XU%A2'mMfhn?1P>3MPLl3:N==Ld][#R<oOcL5f,8HE%3SjtD1WG$CUJ8DH*(a,lS_9F!?Fmc4`9aSQh(it3]2%0:\=Jo(e66@$4%!b6>2sd<PaqX>FDbadm)i?lP<7fa)=JU,cM/l[atpRa%4dB^F"):=pB61hO46'Wu!1:<fnaS1d2o`@uW<ZRHg:<b3,eV,[[kft9-^@WnG#jiF@s4aK8%`c\m#9?:2#4uSb_.HXf?VUc9WRZ"%@Wj(r79]Z8m*+7jCmg-4fbo?4-/7Y-c3t*FVTKRY1LZHh(.m=uc'j_PW1=g<+Yl,X44B!b$>AOEAs":2YKlR;7>8/dpn6MaeLK35%]/+Ne8D2SISRFf4ESo".bSUak>roSRTIntqXg:)VU@`@[]/-8,S*K@cG_#1X4g@'^E9hkS1UWS6GI5g[]/(O#4(;fG`^&%UYWBBP%HBrBIKADqM%[)dpm*6Fab/Vl_S^B[5fm%.RAenI/*d&)`[V<i&\MKCr\:s]cGLl\k*;AgF\h//tka``0-@=TZa_LY9Xr9+01[Wg3%_aa+](g@JqUN^;W'_h3hl(&Q/Z?fJ&"AFWH<hAQHR<;O=275QRBXg^5GP9<Q1O&K:Ckc?V6SdO9hHCGBhUsuC@X%IiBWfL]n+=o0%T"2c7NntZ+=)jpNoZh83^9,gFZd3@Bch,KgPdT;h@F.(\a]V-W7dgb[8Qh2!@F.*Br$\[.F-Y!))4U7ln''3+Q3;DXB-c<urWJeK%R0?E5o82<A`D]r9Du@m3MrHodS_tCSOHmP,,'_,>dQ6^lc5>8=C-D/M@q]YEFFIkf!2/TScFd%$'>H=gG@M+:IV1L31"m+dB8o02%NSYPpf;,_poZiPcT/G"XU]#>YKhh*\A99,32L9#+6]6G+G=F3/-GOh=GNL,ChT26"6.#-dP<7fWe=>dacA7E/`,4kd?q]%iTBVog%^-I-t:@Cj^G&48.l('P>'tWZ%cL_E)%CDmKRVgZ9RGV.17FsGHB80BQp!if.+^kE,No-8*6/N,?$ctpS+ckmscOd<'D.\$)/-\aQ%B6`R*_l2c=chIA1GG5]l`UV1E6/VE!mi9Z6\S/(X0TKd_7;c%9*7%H,TlbY.VNS5?=Nl^<ccicFh<^*[R>KE=J!`6f0l'G.0dF^p%1FfDiHdJ2$#.'g/1WM:QRV"OI"aX>om)JRCs!p<H9E+a+4L;s1OSOpsRH>T]ikb/D&PX=i_=:2['\:LQ*7&:rqL4(WRA!7(D0:kO%f98%7*7'_`b9%GEQlJN6#K8K21<I:T'[O9cF2pA]1F:97SLL0+!2dq`MJ#&&[cX6-eoH8ejNSCbo\iWt4Xcm>s/t$n'[L`fAI-6q%`A9Vm;Q4hoB0,G(h<YQrnC&nI`gPd';R/XuL1`KZb"pP*SfN%0AR'@eG_WRdmaZ(]c\0q5A,d4[1LA=g3OLY*47;K1\h[c?``jiI%kfiN)r2`B=^_jsF,UA>9$(_aE#*I?lG6XM._o2#f"HKnXl(&D5BK9qrcH*n6EdVMDDRSZVNnbM.>Rkc6G(sB6Fea*a&f8YB2_dB]%,9`@5Ln.[Z?N%n0ghd"E*NaCh/I_ob1N3[Y`+N+`a%ZHu2caQ^ZnIBgfl86Jnc2IecJUZli_CkDL4OsQZlQ,eiMcAfV_a3jkbiMp%B*KTbR*U`:n9[`RC5gH:)^dp_-ZfPW('lpEI*OEf$?)b_cC(nCT8J3/@0P2AbSf:0\ktJ/dpFH3(m?arOB@r/'02DPKX6<P)3#=l%Zd^+<VN_32S]DZ]jdba,cBKIH[3K_3G\(mc+EE2afHqML:eJM5gp&j5_S/=qN9W,&R_d;.%*(!g$(S7%dA,n.cIK@1*X'd0XD2lR%hb6ASe2I#4]J<t<K>![\R?Bm3m*1bMYJSq].0(VLfUF%X'sV7eDWKDb)gO7;ZJaH.]=BqUbm&;HWbG+^)fmejH'QZr,&YEk)XBlI%N5,Ga,<BNp[O-,NRV0q.AuksiCaQ+g->TMq7``T)1c%%"K0dkM%)QUM<T4U]Y8IZo1Uh1pCI[fU']tsh=]&*QZqb_fOR`JX>r*a:%BH)'<bT(-?air?F.:N!;fF1@C<ar5!(+NWmAMXuX,OKtTIcG3ug4[R-ZSgd<!XX^CXI6m+AFOfGk%=K5b[etWm05)3+bUA\+Q02N%X;OhreaJO#R;b7Y;[-G^U%VC^`n!gk*Q=4([V!G^<c%.bkaDfNK+Vfff8SgJ+#)oIZ&FMm(cJs;/AcLJGBD(h%saq&XdOc1*p/<]%),dKa6.ZMO,8>d6R1;\2e&TDY9`,[bo?PqrUOaTV_:K+5K$id&?Sh)@R`!.s$oiV<*&mY]+jokCRBKbu?_96jAn'o:q8(ZVk.>GO%fc+D=lmd1W0fILt8]HcR(n55TKsVFMo*\T+2Ss&E<Qq\>$(HK1CXH-0ChEB?aF5@MG-jY6]/10ZZeXEXZB6jlOH*2n$(GY;,=>m0%f^.+qDB!#jJs0X'CXuG4T!"JA3s`h8\n39rBGJ5.2$:VVY%eVS1P6Go6gnj9BNF8U%^p!C:bc;U_:MBQR3lb5CSn;6$l'F_1VT%a%io"TqKJ:84f*n"#JF/B"R/eeg[a?s"^tR^4f?>qdReCRBb[07Kdb1'tVDDFfAo":2:=_jDCPLS>'"ZB>m't0"MgMmE(7]H&l"nVg%aJ'P2dl#%\;_%$,f*j<o0\2n4<ZVMso,`"u5ZMnZL/-?:W++KERYa/T*15uZ=ks+7C="gOWDfO(UMIkr&TZdV2$7&qi-!C(j6PsN%b\YN8P-1[G2=mp"G(6`lT9ZJ]40iH@5\aYJZ=ZG_hKJ9'ABb7sR==#7RN^'IY*1^F-J'h_B!Q$#CJ9r\ABg2]W/j6qbg;\(Ai>c/%ZcKue\$7e@J04*sekA"bO_AlHCF7k-iY.9Q)$/4qm_V9Abb,dDOCu:>#%Nd,1\dE<oO-28pmS2X\?geW2,ic8lo)Ri8;IAnFNr%;%j]3:jY8J"E/&39DAqm[6@8GNLCe\>&,AcN/6jF1<Ak807E@,MaoQ2<t;_Mt*$Th_eI?4;saMUMJDaDQ\)ZIt4bl#+AKA-*h=]._$%JBlb?f%&=;d)">8)0hilI*HaoMqdHaiCiJ85r2e&bU6:fFLl&nq"hAF2:J8$glH!?CSlNq2"FDnbg^cIDK`bVqd9.Z>Ok"!q,[#9%i,HJ%i4G.l](1X)YpA[r+MFiK>GRto'bIiWQV"so/qd]mJt^,H.h]8p@9&RnW.Ho\Y_4tTl"7+k_NFsgO;4cL*3nZ93=J2-a(4:^%kT=9a!?m&d_[%]TF[18ninApA9uNkn<QDc)cto0f8ChUVgXpjV[pMC'Msb'q[8<"BL3W6sF#I-1kU:]3S-Yc'$ff&d;cHS0])`fQ%:[KoKaX:pSf^tm%Wg083CBq%.`7HgFg>MFU7(m3e\l@K.`[M?6,dmdaQ;mH$(l!<Nh4j!(+S1+fJZW&>C'>:[?t6Mq%COTUlWZA'%L;;4F;5?14oT1VbG$5)DL;mhPKX$IS.1tWsKM.2OWZ]mo6R7(S85efEKQ%R7m"8`rPAYD@m,'bndsn[pZq6^3glNqP4n<5)R/2nD%'j+HG.^VsW$<.lLmjR.:J_ZJ<,_Z'AS-#'#Vd,@9#tai]5SJiC>alne/(*oicmb*>$qVVa4s\OGg]18&)V%+W65O%I1ugWlaW*8i%JpMJ`dc-OrM234\Wi-Z(THi-Z)8m;'&XKh:EMO(5\pC^bGHgFeb$)t\$*8&'GQLh]Pm5-9Bd=4hZ[IcV65j\0":Nnk8O@\/GYiOh%]P8:1Loj>JL>%4426*]PRj!<)T4K1=6:Pig@)e1)^RMI"?C-n4O5;k'I,H(;:?d[.gCq[('X]9TmB9S\A`j<cb,U]41<l&XK#8W'%eieRe?#4n>GRpo(C^+DTdN_(%GjN^coV4)u4V``RWtU_j9Tk/6Xt^(?:_-+;n$/F6P[`,OTI(^\8O0ispHJ^O'ai^F2X*dOL?^?m%Mn3h3jm`*toqFt$42mk'k]GF';'W##=Xm(QMo75gWXn#FXl,j;j07BVcoq"JA25(!=ud(MVEgu;3[B/"PS*[tK+UuM,IsSP;^n9"%^n#8o3_<Jd+UO.kA>KFgQ/2Ru/EmB]8Dpq(/Epe)f>Qph7DKWi)?OtH$2gft)'*7?B]KReD+3W.`@BB`,M*-5#?Y7ADLk^,\IA<g%@s]R#W`Q@GHH!%^_b'p%.L3>0'gmpT+$L%IDul]UGXo#@'@3!Okh(u-[K)_LDRflp[W^M5mVND8#$)qO,e#$)V1TNql"CK/9G=.?%^d>oS)`pn#/*qge+E>M-CnFVPX$[eVC%2,C*/B1rFd/!J(m\g@bZj^CarJ0sjtC2[AApD1Yfg'/&m-61k@0s&a!fgZ1(W/8bGcuN%`o1<B-FMH(]97DFTXVm9#*+J\%(r+k#2D?McU='eY8mW]/VYi5-SUht8qq1#=IIq.C8$OfMKaEK0k`%KUQkF*(o/Ypr;oUuqqOt*%K"1Cj3sBjaSs1df'=]2"$)QHI?5S9ZP1&b`h)3^f(G<n+l>7;54W.>E>Tq>tiXQRb]#a]c3R"G\/r:TndfnAagCt5R="ph9><Dsh%`(Q1U%iZ^qh#p$ub2gEb<E[-l;n:p#,RK?hm>>"0,b_B3m"E=[N`(oH'FmhOB]'1J9Z4Fdm#/=ioa_n0Sm90\gSubJ%1\>_MX4eX%f2f#o_YW:h.a:s%lZ_:$05/aJ)c/n"!,SSXMAj8Ro.g?mltqe@']oCj6"cBQ%@uM?Q1`rE>i8qL#R2D(`Bi[N[Whda$MJ'Y[c@>J%f/AKt$B[Ni/sJcf!^QnSFU(VM)T;[b-1b/n':P6jBuV4VHt4JH2!@YthLZSn5aDqHahWlJbWH?9>f;^/isI/N,nR!fin6#)@TiBH%g8PO#*o@G,@'iJ.`$@^15W06/8@biM/1ef7!n+Ip<c78%7@nC!:>C('>XZ8M4+OdG8QUuh/BNI%58[1pE(!\8,T6"j?EuS$$"a]f%@m*q'N]0F8Ao7D;^9>K]1=W<n$Rrm].*a;[\`]7-S69Qfa:Pen%KRF`NWgq[N.d/C<DGp"\g+''?$<JCWUAAlSL-XDXBc/K?;aof%h'FrNI6@lR1^]Fa79_VKM6dshg"7*!=3_5X,ZAGe45C>Y6UCGN`'!1&fo!Hn5bc>\ZZ(FYZJ#A;JdI[k#;SD12:f(0>bQ#FRj^*/%SLrW`A1#f@JP)rrkQ?]uo\/^?YuD^cR[!R9?C9ph!.Z6O\%=u'91a;e*GR_eKIKLJPVW!\gb]+;I@@#u(S3<=(Zr>q^:+c=T%-@h%_T9g"B@+AfLLJ'h,fe)uVG:Q4-W[)8UN><8ZL<&IdoH-\6jmE!+d]5!c&8Ir6*_E^*']Nh;?@fTF&;S]N#eJ]En\sd2?@@%+8d9S%]Lj%'U]b9ofC,t)!Ml7'd5Yo`SD)suDL4pA]`e]Kgi[";NV#Q<F+rU#b>;3M6D2g9*cH6*\7riZF3Ef=0e3@\cJlPEb5n7gC`IHP%T785)Z>rBX+''X&8.7m:`+d$SV%$W,I+E19eMK:*^B`-*<8D%LGBLik0jP8:,MPac.]["t-_^!tY4N-rcsU>85rE]1D.[K8:rd!g%&=O5>!'t<Q'kaB7l\XF\23l*CO1;nkMD%kS$0EknkO*cYkA81oiMR4"dDthO"NG#*2@LIo?eS\T1,5/tKYcrKl>4ht&TqU.[L&)$%h)d?,Bd>i,<8p=\AX@4+rgNgNp>3/:P2j[tr<;j9nr(_jYphASGAip6&4MGZhf(ALl6f`@N<TG,M&)Bq'T*V%f0;L_?B6D;A5j.6%-5`LTX3qT<LTf=U^%WKae"i4YKEAhbS./#N7Qlh\8oOr^#K:?r`Yb-IV:l"-+4pln6$T6(:BPMic99C4`9<kg5q<Lh"O6<O/u)T%%:.5H_oJG0omXhB*1K/o[I%hMfHc:*7>dB`/^iOiQ!M8#n&Yp,=+8@6(gGh`%3D<:>ON8BG\.GKN=p'2t80Zd0Ob!h9kS[R(nr^$s%%4?.ZZ2_&XWOd$/A-rrAq@@H0/p&;"+UY?s$$oD-%Z)kBOFWc5'#?3TcoEi]TjJ,LF-D4!`Z)loIb(p#_[,fAWki^PoRu3Igjjo,%Cjr`%TmlB4%MMGpKKO=C0QJQoL+4@.9oPGf1#1F@?"6k:4%93>BcY;b;./q]'UXW=#UP!j:r&`g[Xs]?R,ZLQc,*@(__NbDEh^E?%:'HHJ*M'm;gQ#G\)B9#1/S__C(=GWKLGm#>!CMaq$K/]&[TQ^)*G+6D8o>cjUSP=_i/FWBPYAGMM#lorPs_+^!Fm2p58GLm1W$;?%*R,<1#p=H81IDhsAjYQrgDkds6Fk,a<Qmc;f0Q!1Jk,lh*7mERdF'"r)h[?"H(M<n[$3'Tp-h;tQRK/q5FbD`^!.6Zf9a>P(n_Jh%4eAq3BQQpq=;ILW]SV+OGR!"E(&c!u0?js)%_I9K2[gp5`e`3d&-;O7QX*.t?.]n1=o^'V7FsYu)mFAb>qppOdr4E_-A%1K7bQs&%MKK@dNE8IMmV59XdlHlLC0pNY@aZN!CEBX:%0+p,'fQirKrHMcG18sGHAR#j2'ZY3OZXPNeIp%j&5te)]%'sQh$j'!"U*RV_@0P(%=Eg:aaqqr7&cIsI+3b*WA^cej"\NJJd@]guHg$t'VMu"/kaoee-5q_Q32BQ*M''[c=%LCWBFT\2"`BM6!?,=ZBS8DOH#@B$bkHiI%:K4&qB_3Kafoocn6G],fbISJ<KS"h)Z!qT2g@-YeE&T2t@JAbV^splS2@WaN1+'TjF;EjB^)`I%c"d*]4IJ6VqGlpL$%+FUABquS%bj>V%B\09(BJj0PJ9`U()hV[pdY`kq$HE(@LT[4A-"&aMTb+OI"!TEO&Se:I&XBpS0]FqR@0ehfY_k>K>-h93eC&m2H:IG*ocC1U%(:Z-Y9*8lj3:J=>(p"H[%D,!U?rdt6%j5F2i%?6hngLHVMJ%db(Lfg-N@lFm%6#E`608:.e.:>uHBfqZMpi@@79EJ)(EbM&M1P@l%`O`;lqk1KB!J^u5X;JRRRffB;$.tuJH&P'_-1+>mBVkib8#n?c&9,gV#.AQQ95K,_)NfTL$2C(oE&'D-LtD`SQ]aVoTdS<R6>Te`%^9#N/n0Ahp8A:0E!_3f):?BN+bqQ9A?-8VDg;EO`8XFfN_%A7ZCor9A,c,H31"MQ87OJ4TCi>!*&n$`gVhbtgJUg`;jc)G9,dS(M%][FnHTH#DjC=V6MA8mhN<fXt:99B<o:N.<;5iZ9(MShItNtYP!Yu>J[eJJp:*ZP9f:8WQo,@m(t,X@@=!(`>4)">/KL'<AB;4EP7%Oh0l\p*h7N32]qZ?Im%Gp_N34N(.hlP;ZHq&lC&P+2I@O!PmF-P^5i6b:'D56f8t"0UrVBb(&E75`NTUl81pDVa&1BE\M[I3F%af%YZO4;*uG9XZA1LrLRLP5+?*U>Sm=qj5ZjRDM,M2j&,$nd^Mp)?Ap_\M=eR#$?L+@5nDLt*A%G?&,E=mK!5u1`W+"Zg6%fM4(HP1q%(SFj@HN\*+;k=Q1A2]TSDMq=ja<kEk(g[=:$DDONb0^G%!d8P3@!Ao=@8Vj-;lGf+p;'@_($!:r!Y-(pQ8QY51MerVARV2M&&Z<c%2eM\2Qjq\tF9#pL\\Jj&"#q1H)cfKmpYL#unJ^a41;!\pnVTrV_a+O-CQVMjiu7057[+?D\.n/%p3J(s_[SusEY'64/o.&C>t-)Z%(t9iiU2OJL7<lX^k*.&9KMK(8-cXO7;JP)s)YlU$W>%XRZ`$.n7P,64"1E"bdu#!_7O0`;'T.]0^go@%09;690YJ]b!e:H_GXn!]%AqnP7>ESuDpEG5-iAAHYa<)](QE@G8.AYjtdp-VF+B3,t62:rMr0&'6gNEu0q8(5Y&Ic1/k^)Ef_?eGt@=I:tc<S2Q-'&\%"`R2R%k\qek\)O&o<#b1j6BjWjoGrr_L;5.an;'uhGS.u8f+^Ra<XgZ03n#KgRY1I9Z34995JuB8;7m\g&5Ft>UQ/*HqjAAI'Nr6r5bV!+%ZINJ]UCp[2.@&jeR2W@+Fu&<_U`bJOQ?`OP,9.'c52/`C8+hJnON!oD8eCY:8rVgD:@E:%Zo<b!YQV,I<f(U!H(Q\!22"3q:(kGm%'c\s]PqXj:b8lH1J;jWU#=3uH@*aMa`%kp!B1p$/.6U[o#Z,k1OSgI^OOlj8-,:*%rAs60@^:$hZVcAVks%V0?EfYBcf,Xnrur#f%U^1NCoS%K5.KUXqmK/3B%<P?C"+rcg20GH<E8][1fuU5,W37ID6jc&P-B5!<nN$\%G"1_5n_mM3LSV)t74Lpc_sE0R#ujqb1+<?l%XB<'ZA5tUoT!gO/YK7PYD0$]lZ><:/_[Oc>Ai,6WGm"a:(0*7KN@Z$G3&9$hn^K@b>fX>o7r)GM<,`j0Cm7i8"m5mUX&r@\WeRb=%N`"],SLQ`J/NR$])%cra5r,0"2VL"@4@:j/8/a:p"\+-#S\Y%(5GuO6M=F\Z'L.2u*f7GTSI@XQ88ZBsb<'./GrX,B&C$3KUHBEN%6W+e5i!O/]&p;C:p?+kk<d'\RC!N)YOpXO]8i$][DE)5FFCGpD>Y6/AWn&Z#(gkDH^/N1"=C3=e,9.51oH.hE0i-IW]GSoJ_-H<E%.pN<p*KOT6iZSoTB"q8PbKj%=8/]uQ-OG36aA")-F]1,EUJoi(/qaKA6:nsQNZi2^djUqcec6(<>2ZX(o=<Ih4=[3NH\;;BcR=5e%&[6;RPE]^up/A[5-&0`4g5Enf3?\ER\3k)B0]*1O'3LN1f1"4^8'A50`!EA=V,!7O;n;^l&gfHQ3"U]U5l?Gu,NDh1.]<Ou<EOgR%8MZ#5%Q9%X!n'@@f0()cH7j%F3pYiQ2M-]V5Qq5cgEJAZ?79TjKY[9U=^^r`PgV"?h+<!dk[U%n^f85g&]Cn5<%s'Kk^[uI(ZfY(%@qZ2B+NGMMBWqe*nEj'=8VN<2!%'a]qRbb*UZHJ(`-5CAI38W?ddooS<LCUXcp^Dq<*pIGPLr3D)gR\Q&d0V>CR+Es^kH/FP@K.e%(I8_XJFiki5p9b.JF\iY<EsQ$cE.Y5nU-\Wn49,H6c&:-Jt+rc0nBmg@aQR&'?!?c_Ni8oTODG_99cXs:]EP)9ZTjb!^DiJLQ9](%U;R:)5f&J^o0@61Tc;N/'[%f%\h6UbOWE^QKk<<CnSu-0*X_[Fd5]q:A2kbLLb1o=./XkA!d`7-==b"=`Orcg%s?PJ#sLs%*$RXj%j?UhKH^e/)G6/EXg*e:23[MeX4V=_i&pFX,."JbgBDq80eVcqVF?qkjalJ4jR^>JP&;V(jITS<6E<Tkjb0eCjhDcPM5T2b]1S$dg%%@>-+:)R,&QGVr_G`T!km+0*!Ym!\B9dbOBEbCL;#feAt2^mcB`i.gM,$Q!X[Yu3M&Y;@G.n;$306JCO8s/<>arPFjO:KQ,FY,p7%;*r9"HkQ$aIo]qdfuJ3_A!b#C,l_;;";64dSKA!"o8q=X$8X//>fV\*/;&70#u3c\Gm<AU-E#X;l3s%H.9Z7/dfVoC#B=-V2=Xq3%;RJcK.!@=?+GE'K%U.-:qLDITOGj=[dfp?Dc#t7M1dH%9[GqEGGCrBLr^5RNBt"=#e,XkDNA`[Hbp=Va7>^B(404isFX&ULEg%A+%^]iIlVkh`h+WLW7MeOoV_<IY]^-on!!B/(CII\3e>e&^'BjR`%FpTRZTZ620Zr00M-mLu6`@<Pp"^!j2Ti/2s7=8(o4ZK5WSNK[,%KL-sVBhBacFp>AI2JqA,dRo$'CgW?NE6Q`m7dM85<JEWo#l1JD<BrVk9X(]"!55=7bcjc#R"!VTFc99"TE,Q1@65Ykj>HTae;]K<%p_b%G"2L@U%DrKfLS9CV)ie<3>q:I68minJ:6c;"O/'E&E(63F!66M$c?Rr9;n5aTZ*dn,)hS,n!o#Fu*$&iV/qZG<G51Gi=<p..%o4eAJjZ-G!j(jBT@)OOi]V5\]#)(u+-P.\)/d)$<i4?e3HCBs]M'8rdo_no4L;$((0L_iCTL>E4:i[;L#aE=7ZCLte`aoR?6Dcnb%gV>5S,!dfp78sH1dWu5!,Xd]3Q]Og;67USC#.J]4mj..%8e<oDZ6]A>:+:`e5Y7e=<(_%]GYkOq!3W/&!%a/,D`*UZ118Z?>(mRq%_o#0E-'6h+#1$%o%\i";8-ge==[Q*8"Gu`hKVJGP@tFTo>T1,sG@E#DAB-dn3\/;i!Mb\H^_e4e5LckLCPH(r=KojK+N>jo'*J.Z%edmXfEhCf'>V$3&*>So>8m"6u:"q'2=GOPQ4;2aP#:g)W(Iq%Oe$0^fd4@dXTJ)UV)ML]%_DH$FJ&j_[@N,Y06S=-qMHs_m6V\>V%!N7F%\ibXtHOV8InA#nf"'e#<LaFZKP7WF5M3[-p8h$nbj6so9hMW]d99janJ1P-eSS8b[GCjNMmV6IS+OS6"?&51dDpoD:Es\G2%PU1XIHlgr?`+fgR`+EL(9gMIt?>(2,PI*3oI\a!]:@a+ZX!$^kp0*joc4#M:i&Fa3N.I.CZ\:bPj(#9BjaFSu^!QuMHAWU%@B&M.%'ZJd;jIq=%c[80+(U7Hojd)%,i$;dU.T.-G+K?]hmWGSpI&?`G#EdBG"Y)JTN\64W$$Qoagi.LH7LJ*T(@i?_UKPn1,d_3+$';]U%imk7OGS_?EJKhK-o8obZToX^NESI*7=;->X6AtP3(8aJLI].i-h7[3;mYsF$C/C"S>TuXD^e>!UJ9]30O&!YQkZ!ieK.JDrqI;Q\%9+O:Ea<#tofR'g-`#<C.'^24Vd"FlM_9&K$C7O;-Bk%f_TZ]2LV<&s43Jq_F3m7=;74Psd:@'Zf2-CPhGLEJ7hF/fSN#*qK_>rS[%Z]`SXCfE0MC+]tGN6#>SR3CmfV*LM8Xs[u?1hEY?K9MKDs&HI<PX7R%-DuH<*fW`DN_UG;Kh@HF)bD;fknuttR9On`Z<m<R^rN!B%1+!![;IYoeOa<$9l'7;=Q"oA@g.deB/kXM`6!]^/rQdA6#ItLQQ!)U6aS6&S9jI*c*0mXc/DDFT;U"j=bR(!D:lr%4:gmt9Tf4QJ%1cB&8ac4=c)KO!BC9G_4e_F&["/)G83m:2t9lX2`+$_Q:*6-YA-&`HrjIM%>Ir^JP<?8"!DC@.RAIq<EjPAV\GU%7=Z53R9iFtdn%BF$),(WgWa,ds3eFA6HSV'6EMYgETK1-&aaC/?%EDOQTKCD7H'p]I3$7YZp*,6;=#ZS\+48UaNMJm,%nZ9)%f'.%1u+j$d_OA_AU%.h6HC_FX@?"C'&mXD:2]X+ZNa.uYs=B[&h<=ji('"d?m88eapMGZal__"0QlbMQ)6=DZ*-UN5mUlr6Zsip%+Uh$RP3f+!]fRK&pL%6hD;:Y"5KO/(=sVe:nWr1gPWDj;YE:9+/:@'[BWQ.;ds6^b^\E1Tpfs6fV"!<qGXZMHdot*%?hW72)HZS\QD;o,E2hH'9hC$rOmS%F.bANM'2\"C.&>)N"X<uY:NW\P5C:$,RXW3j390d6q.Rl6F2Ap9B8_G<tX"gX(b&5'1&Wb(M=ZP6kHYNmRU/u,R^=mP8`f<9L;/l%%OfDX,oti5C4RT<!V_01QW>nV(4_PTf4\.ZH,?R,.uodC9NG)tWo4kLUP&?KCLdW#V7N;F_LTojJ1[#hWQ<Rs$1KU4%,*hbeq*-)%oFjR;SQ(7W5!$cj8iM#=H9iuIf\+$8*K*6E-`eD\jS0D-44G3p1*T_"9L9"[cNgm#.dg0.QEN[V=Ka=m278:;7\j7=g!d=$g(<7H%E:BQc>GFbb<[d`>a=r&3p6J2$<dUkZ]4N'I$u'l/_%(]19gKdigOOBn1r=^;_17=dL]RuZ,`[CDcWj:"BcsOo(r+u7j+9%K$mS5^%7Od%/l!R,*&^[#r)N<F],?)@W*(p>>8<6?C!V/*YG9A`DR3%*BkBM(]H&&?:9fTNdEt+Qp>G:_pV-b7%YX.lJ8!`>fcmA*i<Z'8A%]Re&(`KQDKS0n><'tN7Qb*_!)P&N+t''kdN/0M%6apP"&.9XW_NE8-ITJUMkr$5_%@Qlp[!T]rd:AD5a/WCD9KNR3ZB&*Ic6/A"]%>DXis3-YIp`-Ok<k:E?iW4m,"DWD^s4S3fk!X'9V)n]6R%e^!Vn9e2s[!]D?BUVu"4?q>@02D>M\1^8'*A*T\<EH)hd<QnuPIV#q%%8mTX?At-LG)-tWQB\g?)pJJ\a->'n][Ni!%NkAM?:X!V7cA;I>(jC>Ps/+R)^_-F)Zt59PqD]0)Doe)%=h;]O11OK\3d3-S=!7&%D#7O]NlnL;d6fiB/NO#uo@ng4Mf%])fH$f10$r=Z_K<n--5`St6-)Q"2!PU8RF+ftG*IpC6uEuQ%*7G+#E?#9eJH"Ib[sG>mo6CE%1A`LkhR;$MJI2_9he>>+=V,X%,KNuiI7Dj7`*(\mA#P<L9;)_+L6%LNoLn.H,?:BMD[a_I;XX!1Z=u5AGtTMCqB$%TYk7pgD(AID%+m@klkQhJqYa$AC__uX/E`0b!d*=jJVq;8VP@X%glX^pY5ER_)4LC5EX%5u9943B16]VCc)M<,s\2Q;D;LIkBfkg#Dn,\_0KDl_:%mR2q3-bW9eL"??GPqVUE+]"nt?_)pQnsG-5hD%bj0mp>2Aa1ha4c>DAp:QF`7&2Z$j,$eXp2E3Rn?U%6Z]r+/aJg[8UdYRr[l*lF%,ufF`HrjfR@B%(i_&pJD5`-1Z("R.9/kR\5["X'&ak"/pk2@;\CfO'RBfVJf:LcY%(9u1L3/1C?<mDAs-:r@EUKB&JS'L]uqjfF_%H_ltcd>Te&E>9m(cZIOVa--c:`ulAt8JhM,$r>0G:7Rs3EH<("d/+85'M(SY'0QQa]Za+,8.^d-B/r3?$]l#=XKl)X(gSe^!$*.`%)28"mH"Y\cX\C1[g,p&lHlLs23sdetU6r-6jF&rIe)ushd1[ME49a\sE2Hi"_hm;S7U,p(Vh!n\]uiGg6!0SO@T_#FlNs(D=;E<A%i1#6$p3WRSTBK[E0=;)s+JOhU`Gci=G"+_VKOh/>35Z_Vb-,;Z`e,GN%gAD1#>mH'8B>jZdNgcR).-sneVng1qCV&4DM"g>lNY1"%jVu1D5)>jQ]gTa/6Of'i,RtF!;He`hO)^la/=aT8QZ/sR'82e(NqAY6\n*N7aAR@4Th*24O,TbI$jU``8P5uOlO'h%<\f.WFqTGq%jK0+25a3gOa72XIdLe?g:P<.O/aaJaN%gtKL4fa8NcE\iNIiNBX$+:t18?CZf\EH<%dsOg6Vp,(OBr@jg13Z^G`fUjc9j^M3c@]X%oeJfZOiV.^X_:ak\kUZ`K+d^);p*cN`d`#4jhV\J[2P9`Ut)./L.fDBm$n]ki<W+TH[$(tdl,bqEIQQ9dM9-eK18N\NPHq-@58a:%7I1Gc0p:E0%9b!/+pk)<O:22qI:2Fc5R"KHQj#7G4ahkA&cPqB&IB1D<`o$>(!W#>H@[3DL<Pu\l81Mfi&&UsYnP&=8:aS_;1brM%bD;N\Oq\jn/N7TYoV%@dDm9u;#P(KKIZra^I!1VpOksPVdK6K^RP-WQK(U5B:X2;PHc%C-5Oc>lc3ud!.HlHdXc4?4-X^H%/:^%*%pbsG)@Bp`cqi?l,S\cn:%@p4QlmJYAe.J`2kXdOeR,Z<lmni!J74'H8&mN\l0\21CCJj,4(jt_A+%gc*+>F]!kW0(!@#4AVYXO<[%2mCc:Pd*KT)gW@Ib"B/gekg+$Io2T0j>5=F_aYm9NdrCp32-Pc-mQkB%hX]3i(fdJ"(20kDhAe-,P$p@+I?t:k)t>9f`fJViKf?6%8a++/^10Wb([Mn`,U#>3S[#`PST*$a8Y$=p>%$ib;LX^;]fD#h'^;!bCF!efZ)brk`#B[t!M1`Bf02okY.qalROBH,;N`<q\:=_k%,ne'72.feT`*eH8Dbc@Z">t?8o>h2`%S'4U^csp>^>^gLg1?Z^-O2HTciG2&R\<ECUElXK%.TG3GpTD#k,Tb7AEC&gH<,,eT(]I!%P/j#m;\fT]/<1S%P%1%OH')nH^i:Wn6-83?/Wpr;7qraC-%:6g;Zg'<C2K]`A1&6GP+Bk501fL7'r[N0;.T."d't4S"==iBmGY?_%TSasO'nQf3B`LZ6(#n4NaF\9_n;VHD-8>Xf7sW`UUotaVSWK"uFk8Y4p0o()M/jQo0Z'uGru]0-0h^FgeVdSY*(EI('NoreMEi]s%WcP4q(!jrM6c*7n@S]@8$W"?rbU$0bOWtUa0<fYd0_$Be9"NgB,]\h*L1qV:Hkr)46/'2"!Z"<>:WE961DmTgM/_;[[?&J*04.:8%SsCA)f"cZr;D0#(igWS,?oMe<#gI"a=itb*q-lV7:-'g2N$d3sHO2IO`i,,s1.:)'7%Pt',d,n_kNQA(+]+r4H/RmMMfQ=8rZ-/=%g)j:W_VU5e$3Jd0;n$m9Ogh7k/AON1,)cM.1e+3A&m3j9;$mu07*W)+CeAQ4bW@g4@@]e)G1['FUOPRc@`=]Cd"gdsG0P4KZ\6St%KZUVal4I2b6G"D\&-\*TSPWoJ,2#@m1=B_6=eI8N+HjrWUV9d!0?LlH&mWHlMY&1]:9,RXr$_%qGS(uAm0ATF5XVXeqEmdLSW`Z[%`h!Bi?k>7L2dOT\4&t(OC&K-b58B,M^]F#>UoktRcj;;#E!0?1\crd(UD\IOSKYoR.fi^fpgKQD+PTSOW$]$&KSU_tH??qXDinf=%1]OC0h=QB)NR<+XO(;lKY*r<SE):*`ZL*<qUb'3]'/Th%2T@MXgFtt`+;*?o/0U<)W`8Y!+]p*HT'8$^8^\Ju?l,4]s%m*VM)Q,t%Ob><GQ:4B=2hA>m:/JpbQtZit,Oj5?JkL,0gE>c`,\IoL0r]sFJ5i=KdFj&S%$V;bV*5ipLp?*L?rDlo;:uOT<R`Gu@UZ[$l6m3N%Rn*u4:VUSL;("kuVC`uRi>>u=$#2r#;%-\A^&qB&;$SAsJOG2gX@Yp)5t>k!pa;`Vj.[qi%Q/r=Rf8UJ"`&[A#b`]?WhAnF,ZdM.%3^G>@O#;lR?jWAmoX?mc^6h%>TGPq<;[ei38fDkm6j0p:@O(5uW[R@/gRgNq`'k=%&.WKHptGtKT\2XrP98fS0`egOi2C,K#/mf7%`?BKZJS\XS`SZMM]N8.%nDP]S<b&#!WSOYm/lohZ8[H`:d(TWc+=tS9Sl^gGFLY0b!D!BdK27rqM5>=uPOP&cS^42SjAaj'F`;V*%_Q*I>Fsm-?XRlB0:u]QbheKFqOn[Oh>E`"JkTbY6#m$5T\'EJkEEJ@^mUm"66Fk4P_4VPeioMo>e)MHP\>o$+_+BiCAG,JGME:hY%0dM90QrKo)['eCeKfd'XE9XS8j5cE!&I#?h3Qk:L5>XZHL,U;7'S$0B!$pbf3[UtRJ9"RUG>X&[YfI,T,=7M@**uV18TML+NMpNa%3m@?dE$pg6acma%E8+2j^?Ct<,81dm%t4A/@q(9,A^G1:8c1#?f,:9EX;K^!]Z.Pl6jGj1p.!`%62V#s),$q')A(eAH&\.";XWV6%5VrIp\s?T<Y^C0/8&6CjV@!-gRVBj,Q.1ghg7&.2L]XA[%/QdcNtmo6JENU^&e7:o<>l.6`bYUUB/(!S7q+/T0*/@j8sQEN("lnT%.kqukn;(jGne<`'JM5=.e8V8UWX+B^BO;rgW:)1!"L^QE_$3BAk-ft'SjJY)JC<<&KKKQn9l45\MWH/TSmFULaCOXgJMU=@jt""-%,B"3$!g7CtmL6&,;-uQPk9:`)T_q_";5<RoFBuu"+A$=@Nb8u:8NEdq>G2]]S!;`NQ-b:uPUr:#3\j/A\q*sh`a3(:7">idP=/k0%MqSrRP8[`;AS;Q;$tl]D3\q23_03\c;>QD#7V]#^#n%\)*>,8NFfJ3.<E_LiC_:/r:c3JW0oT/n^*pGqUP<rSob&m/l8o>VJ\\bB%D"01_U/G*b9X>:r<7/MIF^,f=D'VT)c9t0_$EI$X7KU!.p>L6]=0rBSKI;[5SpFQtJPrlS"IO7h3qU;T/)(n3EeAHpS^R"[P1>->%/%_,PRtuH`U)bYaX'6]5/rHl8I!c^g3sN<*"-b2IA1"_50PXKH.p@0#aAD]Ddts+el2UNJ@mu*<6&DePBk.7!57>mP/.iVY-jMaj%%c'TF!bbj$aJ^7-(,XV!1"='r?Ub4(R+Y$>YEe<5\7b,n)V#pbg"S?dGc&ZD,FD>KN_lJ^%<PA9F=EGFekp0s"iV>u^FgMCM&LE7%,tWE$\l5A&au67s_dmAF?ope4g8P`5-RH,2"$e;,E-9!/U!OD&BcI#d&V8C;Xifiq5R^RM,Z`I:VUd(WG7K!\eRh[Akb&;?;2!;Z%DLQ`@*pRa*r,3u0:CZn'Z,?h]S7Hphr?MZ#$E?D40R]_#";rF4r8a@PY'7j!+(YmT!`;8!.1,gSSFUEj8XqtcPiKQK72BrO`+,p,%;+VBBGjZ`d5X!C@=h6aO06k55?]<bcW^euiiqRJ%P*OosfRe#S-]X<uW\_H?)^/m-'N:0c6s;Z%kljiBjC\Y'Q($1$.%-p%ol6@V%c1lenL%/&Nns#lEUH/bD/t*6#jIS]/1<k%XEpk2;<+\`(ZBkjZNq/6.iCH:<BSI*r@ud5raYW4DObH!BjDZ\0%.t>Z7V9eTTl1\R%f?VQ1L'8/_;k2#UN/]T%!epa)7*$/n*%=mcln1kc=]?V4mL1RD$#Ml3LguklX%-17*$Rf6<V;%rSIcud#%nO+QWJ@)2qnuQOf]kk%(5i`h$AiD<UHI-.s"ek)/,<mgM<U-?Vga4D^l.KhVPu.P\X5CWI],GPM<kfe#o/-"KIi,02INgIEGPi]=papG%?B53'g_7)4Y6t?%T)))Re;?E"\dU^FNo$K>.\\Fmag%$A.u#eSWAW,!FH,-!+@dg<k$7dT!QgTdGN)p)=hgkF06nmdTFe0!'nukdkX@X%7R*E%9g]HD%TCY>eT;2iC&O%"g*u[j09bMtO%L0JkWU(>pV4qW=:^)B33%\2:0U[UC#*h>]K<_]nabiLD6!(m6OF+Vc_ZF%6;9mEkjHsC)"/Qq_%/9B@=_N>GM"4H!.\Vr;Ua=n=I69q-57a@2JLI*9YrIVWlj9^t-.S8kI_7@I=_\)/PlQ;/;2G;PY:iqk>:aN1E,3R(>Ai,Uk[=Bat%\Wb)WBOhj42M54rACD1MWEm>H61R7Xd9,BrcCTnt]MV:[87bGp)'QP$J-&WPQkP;^#:bo2NJ7ST,/MHc]8i`/1<Poq^5aKpIfVbj%URGH]>RE(8Y!Fks-)G`lA8`7KH-@mCIBfUiA!;r^X-?c4(Woa?\JXE*jqPU1D1\GA#H&/DPl-c&\:ha3.SkA8pe'38-4Y#tba*sD%&cm1*k7PeDLd6*iNM2h-:5Ya&Hk$XA=P-KfroG;$XRdQdK84c/F:s<qG#OtLaa6aocR'5jnFTg]Oh`f^r#j0G)h[9;.[t_7K_ajX%fpAd13;)t:%JWm0dddeQ+tM&Eicu6S`6*9d4iZB9<kML7)5SP<`2EfEBA/U@[?,CrPV@oXSA6?u^e*,pq`WS?8s)Up&ba1):$!9N%fs*&ad0$_AVPK>jK0qMrUrbcJDas!+@o=%XdOYNl'I4(W^>DU1pr[<P,S'#F12)4)p!::sVVE6cH,^U=k&D`q"ZTGm:kC(RK8$q%%>,X-FOPMN=ZU%uDRX)/`<=j;r$"9)79AJl'M:\5lZcf?h^tkL#>PL(6Q4!Bq+=*+ghJ.Fc7VkY^Zs<I)gRV$U@8a%$q'Y=b^l)W/%]`-^C5ft\:X?7Xnh26YOWrs+L[;*Y7d5*TM%*(&8J/O:`JG5GQU.m>/j9_@go(5nn1quJ,.gUR-SD!!Zouk61;H11RFR=29,e/di%JLta_A_!dM,6!hCWlCQ0e%\_r,3cuS?MpM80A'f<H$3%<>L\N]3=ElieMLqU</9.89$ds927O"j@pSVYqjL\\ijd-;F#c,0Le'JR%3PF?!!5kr&b6YD5'cDA,W1p5YbNN'T;6cAD0B5QJK_5sr?qIt$k5?t>GZeXH'N%)("u/bYUp;8H`49jc^h4E^bEh[s5ojJ-3/CTr%R=0r6g$u.K<+,crCO7ET@rNK^0kZt@3>Rh^+@NjM7GZK;8QmZnc-e,`!")jr_P1+cLR)\.#F"/s/*@Z=ELL-m7D9n6gL5VETeVZ`%(H;b=O?4I"1:[O>(Rk\;956h%.@DClZkkU-9I-"@h;_BSP0J5bC=3FD+XrTg>)4W^fs]Su1n1]tI68fggH/>t;McE(Q=5&jq#V/B%fIPl`9k%!*$2bFV;^[22V3u4uPVj@AC5AH<GSV>57tP,KXsHfP'4)_3+o)O'N1rpm95Y+4!0(TOiT/PRNZ]KYTQ6_g#>4h1Mfr_#%7-oR1N$b'k%AC?XQH-`gKEp?&<ImKN@d.;K6msSIEahlOV/*H6V&.0;+]HSs_GWc(=7b!r@DQ^P.Lrh]PKeu%Z'8_BjR>qP\n,I%%:I/J%BPt?"<\DYGaVfesZAe6a:d:gA*+k!iQJhWkdE*eJ)pfEKFV'@LZ1]s2)m,=ji!$t]*5%)CZ"\J5@Q,TE%Y=`K/G6GZ5.:5'%5XVE*`,XmK6A^A]$-'ob@+#HB*>D!:$c-`n+"ue6fc![2l\Li(.>`q?c$';41<\^#_<_jlLe5B)=_Tr(04CLck98hJ7$F9W=sogh%Wh;2ERtB[ZA"?c9<i#[24%Wcd[DEN":Jd5p+Jj2nJnL#rqfEP2o`?Cj1ko.BZ:%n'r"jAk7Bn8@6<5!M-o+s?-78DKqHXO4'r`<0%d1)p,;=gku9?>SKLfl#1AW2;8]c%2E/ZoZ7bt>2GYG=tK#i^I<$Ali`<ls`$bKD4[T.-epe?V\ecnBp=([D>#AMT,g.g`$d!q2#"%7hQn^kW1M'.8e'/B#mtm0;@Q6FJVDTfABI_<0KnY,e>nNc;3c!8K9T&Atm#2H:CpK1uLh9L2:\[?L/7XjY0/9!0g'mLI.jXdA_u9%'dXIu;)Cb^G@k6O(U,k8jWUAU2/"BZAT+m:o$DI_N7YilP\-(.,6X*L#A-i/>a>t:,)PSmHE>?h6lfnH#`tuY8MboH7P"Q\$O5<d%$<`:%);4&,nQH5Tp<9f,UkDDZ4@"Y`9&o`tLo:F+RL(KS*92jGKeP1'@BdL9+NmN#?p.F6j1mo(-Xc3SG&gPLe(U*jLf+bo5^$ce%Z!e5C#@IoMaQ0WPs&^I`K#[+3U+8c>U[T"ER78UgHr`e1k<L@]C:Xo!BJFpV'B&)q9:Lb"%.^Kj32O_Bn)XWg-;'+L$Hb(>%96dO%9l+[?65W+K#UdJ&KIK\ZN%fmhl:jgl#h6o<E0!:q3rh+s_Ml;U<Ha9KVZI_PX!j2_5S5=A1[=3F-)/V>mBFi'KG5$J,mM@1#,*F]%'BiVE<PN"-[=t<;1t)u$0u5Qan1uRG0FUaoIc>^>8U*/8k*rG=?goX/M'<\^9u]GA16?dYO;fp/[Bo_q3muG#*gp:64q_V=`&Ljl%N0e'c,65t@aiES?OejBR)h+CZ7QZ<45G`45n9%:#;3HSX&asJ?SrI9>"AZi,m@7nYgT1Eb5h6eV%muJZ8[dm]_8G;l#]0'V//h@P%\.*Q\#4-[idg+)-E$#Z$GBE2g*L&s/Bu''sK)nPNQPUu>iM2!kPMsCJl;D<F.9f)ZW/<F3"#lefa(lkp]i4T=J@H6c9_"F2%i:?i%GU7tR\aD2[(8SH2#5EtVE[%iFcr?d@TmR-id&rR''eTb[.>iid1SV@Wn6`(%iS4Luen:EZ!j[gVWj/]^XZMBg6B_^0%Y0^+&2+MV%'G.'1.XS?BMTL^^:c,)+=sBu8'"_higld=<#PgF^Mt[jda!rIQs$3d8GA"LSpAe!"_BsE7]U4mPJpEm7Gt&P13ReL+A78oo:usl2%Z18_3b.uC53J/I:0iu.X264gC9CnC9A%=%ud8%.`e\e^FC.j>-4-E7l3ZVfNGUV:$FK0Up-D#\LICA82ajtCm$@8$I1-"$u/rW6@%k_N7g@M'4TX;9$Q8Obm,)lJj0E#j$`"B^"0WE`=S87iEL6<URU*Z7;ba;We)a:N\biVOrl#4'^;$:_3gL>=Y0@8Iib,g1.*0sX@"%eII<&!$E>^QQic3r30ZW1?L/d!jO2:Fb9g"2q8u8Lk3'%H42aQaMX36O'*B-Au[uEf:rY5EN@J<*-)Y,=%eCCZ0iIC=sDa%FptNK%`/.8ha(PUR15Lt,#4f_CRUb]@6@lq7jquB8%^HsHEi^<D#d-i8a.d1eoR^QuG/]<4l&G6*#%$Jtg_^eH*`&6Y=Ch2@*5ojY=A?o;%Ok,nq,_o]@N0;.VZYE*B6j1/j.ZG%U;WSpFa%/i(Z`r\QO\F(s<Q8bedYZB;N#>a(`2:R9@g:3nC)8e!0`rZOcr_*T0nYusn&n[C%/3@9em:F;AkYW1AX>6*D7!eJLA!F7mER5Oiq?"'47LEWCj+h0P.PO>t+.Pc!?OTFCA9go1`GbrF5$kEFL@\#h%TX5ZUSsA?[jS"]%neDX%9j8$0F]`^2Bedh?lFMt?`<m78i3-q5@`J$Acm)sR"*YeOmj9Sti;^31Ub#PBbXr6t<YiU5,(fc_Z5C1S?M7].CfE/f(6_Xc%#%]O?N*=4q1<c+:6-BpU0a":COSKF=Ohr.AZ>#4+-"CpL.4)=0W/L1C85&6u`=.Q2H28P\MkNsH>FW9mJIUhE+6:C;,#JGPGqn?m%KM;+1@YUuGa\Cm9:b%>U9jZ$dg"s\-k_g;cJ5bfMUb?<[6c/<Jl\g>%LT(Tn^)6'Y&2Q,)(B]#GVg_[1(B`i^#S/hA0gd63Wh,4B%`P>S$b%E1W`WC=RWf,h"`Z.e(`PD48hTT;4b^aD`DT&fmQsg1K:VSA4Ak5)rTX;h!)&tmQ#s"+a1DJb'@?;9]NUEL,(ILbp]s1mL%%,&Im#&id9UkYTNgdk_p:uMka8Q-EM0c3p.R^s=l*h\]N;&=kc'(M@&\<rsP/*.1>?4;9Uns,9t`P<69*MDt4Ub5:`%e='S*CE<[%6se)6NuK@]9jZ%'o!=a`]U3,pV)*b:QuSRTdE@HA`67+f,VNc/`KS1^01MS9oi#ufjN!)UGq4S-S71Nm\eo/Q.&/V"(F'@jV#jV%%N%BAK:Gd2K.C!J70.*LuZW1=JGZ9kCP?5a>;q(:jCuaGknmXuZS!]Rjjf%+ADiDCE>_GjdT-ro5Cg;?qY:aGN@A'9RWf*QD&dRr/%>msY((opYB%#Gse[&iP%Q97gEDoV'OLr'm7\Z(L<r'B*s9jPsU)2`m;/d@=Z;mIFn`B`.taPNdH-Bs-o9jN^BK;)AC\Og3/&u`%6%M]!k5KK,551X7GRf&XeH@S0]+Gqm44%be'1Gqj8!#u>u5(F'5%8XRNg@\<l9)WrG#-7-1)abpUPNoe5F73K0\9jS6%?fHHJnmY^!%Kr&oC08A"Y6kYs$(`#(<In\qBYWG_BX-XVY,a_8:O;B\uNXU1_04kJX-pJ2%`3<;sX(X%;L-g_aCAMDPN1QB508>IB'S[9L0l1@:%,2)V-N408m<.-L]<?,g!raI:B'>pIr`XZOB;UZF<A1d5n<*p%a4S?./I5,QU1;Ls,@KqDKe<"GA@PDC66NimmR"6jVoZgcM$m()_%#'DYrZjY/6&f8HjR/ofP>7BYA<bFKs_,?C(O,:00a9nb0=:E=]7U$,/@PH5>Z;Xm\N\M=T<AEk4h@,i^0f3=COe`fqacNdT.uGK%%PJTFV:^k>cF*#BJ@dm8L=1QG0R1>b_J-Eu6@OPf4GqUP"&jps,-7<E:2MoFo@OQ@]'/_d)"6<d1W^TYk"X<n-Q4lVUd)jqi`*c>:%Dm>.Ud8EgNP?prl`-_i?lG^\.o4L!:Z"lku4)p2Qb5/tHL%a.e9+86\<Sr,a0\D:-7luq\NTVAKF()W_7ih\nnWEsC#,Nu`OkIi$%752@sQ$/8+.$.%$4R,QVTnYFRE[Su=r9+;8E'kACIH,aaj47ah8RNZDC3h0\ZEP3mk#=pr;D^_H6"mnR\rV[c@jNkXs,;'</0-df%$pnE6ElHH\&JB_i=LdfV+Yb6-M0)K+&qeFH*$]Ys6=M5:,tWjVLnR'_/k.m2VPmU&Y9_,@>VkT"RAM`%d1J`gW?]nCM(q=M`5Z[q%Uo$fu*@lt$)(YtV.#A6PY=al_Y9M9Co]_D1'#a;pLU@GF)*XC'H7C1PkV,Y.*AKq=%NUAJ8O;s8&HcM`0jI4I]%7OH`@lPV9h3Eh%T\dYeNYniR&)QtC%E=Ln_RZY+R%^!6%PhKM%Ubn$11FWiXZbU>11I*aYP0e]L)Krh$o29=F;dD(Q4ZJ5;2JUK$mkQsm3!X.&kV.+%bD<tq+QGmD,DHiU'2]W%6Sb3q-Xlq#-("ES,A-/-13P,l#2;e!(b-bb&gPh%.O.F>;KVFs7a++d.lHT`Zj&C,Jt8ir!Q:Wi]N5^*%&r8*5?:>:"!E3MU11H!F`$GjJ@Kq,H7en^ZIYncAIaUCgeT<9deZ4M"6o\59MO5P=BX1PO0treh.8<6i<XW&dRYmIU5H1'.LuBj1%"Jgm1$$.OY5pHsrP_qS='+lI+(5?!G,0#d@:BJ4cR-?JoRtqmkjNLZj7DsFaG?petLr"ZXXL<tA@9Y44!bWu,AuM)fVA`nloHjtZ%@`D:OBi#?sUu4(<WZYop<#kk0+GS%.gnd;&$m-p-j^SHKQ?)e<$=YQ[5]fp9@nH3)WZVLM3*R,:-M1g;?r&8?Ob+EBl,N*:`/IW:%]pB9d&8u,^c<*EWcmo[F+<cJ,+u@Af%5D/kZG;<OQpK)*$fRr.$#ad_n`>R^'M[O)98LEQQT10U+_JBN5f?tqb`Jq]R]1rW%O6*\%)2X/X$@=JD9glor.QVZG7LYJF3gIa_XpUI(OY%QrLnRe=Zmm;T&lF="11K>&V2Jib,DI,#5e?39iM2d*4jal%;9!D,!<6Jp$q]qV%Fi<btnuRg^`:3051F>S&`4-ME[B7Q,RF(lK,8i3MQIqHg7SHXk5t$YN!<%:T&MX]3OsHu^(`Cd?:cfF)_k+h<RU/C@8/;@KRu!G?%4DV<&&M`dP)[akJ&MZ,DW7d/!`(Xp?A5,K$G=i]U;\9,-7M44.MAU*0C1A_<L2;0e`gW!VnA<p6'bW<*W=jP$0kSnpOOX_q_2e"j%E"aBLQlD12?5!qRp*S3a9h:5;!G#1L$]-UIJC.7h8.7/M1H8*_`/)N4K;]*5;,\TNneVtIpeD_?@j*SZ:a40@KZ!kr:pQu8&n@du%`L+\4@`U%^l*qNB"%!\(,,(HeQt:TA3gY.90`XOnLRX;@nt7ElcjP\-%3Rs[DCd&f;?;`GP*dC%Q\IRGP_p/'.>=aa(l__fh4Q$*%kYcSD:_GQpEe?))<Y?'FMA0^',Xs84Y/t0"0f#G#R(4Z&&Y^L0e!.el0:aptZ;ECXn?Z(0CeA.b+lu>",UR6\`8X6Y@[=P)pi]XM%,I[YNQmPF7bgn_Ag*ig%)NAlV8n...lAUag`2Lun9,a&5R!m6,10,#ThNN.h)O/1]8/!h4:ro6eL7ikG=@nI!2C+`,8n)=fU)%?>%&gK&i4FO"N7QPrI1c?d;VO^P]\nR"p(/`T@7Ts9FdOKF%'#X2S$GWj1(f_m7025&48s1-h`-A2EN24D5%3o\R.O@Oc/(%'08Vs,t%;fPKr`"7)D$AqPLN6*\moGT08Tbh62CeA02$B`N),_g(ga!O,^LuOF/e8%B[HmLFE*AI\Vb:FLrLbXgF2GMX4,H3G\n0TDM+X"5n%=@nIISn+F/8n*HhHS+-@SVXO$LlNm?nW_\u`n8$g9j.u9l_VP\m)T;APnKkg#fE7&PSb;$)-&eb&gL[Me)(lY)\S5fGuM]#7(K8+%WL+NI2jd%^Mi!8r;B!Z6Xe4_D">&C[nV\)X4?SYc`(8@qDf'N(dZU!(.OTtIc_Y4gl?o="%"l9_RM\J*BYHD_0l"[h<cfl?7S*Xf%1K-:g$DcaKl-ZK7MG/l3S/@=%70,6".H@A0j'CcbY(,P][cB6-'DpOB5JR!2a8bSAqt'WGhML+j^VB[*ir#kR&QeWe?G;Z`rSnu8%/Ok57n\o;A`H:[KDuSeG^RUhFa1V2Os(D;-&-)Y)B4"m`*TNcUO1k2s+0@a%f@fD6rR8qnXilpshd.><_+3#K\ia*,ip`k0e"b)r%2Qg>6q![BI_r's5Y'teIN5'dK]'^*(^):;Lo>0Zq\`fsOP95:c]&g6hK/6h6hqkO5hiI^N1VVgTS#cRm-`Hj]s8Li`F[Q)8DQVg-%jM.hOqR:UFr6B-VTTc.q?\E29rKAkJs6o!cX8Rsck=;ptq\Q`Lr9u."E)uo(r8d.fk&6\nr9,4]CVK^eEch!'jtG-*[W/bR]".OL%[TRZq"h/':ZQ$[Tr9`1(LK=^F+3tdWj(faMs/t3bI_YDg/s"o&4e8ii\*G+6/']f^\N78^]PX5K?h/r<rUo5n:<-$\IZg:JH[:'g%GeERIjIT)<e"6Ki.muN^DZ#+T&)J<+jmr3H^9-9SA%c!VI*UGc9@_9-<St=:*<1.[*t<A,UYWD!b+G3][`FG&!aPB]"6uA6\!Mlj%T3`SOrorK_`eVe6N[OU\>:VV]rSmM?jh]KdjlS35Y'dOcnET$"ou3DaX#X,;+Y#`UDWA>nr8dX.eORgYBfSC`YPE%u-bl1DQLiRG%I_*:ThE7Kto@%`/qMjD)_rX0)'rPDDS@mPN'@^UsD`L("fplCZ:s/n)h<)RpJ@Zg)hSNs0`]FV):Au8#rGB<Ms%$$)l:'+M56eCd%H"#,?UL(9O::A^D&)A^W1I(*h3Mss_dTnW(2gsZ3(B$n@i(%^#O1!.QhrNJg7Gl!-5/Yg2b9$Ti/rsA3*mDFf%uuZFY"jG;djP*Z%:[g)O(UmFb1>tu@c*c"J0c,k1IlKI'I=E90f+?[+akI\V_s#Mr^csa'P+t#ZEV(O,J+NO/jEu#]*$1UkIU5Z*J&ZHhUOUJ'kq<:V%DXNL1^qVq?S;.6gKo\Hs<otX]X\>\n[mPQ)7k4l5F<B$tX>YMMs#"<$D:^oOdP57Q*?_6GmHMFq;g`WQ'-/)'c;2aJe9-+5d,1JP%\h*6!Bg&Nj>EARd$LmTMl^nZ1(B[2a&BghENdj7?nBfFAjnS*gK*"5"Gl-XJahdfPm3?HeVtIY'93[=9*B#>.bI=rTi>nBOo2aU_%S`7CsQuBS`p>!>j-`6QKBQ*5"ofK9R><BSYj*:U:c!NT53j*c+ZdS!9],=UmgY(l$IGMEuAij4F`X;@aVc\HZ/l/X!3]k'E@3,=G%p9`Y,h;<&kRD8;V;=Ap^I/2eWRdZ(QO&CPJla\TRcct]+>78\,?I-UV\Tg7RYNOp<>eHZ_l1K_Uo3a?o[s1%XIqsbqdrlhXgL_6t%k7a@c(/O*/epcq)d`'[\_ac8LcJR%h7jgP!n9.9-ak"c(\KA'KPC'd0Rrc8>hc)+E`YL_Jq!j?BbtHR@b9-$>E9>bGYMR.1d7Nuq%ik4!Ik;-_l[2U1cUOG?i4h^W%j-Q;\H+a.Tjl+2C*$<,qot(>Sc2,up;d(lO"]K`UQr7$?V$0eDOKJ5O+"r\9cTeFAlL@Aeigfpk%n^5Z1(T5;T+'fp0I<9ISE.4kRErhaGYj%^)+`<#dO&,)&GmM7Md`5^VoB&h/pn*bV[r]&bq?ro(jnRnipAS^2W1+hVaPmjnH[M^A%mLB]l2m88QlV_]4"CjYZ?Lc7bpiR*rKX:.`G*5V"5QC%lh7;]6(YA,#!mg?%n!Xd/>eadb/f*e__(HMi@_jZ4m,Hj8jnW:#MGsk)%Tg/f*N!6gqY`":CA9QRs^-F=ZoQ"^f^<naV%Uq*;,kLb55tLJ80jBP]/SY/Z5IkDsZ#/sJ5!?IQlJU`(TP'$loeU%<h;NJT)-,SF%FT*.<n_9MX5GQbqFT,i)]3h=Hlh@_u5Yj1_CL6_?-eT'>FY?stBpQGKbP&5IEX:"I58IFk=VZ1UQg[*iN=!osc1%R_FZi+hXUA#%%I\Lc]JJ]fRn%Nr$$Y'_RJ\79J"[Ps]p7QMsNN`L+R:f4t1i%,K\b+j^WV-2-%i7]cVa$V6'<H>_Non1bn;&%/%mR]ehVf"MWBV="%o(Zmia*6hsqJJgXDk>iV1JH,iVm&<s<.2d;Ie8lYUgMt9T=8e@qVh)+i^b90s6]^4K>W1f[$%/Af*@'Y=24`=[l7s?piTWoL0XH9%j(_njqpqpTo;_iYbN]a8OhY:KmEc8eo@(P'`@nE<HORU.5/"oFYNKSAbZpsPea-C)Z^uWB=pW-VAMW`J&Rln#]??"9#fc<2UON#Q%:2\nVNaHUX2&5-B8SrI:=-+`9jW3ZkY_ju$b-J38`>5tsoGbD2.l.".ITNTpMnu\9/C2[N=`SMS)Y&5VL=_TH])]Q</oEHaQ<`4I%Rb'Wk^U3(]0"JL\<:qPeBm]QZB9nIfqto'0MYi'2foh6)UuF"2g$^R/pV#SYjt=DEe:m@SPIiFFn,Ss8%^c5Q<FCTnIYQ&2r9`1(%LK=^Fc_79X?i0'!_I)2,IfK-6pj<:8pt"2pcU*cgr8O3HPH2UU4>5`Z$=*;VPLDO%Ci]'@J("pp#BbQhIW9?_",`>T2LSDKp*5(/%?FSU1pAMgsj1eh?s51;.<mA]T>.a^S[XjDg_)<pbT@R6(g_%9*6`\g#XMe>TGb#l)7r>+kf]jo'<h96QVLS7b)aEoL)=!j\!-NU-%q>";Z[uE3DH0+`^$e&Z1%bRWbo&VZ$JU8Nlj0:%JFuTU(j_"C68\s;9WP$1[0EAQV()X]r^Eh&gJSa_"Zik,,r=g>LMTo:0><aXp%Bo[-!`%ZNoE_$t0p/+?1hg[W"r6*4D1B;eD@cuAa5Gh_'p7be4I"-J?+#@o$ai0=tR=+lp"(+j23;hn*q;KpeZmtF=<OZ/OdajGT%:NpM(R:TOTih<aZ<$;T2;BV1qYEoLWDgn'>U:rd#qH_P[[Mh,eO*McNi&d@5>C/nEd"A6gif'Q,q"41Zk/?\X.,Jrh=Q8o>.k^96%?G?;/-.L$j8bFgNb$[IZA$^m"[3Q$=.t=fcCX7&/#sI'P<j<Nbhg2Wun30j\QKZlVr(YKbHF97$cZo6KeSSHqkBuNM&?!5:$\&#N%G$2HTdC]8Gq"<mfN)7rTUSF$RPFq#c;1I[@I*C9_X]:mY)Rl8fVDcHYP8odINdj#KT>TVgqsO7;lB<*g\acLlYaVB4bMgF!`UMjn%.N`Q_G"-IFF#r7C8XfYNjS\d\1H"4O_<KqA(GcP_UFREN0D4t(K3pS37Q&5h%PHqtD0"T9DQc90?C]8BUNk<&=E!@YG)X>V[qBVT%%qYfPPA?cr7l`On3L`t!#Js;\199Q*:r:I;aDU<0lM$7;06lJN,D(07Krcp+RflY`mTUL08F-*P@9t;t6mnG8poj/#gDk2s+4Ai5%'Aen6Z:q/$R804^50n40D>rg33\Ag[P?F&0R79mVT'Gf#X`!0qHJZ!kRBV0Ym_$_qUQ`/C;#PRnUOU/.aW7;2*OW(8^US[ie&CRj%O..m$AI88$93>GbYh`U%2L"#`KIojL/hUSPGCS7)."44KV3KA7p\6c2G/dV-8<A=Yr-6m_lK/\[7"2!&jq2-FEToPFB=:#Ms4rX,%O)5?;R5O8Y3B<NQ-_m#FkEq_N&$]n)&9AQB[Q\/8@F)LC,Ba`+fp7ILd-U3"o[n!u`uQMMR8NX2/*EMYHn&h*Dt?pahd$+@9*&!E%Hh;:\jbmcFCUVtJd5)H#?'JE?0?U=K6e?2Cln(@tf9=mXgAfL]gAfJteDAELrV`9<+2eN]lJc=d=T+d\dleWpAF>4hXW?tZNXad0%8NhP7D=*"*5!jA;`%S["dCJX\ogOl.hQ+AhdJ]phhj/-K*FSGN`OE-)mD#UH/Sm@M0b>Z!iRrl@/3GjM\'#C;E;RNJfEB>i]YG;"%`:"km]CjW`\%QoWgq[gJ%IDB;\4CXY7mB*M%(HCFYagNXmR1U@Z\ZRZ@ImQ:C#m'(B@7g_[X?jdl&nF'0QUgI+kY)XcEk:h2J4p#%R(sq!fF'%1Ab./8/g`9Il3erC4e(G_$#E*r/==3T<+*NFhY38`4U4Ygf<b(No!oo"hoNQb)c2,'L$$@NHY'3\d"4cZ7pCuhr%@dL%2I!FJ,Em1+8(r@VcZ@E0YiTU5kOqH=JG3mVSG)#6kEGAC6*KB9m)Xks?-X'Y&UQZVjk<lHkP(MF[%+.^;q:<.W]"d1bGf5:<@t,K%H]/bG:0#K:l8O1@F-=Ap4COOce`6>CEi`HJrc5)DN`Ak=/Y<?;oWH6<#2t]a=UP2p]uIA;pQAsqV'd^uq^8A0F/K!/4%mgP6+1o.%4bN7@B+]i5p,6P$/.*Ut?k^8<_T9/:82JO*gU\Lj"!hM^L6cCa=b\VsGPJ6oU[D@$&FD0YoQ&nHGl7BKfu^f]5,%Fh3,*S+h7%mu%RBcC&le8[iijRST[s<9NT")i,O,l4%I]n2]3'TVkrT<nIpi)P8IJo0r+(ekup&MbsB3i:4n^lkC:/@:aVf/c>G=Kb/]D;W\I<5"p%R45u%[$R@tQh]Y&c0Ni2_rJ)`o;g1J?LQ6AnbqT;h=`HbS*Rfeds&gk^TGuZm%?OWZbq"!:"NDBcg'4Kc/bK9^Q\\dEU%5h4^h%/%l,DcIGBMbCY#IJ&Da'ragV6Y2fI=7OV4+)(pqVPTgG4\!I-8j)rHl<;Vf-=8[EBYA/\c/m*MF%b5L(.BHJ,'C_<!DraNY`HFEDPG%o(/A8l*#I9I-^S&Il;f"%k"9QZN@s<TAUYHYM3+p1MiP=Vl9ISfl/d#LJ9CIo\,q/S0&hhVC8M.^;J8MB(5#CY'g0*K@=0;Ibicu%F_AHM\=@15aG!j.O8a*DEAh;bo;X2-,+Qt]>7V8%T"Vf^>[b:VNimdSF8k+qjD7Rs+,EI&7l_S#G;p"?7btQR0X86&M3eU(j5\J;%)'\f:'*iNe_f65DlFuq,c^_Cm>8NnX%UuKTjFui4]=*\F&7Ut-+V&]U&7Wq^^:f(/1Ko7\et81&Es[MEki&kcJIjX&^AZN)$&!P,%g\(!uLF!L@HWI-e%YU3Hp[)=eQ9^8`&.#Pk?AREoj-[.YbT;F5e8)ZE6o-1tD/&bADti.WmaB!Qi/(dSq`JVhnT$poO\+Ms*^jCJ%GP7\b''7iY/<m97f/ULWI9HA/Y\Pd?f"8(eRjD[5'l.SdXNd<FXB<Z'Fn^ddLQDJkFPm&mr2<u5:_Zash%pmj?e%YOeYg'-.E21?%L`cZU`>>`N)>qrB^Rfk'EVe[IDe!Fp9m)RihUhd^qX=4"(Z"B:qVT'fo&;8$e#g?3+fHUaoClVXO8l]gj1fBW0.YMR5%"9OIs%e:%h"(,rQSB8^8g]e9YWAgL;j[5`/@Lho&o6h5-Bm4kFBorQe2n1JoKR3)F8QTm^Zet`#B#Cc@D`7rg\;pqdb`E$%b2C;d],A)Q<,a5%^OOWrfDV=Vhgb.)F7dr/l:9(Aj#RaQrT!0S\(>c"ZZamd\WCZVF`"cShfZYH,Kg&Bs7(fLHTlesT.eq0^3-W;hUbiL]]X-hX8T@@%5Ld12n(7R6?aWOOC#D(aP&.<$Ybf(Arbn-E/uAOlps9cR-'[%.r$0qLa(G#=K,6lWZBOe>V2Io;lL3@sdriX?p)=J8l:(TtmMOht%l<d_ieUP<]mcQt0O7`[?S)q+CR6O0E*H'GC[5u'KnX%r1T+%@NqQX(:PGJE.F7QtG?dX<506:#)B4DljEc^X;;;]PUo=Ac75M#ir%^0,oo#/ZGKCPSCU>()rKNBc@-g;EsVD_M+062(&J(NK,a+'3sls/m/G7Xi3WM7tBbYqrXK_UOp:m%lqAhm9lRf;H=K3l=]L(n)kj%BQ<&V;hleL7:2-=\qo7pr`QjpcRJ]dc;f:Yr[kP0e_dbAM/PtfC:-m=.mkQK--X/,Vd2$KO"PdiisaG2eErN!jQBr9:d[I;7UshA%#3oV]:tm5b)_\L'=s\0??Z//(oUBH:oREr`aE5C/!l%E;c_Z`ggidhWRJ"+-ia,.^6eq&4a5Lh-XLIl)-L@#Qkrc"(MPuZ:;n3aS%qYSqR;ceS/l`InPd[>(GXnAG`0UOO;mho?]JGmC[Id@!g[sGf%9L]9_\<fS]meTsiRf6?WXkV%ZNFHb_hQWFCe`WG+Fgh'qd?$^9%:pJ)$cF#9Ib+TdQ?4>5hA\',sDY0?V3g)iNWOT67XK*H6C,uslVhUErJ5b7phK)i9E$$Y`o(,[JB:*"(T-6QLGgh*[NmOm)((,)`%"aYTf)kCVMmAq-b(NTDI</4f(1)5c*l\rdqRd,c;hp&\GpS-WpM*`Qlp3K(HhE#%U2lbo2NX1SG0ADuL1NcQ;f1'T4V-L/VnYX%P%UUIUSESWW]RT/HjP'0TI0kX/s<u]Z?ob&LXp'=-H0,Sinju[XT.@nAI)7>>W@,LRPq_MRtigs^kjgmk0KkhO-J,$/bQras]q%)A*%C=0js=rfrSi9g?flHN*0YE)at(QsjOL[V6+p>&FN[@LJmf2h:HTb#oBKa\7r+fT"Olfd$3e97O7?]ikrE9u,+`dNQmBDp'iYI:]Y%dIgSj/iS?n?sOX2=:Alf]U,bEM)l>KdA^$IFTs)>UAa@<a&gp,3W[Y29pPQo/11/GqT>t^^/N(N9GQ&0,r($mh,&3ri(KT*CJF$j%C=7iM!P;C0m<\(l8Xq5PX2',"9W9nOCPh"Lo]m0eI\k:DF+I#fX$a*pLsFV[pgp#d?5KTFQe3W;eMXApLio.g%+*(0>b?Psq1]jS%":q?YDQ&bq=qL@*lBm"7=74C^Aajj,k6>98;6?0A=k)mYeUMpCoO$,u2/8GYm/gDK]@DrqADsqm)1]+1C4(=b+mM9QRpcZ3iTPnf%J84J[i`M*ZMsE@D[D.H*%c05fUnh8m&c!Z.%5d[3f,t"GO*4ZCFY<7FP3f<";#O?Pgr0m^IZ@!pf<,!bQZ[Y^g[?QL#Hn#]IEU-k%]iHoVL!SE)T<qoSFjm2W>M%:Z/Z="E(4eNWq$>4"/sp@0Tl#Lq5$NMq]\uB3*P8euKt4/4?G?[XO!Xc!'j_N[5Y]2)P4k:5j)Jj4%C](9K18s;!gm_CYqA60f3@Yo<1H`F\D>eKXc@QP`3qU"p\bGhj$/2Gn;=<`9H:`J/o_G@p4#E!\c/bRDU]Y=ajj65og-'>eUciAg%Hq]bW8C%ak:TT$ae]jNTP"C/pq(`P"0,_N?g.0&*3pTH6NVZ-/,EC2L8Y$Z@GlI=qCI9ZEBV?YQ8dZ".2sObZ?=8NX4+.I-hTmaD%(@B03p!0b-K[D<Ghg!bK`)!#SIb]2WWIm([A\D:_CeSU`<4?l`qgMj3(^pQRK:^?aFie)<eig!=McCnpgTL5"Ls:ra_X-IRDgj=)%DhmrSYgq7PDqd_Sl6.\:S@+^K[MOL16o67i;0QWE;qkXhVD]/m0X^#e@sO!d=eT1,6eu<Gl[X;=1I9U`=u5&*DX)G61u;eA^WYgt%bMBQJD7J;DpsBkJE:$0-/CqWZc*X;7MHN-a!4_7]@YlgW>V^W]g5ks=C0C=BmOI0#Y5Ln>bI$CPQ]/PMm4r/2,l*q4EOC=02B:uR%l#%$(3[n_U9RC:I'UbS98$/hHkK;ZGbW#J]h@6)'F"XrXf(Zf"\>29c4WF-8eLbXgo)6jC8,%#R/cAH$YAA4Nrq7=;=)uor\8AmU%ITMASK=5'^mC?N;X,K^*F,"<H>tMZUZ_^FQW3^#)M>`XlN\W5$cY;]Rl;r3hHFE/eGuQ/_JgVj"R,-uZZ?P)-13qKu-c<GSlUuJc%/pYqo;X^<Tm3HT!9>gPja&:2k(o?dK)K"/gqNAaF;IYDY3dj]Z-)7a&ILMi3)<EE3D8_Jr/!]c?fgbhML)9hB!&K-)V*Am=q,PL8%YY(rj9GB9r`OV_(J&l3a2kQVblGNRYMc1[f_cJ5c3^3N-q!s4#_^k77r'(GL8#Ohro?E>Q/"cA3lT_VLJ,&^,_5RS9f"^e?m]1u@%X5hCpo$-F@iUJj^#H&s45CRp(EqFjAJ!Ci&i=t0%rq!m2?X-q9<Lkpqpb#gdjQkhJ:Yo>^1-0HcYT&!ls02*Imn]!/I=#u[SuRcW%0/rg8eW10d%ShXl8";?D\nR?)2?gU+lMmaVD2Lni2\CQ2X)I<-?2n,Y6sdCuEE7u>BCY$K^)r-NPc5a;c%iVDqeoM>jh&p4KC?h[%(>k*s'&UqcY)k_m2n=32i]Q*m\\WJGqlTa:h^Z>Zb]!>qEkY?,NW6,pRs:^s7L&n(mfj!EA,'rsCu:5?mCVm!kIZSqNKWaLUSQb+%i_AmRiRjhG`SKLcJL<mW2h#`&]_bq-kIq\f)pe1]r&8N`hn6VVJ(*67^ZcO6c/QLki4jP!bC`aF[/m%a+70J?^Y=Rt2(GRIc%/bS%g@r)h9rtqn)fLHDlj%[e]CgsPW(@MRN1oUb=[!:!NV<mJXW7t9mQ5RHNI]RU>3Ci\,Zp##*$jh*?!&VYj/Gd:[9WRf\uBgDXM=V'%CrEkha1U,<Fng\Vpn:HCLsc5plf;Ld=J.Q@2gAfE=D.:jT=#0:2a-Q8\k<0AedA;i)iAJQo!6L?lGVB`f0VVNFD]o?CTLTp7>P_m%YJ;8@lV$NT>DJoUS:KdF=I=!]O6sqKiTcb[O:+BS"L"tF;)eL?TQSo1Yd=EJLFt)bSAk,B/h($GlZVW5]#rQ_3`uWd2a(sVc=^S5%Y*T)+3rN9l*(<)m%2=1@lGALgq2qc2"Rn2WbmZOak@fV7'F*1J?8?B6XX6]YaK@[P;odBgl`t@JA*Rb\gsS!$afk*nWt!pbKqgM5%Mq44epXG2<f"lCuV=5RKoaO81D1(XJ`huFAQ-#bED>,*RDSO0&!:u4'WO)Roo=3>g8m;:N&t93#f@bfp.A`Rd9uVdZ!.A``EsiG<%lCD:]rFi]Vk_M;%"Acim-kRRfd[?_E*.`YEMj2bGX"A?m%,,E(*<mk!"f<rURrF_T!F,i1g9GKXXm97sq69=!?2<cn](,mCoO\*0%gWBc6`3b6Ao2l,_4BT3r33Ch0>aM@QK._1e]p*B/Y'dh-?Y_/tq2.-cl2kQT&qMA%h'qR5KPo57cdZkSpK2pC*r,2>EU\)TkH(8Q%kX#gH[)F0s'u;YuMZ\uAVC`:O?QA@qYB*'!`S.(aot^c55iQDX&d&u2!YgDD#)VdX'DA9X":MP\*>smlJIKS7aKX6=qGC%F&)45*%LDt!)pi()OZIX7h)K13A&!r:7@_9$eEF/OB4FGZr3$'^,!VA@0T5uRl^oej%HbCADa9$%hqs-dn2mh'/pDTpa?aU@p.q117=;D<T%!1%OBG6>JtmI[].a-b\c@EeO"N7g(Ig"e="I*5/)'Om*;'k5HIV[%0qX@(4jOjX?KCl$chL7%#=6-ObQIV=OS\IS<WFAjFWj,b<i%($p)5k$&-Hq`[50:@dlNf)<-tAV'o!AV$5n!\nVDR-dTZZeYtE=hVIP!\l'tGV@@9S+0fH5g64d^%i.o3AlWGoa(.N^N"bc)[0[<%!G:pE!:qeP1-\9)Whg-%>n&[7fZJP'--N#H/a730(c(D^Fq*]9^Z)XYY$9Sj=*F8<@'`r=Ji%V%FEYW-6+LeC9]>hZ!Hr_N"QA)4%[/E(Y##rYdY\Rq?h\6u5,XA\bI+MQU%mbWG(%jo+Hs4tU$7g8^ciR1[:=P+"2%+:U_@7i3@k7Aks+X\_n/s9uA?.#DC^DFmK#s<d%Z6blS#prl.ad->?hn_m6#pu-edU.UJeq;(^4mbnjHQPO38uAUM;;I/J33S2993n@"$Y:a&C2]h(lZ`#q@_VfN47pK0?X.Dt5[=u6%)a[oEh8?s?NLn:fN5/7#g&_H-$gN>WG(kojU*"8t`;XV7^i]2K.u2]*a[!3c72j*6_D,6LLI;@i\;Qj2B6pu+cGFO^ifacZK[MOr%Xjgqs,_'(Om&Ri'qcJr\lER=5NHhe87Pd9R1"m$J+G_LlV=tdu2<(aEdJ#@$-"eTHPCXm_O6\'o>FFsVc!:_#@.L^g\q*;XI_oFS%@uKa\/[TGuQ0u$@jphPr)pr'tW:MZ'm\I-89%,.lO',5AWp:956iFT#Y/MZmd^c]V]>+0P4=25&GW]P-PO^X95&k\O^aHBKF9]U:%NoRo&As+L2!*\NlKUpU=3]](..nsKC6MmIep9j@pE":BIq)6eu5M#-?8g?M'0C)&4&305k+>@Vj,K;^4f*[5uXG(n6Bgu?gCm]?f%/3VUJO\&C,Dd:dOVeWiNnQr[>NS:HlND2chH-*oZ@-`(+cV\Pl,60R&'i(bdPh+AERV'!/]=,eK-A<5b[FSNbQJe@t%aqcK*hO3u%D?8r:JF49TF:SteoB9SQ=U44KDWq%L\jqb$M$fYj%,;2XKq!V(SibEI"7";7e@k``Y;:@Ynl>eV8d"@9?UAe!OIRUBk?.h.>9&g4%!-L@2e<Mab\&NFKmC5QC$NP>J6*aSrlJSH$mkSGUeFc$aU,.g4?O`R*6i1Jgc41tc0b%a<R[R9daf^:V]tsh_F*<5dh=cg+gR^^0%/fHg*lA1?iH<MML\SR=-N@KH%hK>efl>.)B3EuC/[ZP"2Q+Y^`r00;q6tfQ&"0JCe[:6UX@uLl]0N#(lDc2W23>jXsLH\:fO?kHU%XD>`=C8"C*X=ns5SRao4J6)uY>q;FEW\6gkE*WrrED*PbY:E2bDJH6jJDK?2;9c2R#Lu$]=3MNcbC"6Z<hh/=Br/&$l3;IU[FU6:%`aLXo\bhkg>8R3PP<-H:FM)K.J1j8\3csX0LaFRl/*U8YEIjHW5[N,C6'eG8VuV+&=P?.$UmFQi5gGnO)U_ZNh!H;)>5c(#hLp3+%]"ZT2e>:88e-ka,B=b/>+LY6,,CGLY;gDO%X"fVmS<Q_P:Fh,>l"O``]=O3CC6X9Sntt!LQa%d.Cg$pEF6`l.AMk=/[SVa4k*n$+%91H>.r>=kVo[s,eO&`,;4p9AN\e3H8+$Jq-4`\>/)1fOtU#*A1%jcmT5uYOA=+bhR)]Bfil)0#8-XFJ^eqrFA,lW7`6oMEf*-L.Q%lXW/+`%J/,edp'/NN0]0/rZ1OTX5?T!4,rn,$7=rgEP4j2Um_4(<d'BXfX#tR<=Y!no>uC(/>SCGu?W(d84)K&U\:^JUSs`@`s9a%[oR7sqa$3$TY;Shi=MkZ72CjY1VK.`KOEld8"Di'`6o%"^pJ&cf:a$(\^tC=oLhW7?rEsi>:P_tSm)#F[T$YXJ`=LY\gt4cU@+)V%7,8Mu=bnbjVIe4koqasm&`f'?!\&Y^]@a,ED63sdIngiknUcgS#dLW\qJLl((MJ2I`a:n3BRCE!=p1rC6*!H$C([gFMkJTEBXL+c%%ge6QT!-:*R7)P8M)?\X;+so.EBsJmQ4AF[.nF9cAADGeBR1q0p3iOuT#n7h5'YcD_N*&PER7HT^nce/b[+&]^]?5plAbGh+Hru=%a5!i@F^3)A7r2c,mGq%+!>C'>+htW^S^To'b],YH;mA'-`$XZ#`g6[(MYH2)VK1*Fe\TtK8mg,ZXB#i)4&0G6*Ei(Sad75iK"uq[%$ag=<f-N41C+pE9`?V-]W$82`]NG2Yd7T;9h^Ji7^g\r,UHg-AX+<YOe;0!:'0%ps)<Fs7Vb,\+E2BVQTEe7ZB\6rH??$TpJdgO(%dB_%4"\Auu*&d^RM)7W#o2p1^g.*'.#s9:hMq#n$kDY,*DBV1:V8=V<8[G*F,*f+<?+"14d8^tUQdAVSUSu-U=sr5M*$0^e:F<tD%2Ip27iu@KFV%\_sf7@"UhY3]@WsaDML+[?@@7]<=,+q)29-&5c>jF\@ko/=7]]\^$IP.L0SW3'OZEeaf+FRQLrh@J@)'lt#gpHHS%7dZYAWfk6[Y?4<EU!eoL$?I,djH[%E"1W#0KV9NtSWm[16ED$s1p0o"#82.1Lqj<LX:'k;"*O/n\"U$A.dUSr%ei#*qEo8P=mU_J%r>qJ$&r"!0N**XJUODep7h$96Q(rR3V4CjQ/4$[=QP#a(P-,WJ[G^*g87AJljbX\'5-`hIH97!5A<R$NaD"C@:hrk9<CC;^lRJ(b%BSc`O=N5*'#kZ)()Yb.(SJ<d>RVG6+#9m-l;.l'BHP;bS%M_:3X,('i&4Z%6fCAWsjW.)s.BJL@eV%VENLW7%W<nm$&1?$]dU6n,%h*/;jN/YETk2t<^Ojl$/a:V6M@r9jH:G&;rW.RoVWo3tt\bB*--P!%X*7Y?PSco)G7=KdkN1GR*OJjnN4Qnkd<K8!,r3VE9;i"I&%/["-@nN'G"F]56Ih7/3jl=CXE2GO8,iLQH7gIES>oOI7=hh9fL,Y?s^Qt-?X9(C(2MOR,oR/D@Qb'b\`_Vo?AGdhO.4hTNNHLbq)%J_o@T-YRG1I0BAg+]'?>E@hCM2m)&Q^P1&hNF:[A$P-@Dm"o4'GjV!VkdF()rBS9^An\]JB4GU7XC9#Aq6pP>V_s#"+h/#aGt5$T%"r^k33t0Rm4,/g"c]C!mfshtTjR,JOGsajB4/0f!iEUS"aRVB^RsGW+.%8=Hh5qO"D]#eK+lmisjo3J*$@n)L'd<eT0E?.a2Zq.G%@5S7N?1X)8!T[X,#*@k>!4#sa`Vb_*QsTs8_AY0FY+`r$-58Jq"=&[@EF^s%V`8_2!Cfi`_5")M6?GR^FG2,ZMWin`Bco*Mc\@P*%>s[&2?@!&M^?)1(@m,nsUg3t`j,H<E>Q^/d9k]J4Nu#McUtf=hN[r09\2*4D9t7JgqUTZJ#FIdWQR-rc$8)^N5*H>Yg]/t1Q"aI[%.i"dWU_g8'!4M;*Uc/b@E`StPrpq(H'Q?&kE-]6bht`9/1Z(`>3@Nm1hctseakR$=Zi'%'a?fXWY5R!$)3,Fb'c6`mGE^sM\:XcY%;(k@G\e5qU@1qm8EeVg`f=OM!Gf)?2DgR5#*JXG84%o_SPd+9d#fRg[J)/h>-C_Vg!!F(DU]cHrJKdQ[6kTd"`J32Y9\9D./?m"n%4"RVR!]qs;_ZDnNYepN(/?m"n4"RVR<l,=cBc3,ST+hU=d\r7)]LY,_O,+S#LAYlq06f8?2rTI0m1do$K<R+K26\?$E!KH?+YYPr%=1AMT-B)r">Fr*LgG9Of88C5q@FQ>INnP_s;92E@CHil=4aJU%&J!8a^.#11iV)u45%FW$BACiT2]BcP<CiC7V7FhZ;b<rCH?,,g%8-()&j>';UN2&m^%;LqpBt0(f9n'H>>l1T+np*ul%lH%&M*_Ml8HTs4\tf?ZBn3gb#.QAJ/IZn46f,\ApDZA^Kd#o/Q3OiQjNW?O%Q8HD1QjFDU)NT4X71)3%<o^V6.?9sDL.XcbP#CI2-Z0P.Gm0W?[?(Jq%#DJcqQ)\[eI6?nprMMfR^p765:JFT4EX2/aU1[UDMb0H%@7QUG]%Z[<MKP%k&*#XGN^kg\r>8KXgQ5Ni3Q^Q'p58A3+H$be3+D/mM:.';cF8J&>-*C,aR`5#r`\N+UX*kCr3\4iBh0L(p*Sk.%p>*e((eFV/cq;!\f^$mVSNge6r,6Ut4hkNNQaS-a-HS^\SUb^5I+u%=*@Qd%Z_+ioj14qkDoY&4H9*f<O+5[PYVV8,01508B,BnY%iJo=s4"l<FbrR)'?FFjZ`YgunP]aDQQG1<%[FIt@d?\C6kaighKNbVDk'j6UO-?*7g80eQWeA(23[KUQ8TUJrFdeR<b2K#?ZBKl3%8hh]g%Z-7kjKQ%G`Qc=3YiEU?)HTgqdq`CC`]bP%KQ_Ts+fk0JD7S<JEJ7.C6*&66j&rgPbUcK:NodFig7%_dFOhf@'(.3^V3)Hg%`Mf.Jba$q'Z')66`0N_n9O.HU/SrO93JFk6+ciC%'%JUtW[5eS#^'0_D$,)I0E$uc8PIFjWEBk=oQ*uuNrik<[_,ckA!NTh=)GM!%BpFc5B3e0]2(#SB_)nVm7X\5"\;,:!I%:[uBT1ZY<k6sSK2W/Srq/f-Vh=NI<q\coG")=d=X>amoTe?XCkEs"iE5liX;)OFf#j^j%501j\[SKDs*X6`O`Adjg)BBbTq^+QQ[0"lfZ+7-c9tUFKKD$<$/n[EO)R4Nt=>[#kgnl'SW(U#P93\V7gidBpng&ON&*H0#J)b$!%&OMp;>CX7D>!hSAD*,f_,]fj%D7e&5n<J^+D7?q"8[lP>$!+7:ka$BuDqcjE&(fHJF2-NH8Vr_L[b]L<9N^P(i4$D/3:q2+^>Eho%qGE;:c"kaG[pDtUAIhgU,oDM"-f'DJd.I)9EUQsi%3+22*Utg*P]j=0Auu%'V9R;ogHkm1IF`g!5').CqA6=o0;4lE%?\N'de-A$%S=Z[a'8.ChPO*Am[k4M$:=4bJoWq^/AQe6n/SDT%/g`c.eI6K0$H%O[*9C)VP](nDl1Z/F8^D-4fV#%;4t/!sl1^_E<"N*Q\ruqR%#E)`"8bg1`[iW*)j:hAVGsKu"3lA@J$##f'PT5,)8D9qN5SDg0*S^1S<[1A=!KapsRngXIRsnq<FM`:K8Suk[Ot`t'`0(_&5d*ek%"?lbJVLr/Li.fY2Bjp$Ba?6S`026<4WIlPm[\N/c;pFsqqqc1::@?ZP:qob@'MCYggR_on(i3Fe,]@5Vk#dQ\,Z5j<_cCG%8R=tj%%0fDY0^G281:'O^>E#!\V;H@0!NJg'_s#Ue7bU[j1MbURG!<lM/u;G5[QOlebIE";jQomVSn=(#6rI/ebP1"2D9i51Y\AGZlM$f0%,.!.i`I?.4os:K3>1;n(CrgDV:GpHIJ[p,8(R!>0ALO3=#sIp>P"gAHaWL<H\G2CkMgoI20.m1"`P8eTQPTVLia5me98e:6nLlKn%V+prc)b,(1?-QqW%P$:L8ekL=;n)+$^]("uOn#a!%rD4@OND;+%U33JnZ#\%Y@3Vqcr[5\djc?oUg/>s^H$S=+HUg&]RRiD,f_HM%.XlEu_Xt[f]#W@;=R*d&iA^F#HiE'jKDkb0%hIQhI=6+SKBHof\pH6IT6FQ+q;2lT.u9#l&Qq6'X1<>ZN9@GE,J2?7P96b-gZkO[%;YE;gr'?g9Z+E(1[_$$?b<lO#=td_'E</rQ+CtRO(*I/h;ALBd!E'[UAH>[E+CtRO(*I/uOO=A)hAEAqEKaLP_)agpV!_)IN'r)p%qX1-C<BLUH-qt9`c8Wk#]!k8<P:eE#8Dla3;tb@<W3XGd]NLaFmYTG>i,`<mXCSes_BFO+J`=@,XBH096Nqcne_kinQVc729,`20%#cL_Nn2l.n+>oor7XnJrHq5EI;QY.Cr+OD5WPp('>OhTU7OCsZGa*?/DY0g^'9etL;gu3batrC_AtKMY8X./_bn[PVR'>CRn&/9G%"Oj)T+W5(KDcTt1cMD#-(]+u5jLV.@`^i3IKM4O1HkA=$qmD5dJqXR!9"S7ohca-!l[%;9`jXi7#@6D"m;PkWR7q9IP:iVb8<gUt%Zr]qRrbUc)%\5IC7q>B*X??Q;V([e0_<Z%al%b:iaRH,b.Cn#UT<WZkI%_q*P#YJSo:^`!:ieO?<%JDKNj6QkWPLeKbS!:q!f+1n%+H07Zp%kR%R$JZge(:6-p/+GZR:,Dc"K/f<L\>;CpCF)f<JO))5O)DS*;6KZq<;aHTCjMj!Nm^S%eF_Z7,UuXp#>4(C\o=0L)+h`%TA1=;\+"(EVfj#_W%SDT4"3Q',Y#T.MeR0m^eT/_(U`sR&*We?glBd1[;&9+)pjIT!G5=OUHhXg]eNKh33>-$QLoB0Ef7f@4E\$R%BMCmuSCA3U'+m^"#Z,e929AOJP></7NgaHW4>\&\qQfXnI3lt^V,<ineLGFpl75%2Zl&X"VX[3%FfdAVE^gnI`k?Ih4oL$Q80cP(%TU(l3"=pCo2Bp4ikPDF@K)Kh4Kh#U/8;V80`r9i$J<:+$ZUs4rgQI&M3"@.R4,r0n!i5C4f(4e6f7Sck&2,s),&8!Rf$H(S\k':I%8e24ZrdL\:T$2;@Zt6N+ZJ>R'-&N<Gm^I#"%9<Q;LFjGWXf`Tpq3WYJ$RjIr@_[cCAC7V^PP+]NAFu8EK,#<YgGP*J/a6gDN1Xf^%e(g+qiqFt2F4piSMZu'#mA($KjI,jKhl8rkW+MY2-!;MOa)DL!X@^65lc*!ni%"FClB3s-5I[J?`M"sY/K(A')`nArQ9s<a;ODM]%`7hmr2p0k!<g*tndr&5<Cc"!&LdHrcDGCFt1U2F0f>;5rC^CKb6i3bnFk,-j2Ak2_m)HYcc<Xf02J_[<DEM_h$n9jc._4,R8reMb%X;&p4W@-TO-`=Lko;MG\TO)B(@G8ehNXG*eN,(Lt?X16G-Bk>OV(Hlue$U+$_Ns2FBg@`_76icYL=&BcZH<!!d\3\Y,KCmKXT8pb%1@"J\0n%W>N5r;k5lOF:rp']rZ@oF+XeMA?Ft)g9AuJp4,YhM2M-9Ol2set@+i9Ct?$[oZ__-ohb,G&0?E%An\YU;<e]R8qcrW?Q%fg&7JL./:)7back)b<Wu].fdmZMd]l$]ESh.0.?^TdH9T#g@1oLYA%+qk=&.ET*iV7`@aD@FgZZI;<2M%+,)+f@IRj2;VD>O!N2'%f&*6FGM3ls7fJq5H^c!u!C+?rio9m:bEMOu>2PZ"V3l/5nK2(bnJZo!ns?OThq%i)jnJe'I!G>DK9)'G^->rk?bUs[e*?OWo7J-G%03;Le*Z\Vena=/ojH$JS:/=Zc;=s^_P=*%SYP$@.>^^Ciq6o_`hn%Ijs13->YQ#(,hba=hs6]=EQ!:r9g08tbIbl/J040+rRiYaM%TDI%JDlY-j0R]n/ndt8n4Y5CaXS/$r?G&H!C%[@E^37bVIpDA4(XtX<FML%`j=So_*N&MAp@nD2ZSIjH^[([Pd=:SapNon-!r*@s%cPV)662X#.Tiu6<;Y[`@\!2ZN:sb.&EfmsWM-s:;),nsgSc&M]\]e"(:8SV=kN[QRYq+^W#T!5/?#79dqXsLUc&3,4chYO5kPS0n%h%0LkEIFsbej3dP;"L&DdW>)2;uEg`Y!2cXT!.FjpYe%YB<P*lgOfVKDf(I5n1aG+]:<1kSfaiF(EC-`n>h3<[B#?pX?QRCpkS^\%CL?gQ4lb%<]?pVmhBVlj6+RPU88O+0[shTVWLs'+rU?(5(B/>p>.4XIkg`J:+tL2h8gWQa6bVQ1hfR=+<sON\]_eT)K/Y05UXrb@%+2'hJ]&dZ`_cI)0=#[m27MXP3G5%A:<t.*<0YWR6iMsSDPLm2_AJj$7O0qD@psp?7jIPWEr,3sp"Ek3<7k\G]F1BReh,3Z#QWE[0%(Xt[fqX9(Yqs2AS.:-Cb[F6c^^U^qgpa8.CCi.\)]t!q8q!b$GP"52+c#<53g?eb4c'qLh?QYm^^%mhb;JM)JrqmiCQR@2,<P/'j%PPT:,2/^.;rUn075<f,;o_@b4dfYQ8^L$i#'9"g#6+<#f<)5M6&TpWEb9_*[0c@/^hBSoG?5GAu]'KC+D1:"CXG>]H::'Ur7V@:r%Xjr?[#GWcBMP^>4efR=hrH#/jjispF5HQlh>,/E(5-9b%f<mgB[[OfsXYpXL&'(_erQl'c^Qi4ga6"3Bg3n#4k4RuTYOW?fph7Wt%[i/&f[<]31=rZPjR<dE:rK-aaj.tE*H/:#3FR8LQ>O$T+olZ#F<W@95NAh@GPWS)pK5;`"*Vs_%f9%.lK\p^OT!%?VEl1+Z+8R.Y%r9a[eVG=h>(&,lnIX#p][AjIlT<><%ElGecT"a<+jl1=Li:Uq;/8alYLM>21gU2_JX(Tk4DRp6tHokRYj#j$j[,j2<+eB=W<f`R%%41hj?bPqD:l8;bl\(Q1QH?+`AOuV+DMD'F'F#A%8/DJ[_D,X@pnCG-ORfaX$pTa,<A_VLaD$SWS%$LqOG4&jk`FSiTT8_N[Oo>i!%eX`43p:mdUot$3a*WW#X08n&C28@Z?ri"*<3p:5lK^*JoNrT%KnbJMA7o.\4C$GQim!LUb#OQ3^LRB`656g:op1&F<DLB)A`'\Y0%M\#jcYN*O0W5Dnk%FD$XT+QGP()+G]ON))[..[`-T@j>=h2a/VNA*N^UqCgqr3814#KZO%8(6k?<j1D+7c,sWc$M+JpUrm:<m:kY%3<dH25c5t*AEBj(q\:>6i:RA;a8#Ge`Nh<Yq2o=QlJP?*"t'<YOUN6(Pg)bF"l0qH<ssc\q`^Mp*]d^5M(TsFMGn998nqctPc)*q%E(r&5G570Y]+#-Wr#CabcPA7\[KE!TJDuM]#p&7cY+aY4$IaAq*V!FJkE3JD`")k\a5G)A&O1nRBJg;E^8F,+JVP%dG_Zktitlt8%pX&_Q<S[W=k&FeZ9sD7)?ic/4NW-0`s6XV.f.DgS4[E"T'W)18S3L\2+I3ZqNkVL'Naj&YVf4[,LV=--&-C%1X/6SP"@KH\a1YSN%L.FX]pkTB829Ip'%:n9m279WIp9jqf#K3NSMI7[hW,,.iTnKg"3Yqo9YU2'4.[#/d/]!sFgD[rrF@2:oUg1nX=!V\u3Z;Z<ho8&@%-:P@rX]LinS&4W7;ku$W_#n0rC:f%t/9d]8A;+9"WA[==\$eQS$Tm/KO<_X*HK.>XPlX51#%],YT<#ChB>@5>0>AAoC5nADV^_&O%dX<\E/U$&7l&]t#9g]bk&gb26]"$TXH6-V`gcKWC[f0[@)r7&,BX,)A%_#m2nU'Njg0hP?i=FZ">8_t]^&]V)3NYND1&:7`k=7o)%h8]B+Y7=<gYHEo=XC$DU%]OM?j5VjJC&ij[cAYSeT[3Z27lJ6As6%A5h"0O+_fa'"JD#)4>1XiEH0MppQJ_mm;uW>%Dqup-H'9*:%@Vt"X\Fo/`pK'`5-"8S?LU$gaE#8<op0.jSOpFMgLZ'C9+1G%&G3o=\Z4!VI#c/BoRBEG':@:T_MQd6PRG`[TI63H1i^S3[G`_XC%d%\h=J4?L+.'[,p-P)'cO8uuI)ae\[r]cbG:Dht-1t[[k0`LhCa-`6X@fVZF2AI9cN$CK*8".JYC41'1K";L=0JJe1<5@,a#tu#)%ri((Xrh"QTF`QgkjBKrs50N_O1n/-s9fmS:O2I;JaOY;*oM7Bs#J&JO#X'JJ61t6]C%ftu,hLX]nt91Yl(:R,I8Dff/^==DeI(Pn%0UgAsTnQ&TITugpeB$/>>G'F<:N@.$m)YKeVob+8j#J;!S0+uY3!2`HI8E1g:rE5rL!k]1\41af#03%]#N6N2iW'"a8$.o\>'l?"%)`]g>dg'%=l4IBp<'Mu^IAjMM:8lpT#8oEXkR<4O"mc2<mbW;mSK(c4]e@/_@).:I2Q[He2pn%(Em>L,CiI7"Ap=6ac[Moe;Kpl_%0Y:u44m/F.c#6=e\l>[Z<K^PJZDEITiGWEKiTa7_#fL13SlWUCi7'mMLhf>%,nSOY\0^3+;\n$VD+E$h.A\=>3@&DhbVC-S<eO]s%=Q6,a\e,d=LmrLY2W"0T\E$I&Dl1=:,8EB$b=7V8/TTGV*ndt*,,F=Uj=KR8flV?WjZA3iCVZ.d/9,s&S:U6O*'I#S$RIH./,8_6%j:nu`r+ScEQ"3/+HBsNcKXbO8=5IciThg&h);;1sbo6S<+cbju"Q9aFOQA%Cp872.0d5q8iN;-NU/FNJ'9&mCdR''Le)X\=S:8<o%2u?:(qe%aL[Z/iY8dPTSn-3BiT<%p\E'3F%\DT3/\tJ81W=-aO4L9S\AE1MXUgf/_6(93799,BEZf&Qo%L(O?Bc<5=i\*d4Zn`)-%o9SZT8=Luj8%4"eBIJElg`X^c5YWgSi6S'omD.>IgF$@%XPUa8#Wb9.Zka\:YY@nR3a8GK+kNHZPp8/[f8n;H'5UoNZG7C?NFmEb%XF*g,EFI#@SN?:-Sk/Q',ULJ78iSu[nfoG?"QILVB0"YRCWQ7-9uA2Gj%;fV(7Jc53snnZbmRc!GULNVmpt/oB4L@8qG=7<eG]*T%GIL->VN*j53LeG''BVb6`#nlAXZB4D>LSM)dR^m'TC@ITGs&B8Q^3.T3s[h$-;rWnQ8!Op>HVu(9YP8!>#7E#<j,FP).G:0Q;,P$%Y::K18G"$A)%%Atmma*=%-c7=OJEo,'b3g>e1i5BQ<d58Z#%ID^C4Kf-;enZ:)<6LYQi4f[9lk40r6[l6s\l=<\2iL#kDL1N@olU%;ft3lHrSOEAO?LTpZ$_cdl'RN6<=X@E&as5m5Z=KnAn3e?S]FUAP'2dNk]Rl!$qYM\eX:tRa$^@a48B^i4*B,kCTWnGiK>=)0qSW%J+;:c6G^^j!EKAdE:BRRj1@Q19MXFJ&eM_Nd\(rcV>;0D]69ig$p_t4fVl7*<[h5<"9Pd@2/2`(f<T'UH8ai'oRdW?^9[4"[Ihe@%)'QP:3.EAW/Q>goEj#Pm<QgRhBULI2Xhq6h\71`fj^h!G/#e\2/b6Gm;9@(ncUkXa'/C";9CP;[^ul`M^Hj50[\7RWU#1dIbgV](%$SLb-?sCgm1m\H(2YV,pq*#JlM<k1(#:$O_'h'1:Ed_o^00U$6B3gJS)AZVT"@tcCj*u#!SAW,7B#`F5s8BN+jpr:Nr7K4fl,3"B%9?bXg8TRLB@@aou#W(;>+9/".%PA8*(S.2I5_^o?1It2U\lAaiZ!l)/G(;OB\,Lk,29"Xt5u/HLOJY=(aas)HZ73i04\,nmGhkN#%Y:,FN5=h5pHjl;V_N+t_VrA*f#+*1a\-'brLWEbh)#F8d1D0O$h6hF-OKTNqqG!'8$rjYdk9sIWc8Ahd*u&.IiW.M=n8D-Lif@du%6O'=&&U_+--p[mU)kMqi4<181:j&ke3,O8BVCW\'Wuu+Dr0,_pfTr;87F@SZ@ilCn+VOiJSqJ2cJ2Pb!K*XnS'[ghf+TW3O]S_sA%6Wa::4#(QoE\KPj^UcCZpn`GXLN*[%L'Qb;P#&D@r^#^/#$#DOd&&E:+fd=,.RG:WFC`r+or[8RZ<"uVdJqan.&C?1WYtg/1JW_I%kiGu+r<usEnpQ9c*(Q>=4Ld?t-ps@jiL#gPrNa[[10oQukAdYgI2sR2/4@1DV!US61rM5'/rp0iK<29oed,bcZ@AQ<\,b#Y1+>N[%FI_mUCq?,0GOEL$2Yr'@Ijrs`I1##lH,Jk'^#eN<03s$AAs/\`Q2AWlJ%Z94r'150O2XoifeXoZR]i$0">a7V:T.Ec^>tZAqs%r+%k#1-m$u&p)8l_<&lk.o4+tsW]pIT%51721:F9=@j5,\n.0k5ZAie*IPHoo0"SZhR2r<n+\Nj_2"LD[Y-;JP9.c)UH"l]d1,C3u$m%%8(l5VuE1RnJl8aj*dETIpE$!9lIVm)n^8b]ukH-e*Q_(c0<hd[An\>&0n4H2(kBd<@bi&$rII@jN48LRb:0Fdjts.dkBA6=!scX%7"0&ub3tn[!9eT\?$2@p:G[?3%]eXaP'YT0?E)cLQ?q))q4BpT;46i2ri5fZ(AJ'D:Y^6Eh,:`9K83[KB'=FZJ!<XBeW1C5`Q^lJ%Enm_hX1^`te*#82%&WW]`h;tPBJp([&m!",k%h9V33oCS+/St)5Lm`bK5.5;Ce^O&5nUJRndmjh:':<HF]KLk]@2H\hSS!$8J;>]%Bfs)+`cQfBq_44dC;2r\>3ZWu]uFD)SBrt\$-O02ib1=8JpP1]B'&l^GhAup-Q;j8o\r)=br0s?!&f1`Qf12:'"a=poh#k_5>C-e%J:7d)>]2GL4hZra($ff.T7MK!mc&W+s7Ag\f3\ob0oYs!agXBapV4LZqc[!ioLJoW5:W4IVd97T@%-"dE7On<)3+GVA=3D^]NuN;%4kVLN#0$ZO=YAF#k82/;+&`-R.1,^M,^qWN#2UI#)oM\QX8eM%qW]0;?L!@C?aaX<??t0FFB\]M:\LEe_ps2BYOBI.%@5Xbc1+$4%/qB;g7BHFe@?pP%J,V*]`rG.3d)TK*pckom5;E1QOtW@,33m#$2E9tZTQ^3lQ9RV*ht>'f&`i4ac*L_n][hSm5((TSm[S`rcp)ue%*rk!DY^W:758t?MW8Qjl.)c/RN"Wn1[X\9g3rf+b&a[W_STT\#E]&IsMuW+j*b*QIRtXmc:oZeOoC)8/rL82YlMf4MbUJ3=1'fp"%T0"@<;YtT=HEBpaGIk@k(%1#tdl"n,dad0Dc6(SC(]/X73^58Z^[h]fXN4c"_/(RVmmFhMrsI(R,F+aX0)[DDZhfaI?M,%HX._rF%=*_YYoV`dopnM"6FF)ChV.Q]4f$,_s?_tfn?GB^@2]2):J=]N`_<:hQ#\4ZZ85,Wb]/]!QoMrRZW(nH!BhM\me.>Of-e->]Y_4%"%l!j=HC3.UQB:@@c,ssui1=5He,[k5gT2h@BV#eZDfI</U=QT8@qalga`s'J_^"lp11]6o+l2jKKq4"=;c>_-H[&_Z.l9?!FU1kp5%A@R;B:[]'Rc)0(d,tJlM!oNu*HqYKnP5QXYqK0Zjs-[F>68#YNNG23S.DXEp@Qp?*4+f)-/.Xf<2ni?eAddA4"&B7[gZrt1]kSuX%m.Gb_r7e-XRiO2cdqX*Zm/,VQ;>m)1\fp0qIRaV:jgQY#DsY?5F!'P<U+4at\tt:!nH^/D.c!R79NiR,ri#LU43d;]EN@T=pMD7j%4.RE&3e"imG;CbCj7?cnNh<KSnS@Nh=+[rkdd8Dh)Yh+H,0*O,8`13jlf&RaXZ]3URb_;Pj1DBGagDB'Ies>Ia`,VTi;<'@_jA)<%;NN5aOm:OkQ"mN!4\tJ1/)?A`Ljd+hLpre*!KIt_M8"m[ZI$dsABS=!Mg[_[]pm@-aZuFO8(RXk;r(cXenBLW35UgJUGJiMH_VJ0%(af%1WpaR:n)QnqFAJ(2a9F<&U!M#+E.JYY:8O)+0n.m%_\^PsURM[dk9S?"Q!Q[XV;H?pN5t6[Gd8@^,?h)&mL6g0K,.Lup!<@S%GcM;.jf`C7r%OXi9`ksRCQd0=GIJnJ"q^Y],6!E"Z1C-+::E"Ng%oOaP',lrqqiq*,$"&Y6`MXC"_@N^@>rK&?LX5a3c0]E!uYsi%j[rqcdIBltqpgcUR"PO7Aon-3[](T^^5c\u_L(U]JFabf9&0g+'BJoAH;D7_"R=KO8QjP9FT*S4X42LbO/#MCj!2Ktr@4TM'^_-f%*$HX=dd8>"/]^VL]q>_Q<;&E'JMtWB&=X5F,prUVr>2EkqB(1mq?sZ,0fj=RJ5WAt9#KdM<e<k,]8ll`WN`tib1@j^RMsSoqjJY#%TZ_6X:@K3-b^QV+!;38K-%=dmRD>m'VWF@uNih^M[+(pr7c:HR?_+p2^9$+ZL:[''^V>^0OJt`e-GLP8BCK\\&,Au,9"E%%\$M/V%6P'YR`jB%u3G:7e7fk$,Ip]r-pr*;&6CltKZMkLIpmYlpS,D<%nOB8'_uKnXqW2b05PX>rg;#)616PnA=oEUM0["CEQ\;rpnon4Y%cEQ(37A$27>-Q^.gOu@n$g[[8-6W113H2e:]UD\0_q2`>iY*(8(-!I%o&\M0E*eNIXn->s*-.Xc_"R^S?<>81eXka,94-rJB3*u,%4V>NF"#P,i+Mqf[gKuL'FFN,F?rB9m\\45R.W40?>(>ku_h%%g7M:m6AEt9-oj@:C$iNWcY9b9XkV$$YI$]-;&d!FFeiUR[I^s.,%>EI*9ncpNJ(cl;]](DI[%Pdq5d7^fF<f*q-^7%QiLGsa;,WR<W6c<l?htTA],5'??WpeC`@P1X'9M0td]GK*GrJk9^g2FX46Z\X-%#S?\+7Gs51lH@uN-Y!VK0Ai.=LFro4O]WH;bs1*>^T3gSW7+%*l%aljCDl?2AY?$SDt=PR#QBI#JG>DZ0]n]+59TXV)dP/?p,CM;%U@k2+me*V$qVCKkj(k<gB(L4KHJ\Tl'&Mrem"3h"aYu3Z#>"[NZ_0<=Tg>P0<$1M_Y?/Tc</Dj34=cc(NLC0?9=jXi"I-9&FuL5;%<qHtaAko7JVml?lIAM*US[/.\>b-8@M#79nHAKiTN^#?]P%=FX%OIbD`E7W!EW1U<:GSn=qn:Z)J;"Kf@r#khrB?4]CdUf2p^UBP%cU>+,53h-`rTV[Saa;312adnMZ22$&j'2U@PE($(oG$C8]u.'-d["uUqP/?:H$uIBXJSJs2LHWi9N9hG],IaP8SbsVI+Bp0mlhlX%WXb'aT^rEXps^l)lMWH-oWDm2_]:]8;/HBr>.$KL;][=;YJ0!@H35D@cq6s'ATr?(-O5O0i,ptUHg>AE0"ueBZ*79??J`$NNtRj[%DnB"VI;MLJ$BaGhKl!NKm*G3[SNNNM9jMRR*nX\t`VY@A<,YkSKtM]h7[\,>)FcscQ?umqk#,uUaedM`Ejq\+n!bh+dF;>SdaLa6%K?WZ,8MRVj=3n13NQlJrR9Y"81fU`#"655C+hB.@[g0IQLQ$YN=AH=d`BNL#:lfPcfjQ%:cWt,=RL<1qd9OrKH^RE@:3\X9H#e,$%50kQ/^E,4j\,)1iIkNp[<r:!>4LZ:N()FA0[AbP\X76%/1sFJkY!f.TC0n*p1A*rA/oK?u31f;SAQJ_"X`#dr8NOY-5Pt6PfRZii%+1^4MDBtEbhr`@"M:o>uiOVu+:.;k*`HXCMG"rgZFo,li4WUrmj-dgHkBJJgE)F\WLJ+,'HaECQEk1h&T,R6IX]Uo71Lm7,HB#Ju%e]-WU-.@fj/L5Z4qdI'\2ZJ@+a&6]"F_`JLf.J.Cl#q?G(#LuQ>7n"7NJ7uprL0#>Q$6C/I?jUBbIP=c-&>8H<5k,6<)sskPnN;I%*Gd8RQE-FN3,ZhUg_?N_m-a`:<IWVBqOj224$L8*ZCT&2qISc+eU3d5+L7L(-qn<<0?p4`me@M]Bqq1V1[d&i:o8M@.2qP]p)phB%>+[H9ijV&jL#Wu17"nI7U;kC#Y"bPKRtZ"XC&KNr0@@,Lq.E:C]J4WHFK^]!k%9(qb\b%2-otEKlYDcp_ai.NcS3^-auF,M5g&Hh%$p4Y$Yf2T#7&nrDF!@%-'8\bOm;L\UQG8^6kIJ'HY-tY9OY;t8jtckril!p=?=0LhZC0`XmB#i?qKQ+jSVh%GS+A!VbZeDabs/K.%A]DGZ*u/g7=&7Mh)dcaK[A'jYCi,#[!&pO(33@:Sn_CI3epdIo\?oVa`@Ca_2HnJUp-JS.DXo'eF]nR&'ADMb.CF=_Qq<q=%>LLQ%2C@+=*4-omHP'!;$s(YNFtaZUhc?JTk4AFMc7%JG/2DeLkOh.OXCGs)T':K\j16.oCfmrG&^k^.lMVkt$0Dkddp@#UrNsVd@b0Sq%[HGD9D*OFHf$A9Zf\GMuA7SXZI!FpV$]FW4=LQLNht-AIZ4L+f/:a3"HC2$d"YDP7MlJWF;k&bX?gIO%==[aKVT#Z_26MSlS`]#>%m@!?h@en!4U_<.0\t>ONVU#c&EUYZO?7o0hH(W#,@>=9[DaY$M:#7_ND>W7tjU@.WZ/atM+m7XLn]gIa`)JR\(X/ma/*(c3aRI-q%,rqJ@gUURd6$"R&h5/?MT[Lt>gR"K'H2W%!8F4BF!o<cpkKkd(-cB<eZrUOa`uaA!4C5*^D]-aK(3VZVgSmh!R(p;jd4QCCfRGli%$E;X:CNT'l\JMl,Q+i'?qkJE-l-o79VYeq<XHQ-^!We5mI,EU5ehccQh*th$Rk9ABqsEWG.4c-g,p?pGN0dt%ET?(/LbrW!JgE&[%`%/&n4o=lbq]&ttmFT-`QY2it)`I05B?tp-orXR0:9EtqPCW4O$!s8aT4,4HVtA[3g^_%EAFO(/BVg%:eTn-rnG9e6XZa$o;i(D#%/:4AbS?d10[Dg;9V1PsrZf/`mh%]d4ElQ8DKq/!_mWB1NLO^A(AEhQBPb&1GR%2?7beuF;ZZAfid^R6QHR3=ka1PpT%suL:5F")'%o9t5[8h"8"nTn.4)9\N^%-AaJca?[0;2@BWp\p!f1so)4H[<?a3`%B('sY`i/bl6,;;VkDecFlA$i[\0qkMMkjS[?MeL386j9\S0%+V11h)>NC[>`D7pakI1t!(A0D_(R&@Z$C@Z&gP6RO2>AT6g=F*!&Ub'n;5#<%ZjEC_:ZA*30]K;]_6D'.#mdLo>JP&Y^gm]1GSt0%P<:r6UPqkU7i@`MVlAKAMY]WG(b&GF-C?dVPXbIZGB7]N+DI(Ur.pBm>>+tVFQ@.FSk'u@D1%dHHn7*Qj;$nSQ5n+;5HVp57epl[%TBqbp+!T7#;Sl;lK;@6"ODOs9[4rk8>)>>]C+brZ>eb<YOP"60UP]SMMIJ#N]"o&2#QTS@K(B>Np;cuYRQ];4fFHu`Lo6$+\P0:V%h[i.BdJSV7['kQ6[!9&TjbbE=+N:tF"WN*oH.1XUUP*Fgk9!f"F=oKr^oshd`/Tj)O4necpqQ;Z@oaK<!l!t$dgU'ZPQ)ZnhBXWt%)j5TAF1(_h\_N5mU.abBbPh-6[#eIiSjVU:1W'7;9=H'f^D74'#</];aAT<]<*r[3SU2XE+HO[YVljVb?F,X3Vc:D.r\6&.CFH`5%#02t'5c-B;]F(Q&nZ,7C'eu/(9uOJN,'pm@]+6+R8F:%TX@unP/:-"GnFSWJ^]0E&:FPg69qSk88#`i8h?t$3/N,X^S19rW6_jIa%Sp2l0`kPfIM;:HhI+a4`?X>p'am`jt&ZT>Dk2eI%?-;VhEkV(XTbdu(jb3Br;.uicPQhJ+XL,ZQT`]H!(F6/#GVINJ3B4]J,A.=]%*Ltl6YuJSfCb2@\&!T\$PeUKRdF;\-5>m>&^'F=ogJ%<ar(Q?!qQBCslb*_'eY@._`;Y`WB>!7$]$gCulC80,q4c<2Z<gUV486;a%$t"Mc@P=.5eD4$b,l03fjP8DBAjTY#Q4hc6UU:[Or[-Muk'#WMBhW>8r9<p8\82r,dmk5O@-k*Y`u,aHEMfHrOWu0`an_+7"L^*\%rd$M(NJoS!CfZU;g[EN>/?Y1ZCpB5`e+-nY47hHWnMU3*ErHX'iYP&4q>q+p5&7%TnFZ#O/"^]"RAl+#Vs<F9V()c:h4E,JnG?_&%(iJ5DZh=4:.^8jCUp^5aK]siX1[bQg.#X+$[_G(.YtTGe]UKk&i!\GpNR^Y%BqUpg^fuP/G+L.akO4Tu*Dq'/=ILi&gV[Y[lEsl2%=j(k:GHN>1pG+,:WFI`-dlLHE%WA*+PJa_"XSh`-=)XC3nTEt'nNM=\2N$=$F1Zp$mJRQU4>h-FM'M>?>=eF5oa?->i+e/S=>RD:%T!?kj)Ds1[)k,;S2m\^QLD^2'jmki)189E5a0`=aTCBTT[m-%81jkd":A&5mFp^mIAK0FT'i\D\Pr?RXdmE"B(9-=fXjm3j@lngU%&t`O5a3PY8r4KM<-s8V,k:[`'4,Ma!Ds;PA-T34F9o8&:h@WY#og4'%If5]t4g/>Q:TN(S>+fB+(\BJoIRC3pqM!A);p.)q%A'UH%mN@q?Iq6SJrhAR0'b-9gM*UFYldoV#g&36@XYMhU=GYcQ&(:>6X<Nq>Z%#lt<Ee7b2SR.u>]!omaCTR-V/o=P,+D/=9>K8J+mNg[%=fjm6=-];!N`S!\j=(2:BC-i/=?X<9+7`3gd5tb823RgW4>-IBX7"^_pfp!!"Z^h>(is"L0/"ibNR8`#I.eTR&lcLr^4JosFO*E$%\&8sG<kb#P4F2:)b[_/':+_bba,Tu'^$)#;qn$n=3YBR?'Ecp&C45DW5.B9]gh!#!lX]j&l1d,aH6+_U8%0R.k+,LuiD`5MP`:s`%mTjf=PDrL-!Um[M(9fDC=Yf*1cd/-sSn@/(E]&q[VWlAXkOo[$Ma;BY15XWH4'7.pZW<PWX%sS^L*1frcc;AsNP_/,pJG/NVp&Z9%Ec*T#7kTCV?R'qp/=^=Bo42=kMhQtlHag\k#l)f4qS`\X[G#A*iT'tO\n.fk$FuXsV+GtN_0"[P&"U?0mnbX'`*mrYBFJISqA=R7%.#*/`e\g"H7XhmhbJ5np/:HXp*k#:*V$4ebP9/kM(!ZFqQ5nCcm]ja7\$LkCbH3MRTY6Shkk8UAEX.Hma!iDsob#=W'epp>!l!sJ%G0C(0,[l,hF1tNHfNHNXMb]?8.j[C)7]:8$grVHdjr?'lq^C:Wh!Ie@,&)'fST<=DW3*;rd;"+p[?g'31N17aqI6Ikn:p.j;ebbu%3Q+e-kEYs^FYH$,;=CWrE"6mfnL!(k+"`1f+llLu9D%Cq^c\j.[2ZE7bmeRd2E#"ghKq;5Seg03-&td3g.?d$FtaZ?40sWWqVeiD%9td.db\aT?[(#UtSrAh=HGdnbI(*'WcOE5=J1$qZ8Zc<!?W1jOpCunV"sibOCl*6;<chUHI\nS=LXNh43pYPFK3!@uD""/`DV&cR%2-Jico6oCN3!%cYRnm>@cA*RsRs].A9:f/sWR\mFYiJW,%f`'jR6j!9[Y"G=qN3[oR2/3*&b.M2=6e>VB.`>I*>ZZ?d4i'$f^J!h%?OG`ef4/mL$a@X?O%ekQe+mf7-Sl=LhJY4=CMXTqS/m;Om<g3]47>J?B@L+Y'tE"JGi"Gr,5\@rm,K3ilh$?NY-@Ui%+^'0q&7/a%VX$RW[Ujkn4q@_L_L%MT($;[V)M[Lhf5o]9d41q/*g[o+o&X`G-b>&-lrL9n\@b<bELj/55@UlON0!j,CM>Nc3k_pOaGRF`dRPiu%6(,FZSm(%<cA'rF:4hD&AS!.M2u:_,I.P5#Vk(d*$+^I%4pmtpUQ5TMHt#L4.2:P4ZI=Pj'?SnjI\iLb6<]m"'L2m^a6?@1p;u4P%-m8>6GDq2N?kK[lj)t#;DF#O2T9"YLh^5JU?S(^ZZhLp1MubKgo6/hA[gFKj;U7hHI+*_Z17-_ZIVAB8%]4>QRaUn(W_".tP[23d%p29UkdXdeWOD0U%*0h.O>F"5LLKGIh[l@YfeCJu_>Xk.n#<OXbdqj3"a%Q3R62Mu.@]V59ZY1XH0#'q993'alRAG>:=X/@K.1UCA%7irJ:.D67?^4Z2IUWhoE1].8'R7ONCG>EG&PDtWodioOLCUMak4I#5O*3tKb>\GYj2uo#1:O]-X5GqVqb/]PYiZQ%W`$@J!i?c^m%"'C<TF"hb\q<c7)WV'jH(='b:#<a#5F^]3FMteNDR.m1`5hYM]H@^F=$#M5b`,;eG3F$:BY-+gY<hgA#RO]A*,]BQuokQbYDYFCG%&YHkH^R)ISZAVb5Xh$RNJm"_c_BWuJZrA*W<N_@.b@0+Ql+Vm=!kI(?PL9s%H6$Lt2QZVnnW%-PSYb+6kS_/46>","R!/c1p0")N%H3FsH)kL-F[pOH?MI)*J-jcsX%`!Ut9ZTcU&(5+6.F?9(;L?VIoB"rT;qaqkB.t@eA**s2W*R[#n!+6p]Qgr.`E%.0>JI5_:aM^*%8ZeUeO1G5fobi8NHMkUe6>8WU>'mc0Uf3f%%<M??$srr,*F`ogRm([M=+M"h(L4OHojcT0\c"\W!A+%_2Ue5X;Y;Jjj'-O&1i*8#%FsHbHn<rt2iI->sIOsTS$<m9SX;B%%(4GZ44/RA^-S%F4=%1*uI!d.bAo`!Z!EaWgMR,ofIChT8QjD4ZPtLk"eLW9mB:9-M^3tEV%h$1P$1-mQhU)ZAV:1E2X@9CS!*t)$e-/-Q*p*Xu%K9F_RD'a0*MSE7e[pNJ=^2FBV/3H.c/W,(pM3"Y".+q6a?6=qF^mca^[?KS5%[o_hc$ZR6/c?i@#'k,t$X-&\ob4tc>!`[e8Vi>i3c8*l_-"1@#f$AD1NKs)2o$)V1m4RiO`VIMUl8L'c;#HEt;>FK=P,V+mX4R:j%gqJ3M5tRFg9V'BmGc9K$Q**/d\X!(s[#k#CNVqgZr;ms6iar8_1VYo\HW(u_=L]a$BOdZK(Li$):;4q^:?EZ7CP_]P8c3Wgq?5gW%6"'f<H1!S_\8bk3p6CmKBts2Jr0fgqop;PMr+!LK[/m]*,*Z0pCihe3cI0_dbNesom\+VV)_s7B%[H\uF'94`5\1NZ==;dJWfkHj%2R?Ip+l=tLmUlocq\_>@I(S/?8Tpm?*dEDDet5_:jZMu7IM(.(GjJX.*Hip^YgshX>E??FFC]'lkH^O04hiSHgKTg#_Xlc>M+cek%[hl"]+m/_$rMR]Dh4pN>^3Y4t!ct=V<0@NaVYnE)nVV$e$jO3PGO#"hm)(Id3amDU]Vg#R+R[(WM_Dst3q)7TRl`n%@_Oqe?0(J:%][s2*E41C)q;c&^]NuX%O8n[GJ$s@hTOEk`=."A;0@q`Ql+^Nqq<PA-C#n@ps1k],h3l'.l"DiXI@MfMJc#]]H(+X-pP85H-U+cj%/,_7C]VMWH#Pe.SYo`,'?_t*DkFqX.^)2XpO6$bZ]BsW[L]\ZARLT32c,B>e1kS;?Y.N'H[*lY(T:Ohck(acLr0cLOpSC1K]KU/F%ZqHBjs1@=FRSS3W-N8BuA)d=>d:[oRh<*e-,rMIib($ScB3S\S2Z>E1^%V.=m;H=2dLR@?g7<7)"Bl6=rUIuOD`f_Emhhl]T&Z:/%cN/MC&p7R#H0C"9TBA'Ya'_N'hFS5!_KY)\iG2f8A*d=30mHO[]q5P]3gl2gqtPcF?$uGqrR1N%<tD'X^NoNWRH(WK+qL5>+1L9;%>VsVN^)a:F3ubol3pj9ZVtg&Uf,EKLdN0h:&3)9=gGOUAr3]eDGk1aD6b[g/]A#FH_ls'#XTnQ,?5FRel0ioCiXbJqC;$.[2oP^k%YE!ZBH6`9UO?a0u9<Vre7tg=Ok3/NV2q+teA^jMJpDPVg^K8r-fpjbMmp)r_g>oJQs2m;#*Oe3RqZ$6HHJ[oc4?It.G.QJp]T`W>%dQaeGD_CGPp#Sbp.l-Qo^hYcA%K2aEO3qU75UYF,nGBheINt]F-=f76^1F3t2iPZPZDF_:B=q+??>SMEafpdQhqRX+]`5?P^7,Bf%f3SEQhCg(/7+E(^rFUaSD1LI@bQ6r];u4>OCg%#-p4hH[>7A:!qBZ6tB7/$U>Z.?+E.+'?6[I5KIeObn7Q_WSg6GS)(QM#2W=aGL%n;$gpI.a5Hs+&s]2DBA1q-l1)68)(qUVTSIg;."Do_PsM*AVqgp"EAI7*^lq/)V)2hSIbrJ&RM+>[^g!VVss_"U!VR5]IK&F87BH%i3.u.^=5OBKmp!?M3s/rkP)GI,c<pF5;;'C=>BVD)hiXn%ajgMHMA5%bL>`nF<s:`(gg,V<_*u%4paHWE3p$"%fZB\7!@&^-E1MA%20hPDNC3%+n2*f/#mlsZ7^T5(WF*?:8$%f'fLibNfERY>K9uP4aXI/dd:j63eoXIBFtg<X-LjO2Z'7_-`=o_X7pl/fl1umVMXj=V%+YEb)\"0Q4Qh\ucl&95LA;52BY)QjpRpfM./!MmgS]-B7U.plRI_rr0/Q&W],[m0POsK?eI[t`KPbQrKFFP)R$4nPfW\9]ulCU9c%6])cPVa%emE7%Ha[h[-+(Q/oi>484=k\mR$^N29Ug@QTY.+@ags8C8^D+5_3r6RO^b</422E.bnb0c6Y<[^C`)k"%d_/.M&4,cRR%=%6`WhDn<4*i0'IUMt2PQ[<g1X;C$.Mqu/IqC<284m+#OV1k=.A8uO".dB(6r6\lfs1p)q1Y"S?Aaj-2LOYnn`PZI)5"&3)T,Di7%PH&L65P'$qhFV!:I)Os\_?0\(IkL3XiLaoXB?"uD[d_TfM0sbV?H#.PoOll@Z+BF5E<^-\VqpCB)LREZi1K12dHuWuH5Sn"+k"U!%G4ba[JksRFpiJ^Skb#':T>[[l9:dL,n0,X3gHr@&qnPELnBXN%H1PMX5Et(JccMRIQQH)sF7Fc:m^.T7$ea7O`aAY0GO,'kF(;)O%Sf=Pj<cMosb,ckKe)qhOBHa!N1-sKL&,DR&eN80A.@T!5>)spa&uIN$-/lnnZ]VhegU.O8gt^_cnU/GRs8$NF44d,F^=RVkkD>[4%1ET2!<pHg3\CS]"'`THoU[g$P8pO(u[h9PSG-2(ER@QW(a.EVC:BPhPVR`r2#iPH3`gp7$m2S:*2nPsg[t:\-F)n_N>5*eD[[jt>%4\_PL[cTCAQ!#(%=\QPY4N;H3mi2)ucLoV/k+4eMhH)5NWK3N<-=f^LeK_:SU`5bOAcDWQh<MW_$gWN&,L6&,pknLbC-6uBA@Tl2%iq['BOBZeDnm?mK]^P5XigYRl:_IO3Xm/'Ob$Z\K>5+LXC]o[oD68nn1Cu)6[C@elGO/dtRtJ-)rm"C?`E41YpMXYZTZOZf-K1NN%dI,4XPkJ`F9dfcmdOt57E-]Ztm(pc^:AScDWQ-f?ZaQE:]`c'DqkCN:'),EZF)\?DY#;7B^W;00MTj(B+u6c.DFJ.e4)^6Pm`Ga'%m:@N)Xh=c+3MU[2>C)Zn`"&t8,"nun'%o8/'en-p?$sH&AdaM;fD(82-(=@'5PFC%<sc8$aF%N1ra@Z>]::sAbaJ!f86!CQS_lDI%_"JRFNU=gH<q@pVbF`o$9D`MH8Gm!F'3W%s]Sn-(o5BcP9-P-SH#7@cN7RMjK_7bk@a,DF,1c788"BDJ]a.u:I>eI*e;Li9""W@G%m%)5_7H?2/<\B#Z+rg,T,-nbiG8/`Agj"gSg+4;eX=iTYft5q88:J93(F^>RU`qnJmX8X?W&ksO:CP^7@O_-f3S]M4,00;&2feJP%DFDcn&+%AkEIAG0*59ZcXuji&aR.GG*CdTS^(?FIPNI;Sq:o,5]Nh&"74QpF\O`j.=cCilV*X0jhUm[l<c:/GSYP7hjJ.+q&K*-h%4#<#TdVrg,RlQk(ccj\\/Cq!XB&_Jq@j]Ta50k&NV6q2!*OM]<1X=b?hMcfkYW/ttg:j34>UZ`#Uj=sA1YMWhfhC@Ehk&MLfPSnJ%mrse(N[b;-b\?[E4``?f4J0/=JBiSS3A^8K(3u?oBu.lu[9[jNE<-2GZe^D)m]jA3UC7njq!?4-Df0aThQ"oA)D>0uM)2k%bH)Y,%esX#,ZYlhnT3ZqQX3IM:hem(JLO2Ot4(h#k[WqJZ0me:t@aCX\D'W_3An)4T%pjHl[WGd>buS2t>-i/0rnCCo[XFUHch?PNYB)Ki%>ID"qjm;;<r,K>4B<:L8brLoEespsaoJ*hchi5ikF)59&a%@`A%cUR8h!&j/A*thW\ik8PEd9cK>+N?rWu^QYkMDj._n#2C3uO$Z%%6(/YdJ<+G@Pg9epJVPpm3j'Pj3dP;q9<TmW1?AdlR2Ah_>ZnTH7"fSkfq?03r7KVs+j_4)EdlioR%YGf#k,j8>TkC0>(@]k*,D=%m^t,`f&g%pg"h%UO^=Q8c>W<trV;*3p\+O\r:7l*mE,(FI*$'So<20WDSD[R9$Rq\Z)`TSr`*DN;-g_=YV.)]$Yq,*pC!DfNkMZD%FB2O(^>I^L\8!R<(ESA)K7t5YM(c5n]2&fepXBuR^P0plaC;I;>q^5ZY:a_*\V%kK@I8C2!5.=NH2DE,nc$7%?EEL9Mi5i=_&!?E%rL);)VHT"^AE1]b;(QV)[N>=ff_.h<+$363=(9d.frNbH-aFh0CnANmZ&bdJ/4FV%nYP=Eh<Yc(aF,UVmF^l#44[YZl"%M,>.Wrt%+.$<&V>I+``l$W\T_!7AO2YEIihkIUMQcEk]Ynm;7P0)!S86-J%^(0KdS)kDIlhV5n\NGKR#3LL50[]*c,/o-np7$O\")n')TtY4%rp94#_m-USI^\gjXdAd_`(^(+4ctP<`Y2f=O\V\_5HYXrbuuK7#rtiAq>TY%nX_kF-\eh67P^RG4%Sr<QY&!Qn%pKprQE0\jCN=Z%/m6oCfL\!qg<GnN4_oHlEI.Jei`9Z^Q0`JQETLkV@'/3jlohM%+Z_+qa,_mniaR5iYV'PFN@h&-0_P^kZc;*Bm`Kc7J`Nj@j0In:%@W<m?fO8TMD4JT1Cq!ppY`"MqfaGuH=F96+dYrW3d\aR[&2uO0q51]pICq;<Q]g*8V0XK4O5fMX(!E/U+[M,O>?U.b_E&I#4mTqR%93H2P=4a%S3\mS,p<"Ks[l;mW]Y/M&T<YSdjp$#%B!-(HXgu.ZIpX*RhNaIJ[^4YcF0Ta"F39>@_tdD@&q"CBZc-5D]Yb,FPr!l<%HM59aRYso>iSD_9V0e[>030Me4PP>?^D<0*k.@Sa3_Q2S_:WdIFQK[olu_(^CrUX:2qJPq`d[3tRlsB3Slsl6p+l6+?10%G?h^.m%F0ONWp#X`#`m)WjC1/Fj5&4q\oqkp]Xu=QaE`:An\c$,Qc-C2CeoJ<Trn;YcTt".6g07YuP`2Yc@r^(&:M&E%lc8\hmX!!gO0*o]%DP&j#>;t5pc)"$Kj02K9D`h=Nm;I+@*,BV@Hb[&#OaDB+4PX;th0cds!:=]J)r:=l6mDNB[<^DOfK/:5O1.`8jkNn?>OkZB8)#Pn%['1<DB8b/.WmZ4^VB_-4mqJhEf1>'T2m;JHf;i*OD4sqT/?HV$A\=48/$n+jHC;gtp2$V\/'"Q^g#V+TPtdaec0X+kYa;K*CgZ>e%Y(r:43'-Ehp5Y<Xgr!,TSa/H]SE3i72]MRO]+iFqgdffg`_u-"Y]09d0<D;*]u"4NrM&e%2!AjJ<b!*':;VG7hMiPm.,,9[o"k#i%4P&7A]`%1lm^W#*F'[+1m^/:KYIi!@qjY4^=R9o!ii\g-IIjmoHa08i\@5V3NUNF/f,s_OQds@Z`M:'Erl4?cjZ_0J*r*puTXa4Z%DMfB/AnEMr4Bk?0($h31D[/!4\NJM\A?lI'(Cfuo/[H3QN/Q<a@@HBJ%^2DU_o((%II8M/:fog%4W<J1h99j6kTg,AE,=)uZcB[^%pVZ$h_;jH!nk^9s\:r5PacX%LSVj#gi]MCq\8lDUDHUo;o[7$u3c,mDm%(7Xk:b,h=&*,J*fjddo>o.(r7jHm>!G5X>s(/t*RnCJ%QHGQ#(R_o6eVi1geB(/JI-pm\H/)eo#PH>obM%@Cm4+D^Z_sO!l.=Y.eZBd]\a%^'o@JBQiU-Ii^:8@bqL28TM*K=CS(tp#bK[qq%l/"m%NS<c7]sr33^:`11D<59H4'(Z#h<eFMO*?l0Qd,E[7QGL]NAb\CmpEYq&!;Y.r)E;sm;Va[iSrq"ps;$>MFY:sB-30Y\$a82%=Lr`L?<lQ`Fr-Qk.UUffcS9cjpmc3-pZKT/6+Jh]qf6&t8mPbgDH"SgV;^k4aiiE&naXe6jmr2C\+F]EFq4hE;pk/=TA>boqn&[3%?[dF(S<T">V0.&"X4hoT;a'!IbuC1c[F:SPo22Y2?!RtVn$SDQC73Z@ld=D`e*D@q'<,1`mBuf\9'`e>I.-_Hp3gbZEH8=1f4Z6A%+o?ZIa5u-dZho"5Xo#]Ana=X\/+8h8[!;&SF\C!Pr/'1@)7"!mk.7tR9!+_n>*!9(YJ%1(/[Y*Wm(Qb30fD)9,!"lRm9!G\qTJ#I%f//M"]>nP[ceV>YZ8WNsE1]([O/q*b9J9j$X1_L'iNi3b,e!TTB[%JVg(55dOKITjq$)c1_/BNO69P_V]]\@&Mb<AW^!f(2";cKk%0/*/_$Z@,nnAskM:\TQk-BlDsKWNlt3">=$N*a5Z\7sa.997jNrL9GH`(.T<Xj6DqP3Hng0I)g#DD5S\jM%5E-e*u.rHX:mln<"m%&U/gL=nnn"gR[9S2l7O2g?6;a%teZna3V)nq7k'7qJ3`@r%VQkT.BP,bd>hU`MVbsj3Mi-^VZJ[T5-CUVp;1\KGIpl(?Ngm2;b@[%3mD-_`V(#E,fO0.cX'oDk,)4X5<\]CO3+e>4McXdqFWbUqe=3?:;_S5IngH(WH8q?+5sDej0,V4oY]]9_k-p)RZ+kM8\YE=+GYF3%?3jL/fK9$g\Y8-feG]c(m(nH9!<"q&N9PuZ]*DiWJg6g]dI.dkTCutnktf8IR^N(As.I--I50t.ra+Ass&!Mh_E[!^C94Rinckra%CU4?inTme%!`).aXr>IHIXE^$l%-+]LY-Me)BI!@lPiS=iNra-hd9ZsrY<HPV:kbu[b0J'2ZFM8XM6QC0t*OkOmuLVs(pngir?0u%I]\7Ma*s+I)ZOIBN6`?\DS(Ha*H3bbiJjE):3G^(Y@LPMj#o@#[d$p=?Nh85r^cE[*S1%Tg.pi[_OCD2f_D4f<\L-XTZAdoZqDKd%E_MFcB6Ho79!d4jBiL.dKY5q@H&q:6'VA]j9j_7Y2d72pDc7-?3@=!4a]G$n"4L3,VuE3l%@6Vpf:5SigGG+KiO[sD/-/MkZGSrN%[ZZX[NZ2BM9JXYsVC`J.%$q"=o$!n;J6/<t4csj6MZQj[8]CbZF?)Hm+@XI3PI:K6__C#c[NHK!VZJ8:3j)tD57@Q5T(Hh/Z%GMS%0FBaad^1,/,'K=Slu7S)\H/>F;oH-FI4$"9,T5do1cZ%>,oe(k(.?Y;#T?U4Z7RlsR66GI0e=05VW:G*Xp)\I4?9(p\N$5a*t?,m%'k<9.VB%"H*(H7LF,2=I6r,R"jhj>'G*:T&NoC<UL(FPeK+FK*DR`9][#plLFA9e$Qj9>eK"qZpp0:K569U[q_^oMhSu#i3#!rfI%E.F7Kkh$<RZ#'M,#=gZm(YCH&7OaFi%J!"g#=!M7Zu%$:0l</ea(tg_,^2rh'hRA7D:kM-9/m(FP-ueBJXC)\A6(8'9SP;jW52/+%)4Sfc&2oIK&gjB,l'`Y+["++q&k1qJo_(8Dc:B]X85,BqmNU@-8(Y+:fVBnJIWju[&qaG&?(eK#rO==.pr!5qA\2Uf0G"Y_[((ZF%#[\GrN5LcLK9Hb===aZ?KR]2aD:A(c)Q_(8aIka85-+tWo,9'<5X>I;"ZhrZ(o1t#5VpJ'0k6<N>mFE)A^QBSPK^EOW<%sJ_a?C@%e$ZQu5D_nJ5e*I5cSW<I9NZN^FAjV#1^AoWYtZ,UPmtrLV^tRj^!Lpf=WV+(?r;ph@PXcKg%_rYk2obe)7Tba%-\SE^l/E4d'.=c%1dXpQD.S]mblqNBl:.Q$T&^'qE#b(5#.+$M[@r:!ET5"AOhaSN`b\#:a!?n5\`-M+3=,aQ?s2CrCg9f>75-E6iR&8roP-6He34/K%(]Zo5/V'Pk9h6pSpl`0G;`5gb,.?EsR@;iq/2D)SSV,rPPJ]fhd\hemmIIURU00-T5hpkmolKIrd3JC0K80\qPb&TO9?FMjAHJ`o%"FZ([ZoI09i2_OuKV@<FHq[V_ANg0:,[PXD"9fSbSR-:=b.q]#M9l(Z0Q<80)</_mA]*=#clt_@1K^#tTUt<MQti-F9QPkDIAkJ?%E>5G8)&gP^a!>qFLZDV^\bNK(g^n%(efcFtrL&?f9SS9M]T>,Vr-5*&jP[pGeE[4Sg@^#JE]hePpE2pJL-uAa<p7n:*!+ct/=`qN%"ZQM!$TRZB@BKCAYYomWTG)g20Sfu+4C8;ISo,Ank8'$7$XeSY4tG)l^0h&Fq7s3a"o"o.4?a>oHMm)/Ikg&Ek)Oq<og<bQm[%1T%AUkV&89J*7i!sVF+j;XILesBOY)Gdf%,TM*;-D>#i]73o#VXRJ$jKO?A%Zatd0uZj@2"#O4:dP_Jj$ut$ZZnp\kM5j$"e^I6P,nQ%eTN*8(lZ6IF)2)$EE&?4)&B_m&$o>m@<A23!r*mCLdXLY^bRSTfRb7lcni09iW'+7XG&*r"5+\iMaN6=0[WP'0J.As0Ir1O"C4Cs%<Jh$k9["b2K1`ZCV/%6L0JchK*!UU1o\3cZa:\[f?l=QIn<CHbbYia"TGiAZ%Y5`\10_$D6TH8-giJ=E!/f_P-A7"58]WS6=oh22%65`H$p]dM6E!9C2__%#`KIL>5)!W6E`Q/330rU1Gj1qYqAYO]?!<tp)q(R15Z5ZSI\f&B'</iY&%X-pEOM.$C$c+=O'Ia4H)N]B2%IPL"1."k+n\3TX^-Gq"f$d_N`UaM-+Vh"o4.4,I!g9;(j^+>Hh`Y?V5V'o#o(b>Y/"9^<2`JN]0TKj+\D(oQ\r4$;t)UfcT$kiY9%+3NPV)l=lpqG::e5SkJs9[/<L8JWeQNH2BkKeOYT$QKCN8?&q0_'=ts.2=B=0Q%,f#&bo/aX)I9b_R6hTdWH=[Kd*FQ^&XYD$@6\%(<:0B+IL>CR"pS3@5d7WW%.s1`:Oc\0GtD>-a7QV@))fLU#H.)0qlWu#LbU[/K$\\[a$k$,:5cc*GB$BR3>@[q:Xu,"Wt!)+%@Ra%#r/TI&14kop-MX[`s!]/Nfd\qa?YGHc3DT%"2Au?7rEtT"$`X_^:As>.U!s^4?SUC#:^RT/$+6HU\kjI<tfhsqSe#+',,T*"@id@%+Up]Bku\(0Z'*$?K8Hg$hFG)s,1Rq-#T:;^KeAZiPRBgpmi(sTMB3-q:d0+Ir7sAX)I,#H&-C,5`6a52\:Fk$\Q"7['@o=2ppQ9F%+99=ilcm97EFjK-POQ]C0]kA4Y$cXEML<]Hnc29i8V.KsUZF+p*mJ`AF9)S$^b";1iF=X(Z\2.*lO@ru%d,ZAXM</P\etH,L([%m%!=tG$\MI2r9WA>g+H^b?oS/0X]`bEK'<VQuk<[c&0EZ,(3V3a@L/H:u'gj0?NZ?+Ge-W]Rd$Xu5Jg(VL7[,tMp.VtW_k^0;J5ELS%</N@dAIJq0U1%K@%L!,mFft&)6ajCd`E"fdcF-5o6?t9G.ffH$Z8_pZUF?HtBirqW0V0,jF_29]31q;1oH4>@i/u@t0K98kjN@14%$lKW#W9+2TL%UhkP!=u_$5p]hH+?g@i5GktaH"LlC*@$XOi<RdZf[:+,3Cj^C(qLmE*uKVaO$>aqZg(/aq0s'8skIlM1B7G#][*;%JIi$^R=`i-"I"QNiEiW9(DaC@@+5aL;cjlm_;8E&6Q#ZR$SDEDJR)`N_ULU]d]"KsE*fu,M!2#Z-4VZ9=_tH2YX[)2<Oj59(YjU!%?m'.b\$/U9.9'Kt*;aZ]SuC6D0O/jo.2STLWX'=N&*+Ab0R[+eEYUBcgl48$apGj,b#fEKH<aMu/r0WW*4A:&Jg!5qfuFZJ>UH!Z%8-E%irYX5E3)>+b(RC"7kf*UW8Xk@'(i]&OJlSC=@(csi%TEf$)LWsPGKdY6$%hGVV#o\CK/jn5!GI5_0RT[j$pk:H!na9!OrC4Y%\`g1^V47So3"O]PKReYgK&Oe8a]-A&p8l&"j2R==ko:VBD+t9W<[`3[&F;P<Jn]ie?"+Ec<8c[_eHP7R175n&.dB=j":!i+kQ0fH%R^<N/dM,,AT\sNX$[e7M@AD?R+3Cc^JC,.(Oc,!^&1DPbDjW:\KD32I%7A3V1$p07NK9O\_Nc$]FcO<9]YVT5)1uT.VDAY'AV+_D%aCY9cHm187;$K:)Kj\i-9Yr?IZ9!fX*gmnCia@5b?A0ZTOR<cDU(C0M;oDfp<#=2B$q8h<plnXeTo9Uq.P9)hj;<(\>WWE6%BOYF%Ag,m?kiFf_+:T410\Q+Qf:g/+aMn=kMuFd'Rh<[]c7&joT6-.(D1QK@dr&A.0*ZN58&<jIN/&:($S$dc$-<e"`Ya"2YQ;SfP@1ib%(s'=))_/^5;$"rT?(s]s13OF,bi_)f._&8>&2JgTjqOm+FNOeA+q/SNfUma6S15B&0<Q*`]<DHtcI\569PHF4?I\+KL?aAE_M[\C%GbZrue7C!3T^V/Jls>*C]UBlie6itI*)K[/WmGpGBnR13aX$A@%LJiG$Gs,:ImYgq-,g^_p^BHmHV>ob)?Iaj&7:([q/M33#"o3*%8QYM8<O68hR^_Vt7Ri`t_IoLH$%\s?!,gP))iXb!7=uN"^c[saJQ*GQj#2i9#DR1k_ugfLHO*TD@:"SI6E3f!+U17Y_l4#KU"lHp%Y)=_JnUZZ7:0A%O)j[uV.!QAkHFYpNQiX)*Z-nnsG[+`lVhbLW86Cs:;3r4]jB/EYGn0YDN0h&E@.ps-!>C5Fc5hH>qa^`Ee929%%*F.-V8CJua/_<"IigdLZs6n(#+"E1^h.,1UEcU:&YpF2GHkNsb@bJ7Gj$J:'"][W,;^h'R'*eBK:$rA%SrN\ZM"d!@:riVhW,bD;%::U\uE^8T9SR0C9/F!LN+_3sER"iYFO=G<SWF.FiU`l2d2O0#]BqN8L4?%ckHao#[L_Nm]/d2bGUa<o4L.)t&;2:MliuSGY2U+IP%E*-7'BKU=,/p\^r"ZiO<,S$dDVO>4&MB"J\%C[2la0QNa,1.;G"i1e&IW/3!$D8#0I`^2?#S_*9"MjO#8/M]hF):Tl60+>gM[S.&%gt3[sgRK=[@M7?P4NcB_m%bV^;0/>!L.sZLjp3(57TP:+ITTC>!)YQgm@5BMK&nZ)-+Dh=L?/qr/=U?1:m5Wb_/LHt5Z3f"kn8qK%Wu6d\%oR\L39_%q/B:WafNj$c7;ElP$Z.;#d1;*N$H@'760/N=P;(dN&^k'kBuHj'^etZk4keb6/E.T7ah_gh:c29SKSNH7e=X`D%5tEhdJhdk<&P?]W_k^(^o[q%)-4HZ?dLh$#J4PV<NcraYQ/sJJaT'r'HXd6947p"T%8%;>-X/Vi"[G;mKUR\:8MV8%%>bf>/8ZW,%"M#m;#DUM-=Z$O*,-n2@YVpHu%2/sa5sQPN[_]32@\^t3(ck:0P_giV4"!],h)'85+G$<\`$fE;Wm\gLTdqM8+Qqi-)'[]^B@?!+%/FZB<=NH,o,.4-6TfjiZN<N&h"1R'QCqDuRQ8I-X/loO(,6hK#PIpMOQ8&l&@=dkUTHW21!]mjV3Nbpj`AC;WTQ,bi`/SV3;i-AK%@KsA4$\1>\E\\:b:3/4q??U"')#$6d#jCZk(0h8=\0=1?N.<ThgsJHNg+F_Tf`(tO:WXY8LTMI+.bU+VRK46mc6-1WCGQMD5bEEO%e%QJ/G/GG3)G<oi^^cKIW1cKfdYP9PMfWr%=+iP#oC/]%,5/8DN>\UK%31f`e48`e$0ZY\mcZd<!.biC/!+//5`AT("F8XpJ]MA"%#=6Lp2Rkb9.*SJYg&d#l\GQNL.aeYkDZb'4*7Nhsni0'@Rtig?!X2mh!/A1)(lGF_#LWg\<VTa8`k&Zm5>;<nkK'c7+jY!j7Ub6k%N(b8qG,*FB"Bq-X4`^n^0IKu@#]jid&s/l-lnfjkU,>)lI=@A27o6[G*$+/iQ44+UalNgE(L%3MZuBE>[Xcc/e'S>d+84>LR8T.X%JV"&R\`$89cocE=(C&VL])a$V"uU[?b?PhQU!1deAk19J+&"\p^cmN:638Y=d'PYcfEb<,kk\[EK5bT')+)WVL-%cn?m=)jCcm.>%R,"hE,PN`Z6/ZZh`O'.[MAt2+*s8P8fnZ6Xnc]:K1o[JM'j.B[@>Gs/F)';L4*"kc&Z!_o)bZf[IEHLLTt/4df4HdA\57T_.&S[Y%<.tHBLZcaC&=or&&nh:`_DHkSbT&=MTn8h-Bd#hoD@;!07si8t0U!k`^cDXF0B<9AP4"lu,f`jj^8]Ce=gB,E8\RPb%<H4X%mV*r%i/Y)H'0RhBd',W,8#FW[D(oBsPAsfuO0GUW(']I*BHJ-fTEChhma4uag@A&P\=;ReK+g$F2lOg;isi@UJ5n$9+D*AO0&RV2()OS]%FNV^7QpTiT(/Jcj0U%N9@A`%Gc/ILZ`re71engr:b,k[T'33'Q/<85QYa3>-^n"sW%O4:A>:m5DNB&g4%LupYT5nU(PXE(,%:NCA%P<6)KUI\85A]qG$LD5bbTY\*2m94b%AjDoH<Lp*9@,M6HM&dV>-YcM\!7M+,:#6inJeJ<k#Wd/m,rXQ'@@RfCfNPkX91^ruG8Lj)%!=V8<l*RT[TMQ9g"%SO<&/5q?#>1m[W4<&nUc,B3)ag2:1,0B*WJc>>@cW2]Cck[)Jpoi;c-UnX>L@-HnrO\h5dj$MmgogDO+q,H%9B,N<qn`g[[cS,*)4O)/VQK\^OJBt2*&iRWQ^X;/:!5@3pR,i!kt\fACb,so\M.YS?+F2\>OLiTc>:W#(183Oia<!b\=QNb*TX^c%l$rpekW##`)\Z?,iGg0J/OsB1%N6q]d@a()nk[KrPf7Xc<']/BKB+)jP>'R_>[oW+L8d!j"Ak\ONiLd(p2f1LRf&iPkXG;=0^8T\%#FASl"Q35LBGOVe14;T(aCXXqFeaZ&gL,#e7t-B_(;rp*J3@I)Bo$%t8BA$pZEV+hmuGXcm-?GYC`M]s4P;=+r7/T_R2hQ+aV,3o%;]Y,70n6#(CD[i4?SupNJ+\BBDLf]`UKH$:^b.%+m3HQXWakS7JjXri@[l?QF`:t#O-nqnKStj%pRYer1FWME=0IVLddq"5ecR?t%,)Y6-);#\%F/7;+VU,X0`3<e&PsEACS+d]p.5(3e>Ag-=BGXe)-*Ts'k.1s[PeoJG9_heTp%a:1`$ZVOF7aEbI],um`YJf!L$-QK%!]&"(hFZRaLQ+rq,HN?b&"((_hRLdD%Cm(-+A4Bl@Q$ac5rNjl&Hm8F>pqg*5TOZ'*.UI'7VE3n;Uj>@_lg[eaF4Pt`'ij/TV7D]%.+N=9.B)RslSj?IP?.o,c!>`?`'gQ?0_;.']+1AQp9S^>`&8$laJ!`T8Lcu&Q?$fOGKhS+&pQ*o*&g,'C%]??)O%-W(]5-u(mohI%?SR/C3'@<!QO-<]Whs4ILLCe:S,nO>b_G@i0(FQ5;hgec`b<s4Q8'-sQ99Bg))@YoL;53P6.mcjj(We!pN,n?Ll'6S+[X:$Ss>O#%^J=oP(bdI(1=c^b6oP+h$0[n$j:?9D2;6$f9ZhDb=l?@37nY4Z\cJK7-2HrYECa1e,ADEo@$@i[OWE]?16q-a1Pj7b-[W3h9j+r\%VZGm;Y2XL27o.pX#)@0r-V+"\,V/pT3l_KK"5V<I>g.e*=0Z8fFPu&l"P6P>.r>f#PdRH%MBNX`lkCKs(5ArAeEFe.N%8H%K9"]=%o<e"#L@&.o^u:kF5)^km<;22.*1_Zs$BArOEITu(Y1Anll8B;@)7GJ8`au@jP^Q^J-5RoC/F$_pM)gFPf[s=QE"gA`Q)ZgDD1VPX%h)1U)TGPXY(uYBA9oto)$A[8*Jo"Wah=.L0,ISG$0XAB&bJFjNSB_.U"f5N,*S+kdIs@JgLEajW,g0,M#+rutkLnc]&M,K$)*#dV%[3QHUI0tj9^Bapg1Go>P!(inc5h4fbT#YBc8JK4ccK^\SU3un-k]I!L(MBU@`K3JIGC>R,>NSIY^(DIo;`""qbR"Em8(Nj/KPWk^%ierOC3O7a>(PHX7,)%`H3Wm373Yc/b3u:(\bXj*R[e.?[Qm3<AnA^4n>:EL/%)6;LB$7Q0,1JUt.^WJ)@9Dh-bjf9(i'NTC9u<Dg%EI@,W!Y%c'kW@MDOaJ&%d\="Os%66!<u[8RPdOsmY$iC%emDi\U,Y>[+>4,/0MTHj4NSD27poL4QBXGu<\n#N=>$2E5aXYB7$J-V%nhh;+'#jCGV.j(Wl9iJR<E.)(0`5KMkqg/S5a2s:@j.k,CmQ8<*`r@K;p^B@;2XCD#<G6rCNP;:29D.oqF$]@kKCq:l,c9'lq,(<%nHi^6.G:/C3JlbJcrs>Ea7\Hs\4+LOjBHqU0KKSo0]AKT]mN4)RA0r)n4^%HBG0GQMIT#/D2QH*%dIKDqZTo7d6ScF!/>*;H!C`r%Yj`4$9@D4()0g[$Z8Dr0,/pglV53#[9:-XCR,lB-g=:tIY-_/\hF3P\RnKf4J1`ZPSIQf:/&3G-6&Lsm5/-hMC$`X4E%>+o@8jno%-M\:GXe0R;mtEII14;hk0,EOP)=7t^K_/?00dfg<+$7iCR<3hnOQ'K%/^=bV#2tZOi\$;_m\W#o6:VUcLEYY+Y!rtV6C^;[Ch0Y5%W(9#SkErGENZ^CHBlPb>g5bJDi[HO4\NWNjq^"8.*?JV"$I^d*35Mk^2+OP![6cj,"j)n+Q`;KU&VA+`!XONn\e,-\NMEK4>C;S[%g8`YiVSk<.O8BVS7<*/1YXo_@iMu?s(X8<*9)uh\8OSqSBc*)WE\KNcV-p1b.(5N%Y6h5Q,sg#O.9_nops=R\iBEj4"[coj>8$3O%bJm9qJiq&#(tMLhZ@&F?pF3FI'%-8?_ZgR4'95l7Pk;s#%V/#sDX*)+qi$[e@CY#j+dCYJ79GRGL!K?6N;F.?bZ.mSb6eedKuf4'%+I<5OLCVMM#rH-YdAto?9OCnDS=3iGj($ef":AS?^XDW-!l^MdL]EVf9N1_RVGIuI`X[n7!id"h_u?"`bAr"%`ckpLMC#XS1.USo%'V]!*/$:5W9dDYUE*-5dG4[$g>Hu+GD<7_&Y6=G*4Y_SYEjDQiK:?78-!"NCaoj(i*#UaJPbAV"i$hIJ@FD7[e5N=QP6a^s@#>/3%;Rr="+^aU[R-Rn4.t`ZY;k>V^Y>(W53RH)^#I6+(j$cnDDPQ8c^.p;SMQgml&3QFS+NMpj]:M-9quu(mEoZ1P+,Ygr>`C4PpK@()%kqK;o\s-G%bY_[I)cg4hPRDV!K]t,>Q^EsbNf>(1T21fcb(J\6&OXm:HalY.0Wq<"n0M`L\\=L8F'Q\Kc!;E+828f+lhL*#I2F%b%X?"a<RK1$&,'brSVru4MBbAQF[/N)W,ZC#qq[q%OM#q(rSj+8p1G\49QD3RlMIU.3mD4t5ds!L/9:cRD[<sB6"Se_&U\T"*2-5+/%8qJUZVb]dP6u[Ne?[9N+>o^O+Chti5#jUYZ"8ee_N=e_/]E%(S&nZ4bC$bb0jjU(40O9CSbQ,ZH_#(%78Q9p[=f;;PHaFJ[_X^j8%0QIfM(8_U`,uML,S^;oiajNT$8JF[Mef6]a!);3[MBg0h,V^GfLsT=g]b:OZ4FkObpBBPhC86FX#*-<PgsB6%j#rPK9/+%M(`r$$%jU#\\_rO@SB5=h^Wh8baiZrh[,DU,m\P1>c^pe>0=3S#DJrhY@iDEK[nciZ>#VpfuB]-]SajgO48bC"m%a3!K<0_4>:a!;(F?Y@t%_5,[/n=U'Y@9c\gE$&,s4Jj]X,3C/.@q,blEn)<Hr5s.n:C)N;>#54l9R;6mC(P[GQ=.Rl0Ltnk%5QEd0dfg<*ElW,DB,Sp+#e%J%`ZjWS)Eh.<F"`,bDYYt0M/jbeW_@$B?XZ^(3&\5-ak!GE6*W\\A@mSfVk?cb_E<bP0M`=8r*.KQQnjZt!coR)d@iEfVG8?Y.Uo_T%Z=FhH,?)bi6-OM"O=+aGVQVq=8[@Dj,3ENij!/?"R-I*".:lG[4+QTk-9uRGJ7+[]+EX4[_/.GIg/\UM$d;0Va2XE-d8$"Y-bT]1%P#0o\U:4uC,P:Pklbhr"4ZitN#I5A.anN7k,>KFB2RI'faLB;38%lGb=V<dK0]\XGK"2*W@BQCUe6)m,EQ;$@9uNPiEGTI9P9YaP%WG^T:<*+C#NXnH_?DM#"9,R8kP:>"ERuB@aiqV/WdhMT.[^K,g4-4jCbgZhF?VEqVl"btr6%\n>@!F8]A8<CK"G5Z$CJgMb[%3uK%.[2KPQGn8#fdRu#F7mHoe!3m,mOor6<F#)O&T\T(Z*=BqNi1oK_FN4m(u!C]2=iY(^/0^U0+&fMPCjaEitI`F%=NpiM;Hn+JH@i4%%RPS6D^)V8<6-=#Te\lPr1II>Sg?fB6opqqZfM6V9ZMo,'_OHZWWS-c!'ZGa8.3c8b![;s%=*'%(d`qVU[\YC9GV#02Gt.,/BOr?%cWe7[q+C'VQkLm.NuaOQUDbS'Sk69MR'J`.5T(=#LmG#K-ESPR\"MD<9Z7mfZsE]G:LU9WS7&ce4^mQYZn0a9_A?a)XPrpuZlVts%#/'ZMe9'rt-\;Y[q(UJ-,##npPd(E!\cG*r_srlN.`A*,>SDh%fSUonICjMR@3V*):Q*L]&klUG7PJ%i>J@tE6ud$Zach?=.sagr%,rb`5lM23gl4psc9k_^L+bX>XVamI+)3UoDR$/qI*aA6s)MT$,hCCpk3r4n6=bZoMF\rb530L:W$U'Y!>6#;boF^>aG9lDIoZ3qZ%*a*R&eQ*!j=D)E(\E.HE20&5N@#i!l9\`u%R.+,:7iK><*<Mf*+dd+K5"0:;INCOPG7Fs]cebj9*'>sK+(1Tk:iOnjFp7I_X3,i8%88qXM2%ag@_6K\dL$-6nKGH+][3StRWun!%oE_`2a%)ql&Y,ZYqbG%=R]-U<'<$m$X*$pc&FR\N8!4n*D*UIBZ:ANLiXTD"Z<Lqa%Ae`,C5**YC!N)nO<ATsi\ru(JfR`a0'AldH\afk'!``/8J[D810Lm0L5aVsBo_P)Q#ofmin-.r"MPENDb/;*tXsP])gJhtqL\jo/%S2jpAB)7-g^.g<3cpS_7Vi:u2EdUPZZ65YK_<FN99E!Og$<bQ;Ha<1!:tO'W'm*@d_E:W[<%p[[a]SU"R8=kt_OO/:Ci%@[--opA%h!nXO4PT?o9j91PA$2\$Z%-4sRhK3W="I'6$km_/_==5:-=n*9o+JgU2p<OO&;[`%jgfhnftO^hks7#27uT,pRJI_eP:2HN*B#Cb%oMoZ_6Q;<L(j\;i71-nbDje%F8]m.XBqqtNH&pueR$/qYN@e.$a)SHmcrN_263YtNak[b\aj%;/g3k-+Bkq9_NkFan1?'R*j!+dI%`'Z#7QD05u._4Q1cuYl3+V?%p9=&$[E\J[*e09u!?]ld)k4sg"ZCp*U+G.$I3'O\bPjS8Je9`qF#,CFD7G#9cb[E[^h%1anZ<07m%IF$>CQkLm.Nu]&P*P0U^Br>;.AZ8Eb6>`_pn>Lnm31coR<OnD%`=L)@"M@=U`l?PL@QGbAH)P$>_c.]hToLFqcTG@T+cJK\GG$5]%BoF*rUIggd.?9B>H,<J]$L6oN*KM`G2!#Gi_NG/q'ML2Pe$*Deck^ZB7<8#<EtZI^OYoA?ZSX!UfTIE0<3P@lq2[I*+A?)J6njr/%4InU]+A_Z6^-J2RE,9(0OF/(3^g*d6G_El[;s1Hn`a*n?8p"Di_#f]G:F1FC3/QSGd"*,iPI>;qj)$\8K;)!=I&Pugj\8Na_K9W%%]d'R]9h<o5?2Vg3'.JqO*NV464!Ij_oT$"`bOdVs3e2u.9?/g#3S0B_@bG!^f.iM2RZ'7Xi:tAsI>7&l,Mh0%3F_9-'nj_oa4(q'%&d:Bj9JGG/3Lb<JU6sXe,>:a=l7>9C6hHS^%eN7=#1Q_Og206N]NL)aG[_.KC1@ii(p:4\_m&e.QDp<aP;"?t*$&/(M([l9&trOR%,XXm'I(YMsnm29W5#IDQ45Q'4BS/&lAh/lg@8<UX2R_biiVk=G,:\j&a7IPOScBG6Om"khd&``bGAJ@uHbkMPffl8`0ceTII#:T)%DJX"2Ol`V@T?F<BZ37%uLGJ)c$Gmd[k>%@O&^9@*F[OdDLhR$[>[]D>-cdUMnY%g5VP+EZb8gl1P%cFZ`oXUj"B4d4,E.YM+]\QB%"22O,GTsrp,bA^+Irr[E]s3\%7mM9kC!*gS/\*XH1'ioJ\st6+*/uE9fgM4PHospU;Z?p_,`:Vl91e*A!NtT.%$b>^[Z.+rX85B^%IYct#kU6hUGjmOKUchGlS4%@Em(a>QGl1%0n"?%e'OS`LYG'mOI#1ESSe%R=)<i=NiPW1fC*MYMHK,)4$H2h#[/Dt=C*_dKL0@O.%C87NS_":?RnCJ#'/ouCs/e=1@7\!"fFPsBr/@A\qe*@$.0kI>D,_X=RDaPQH<\UV"$)VcN]Y)eSMCWt=PJX[PVT$6!U6=(%f\3;%%Xr3T'9TgdcEBQ%T4QL$I9+q;LA4r$R/HoCPVc]C<3/QMeaM\Zs@-[S]Q/9]K*#ScWH0,HB\o#?iJM.ItWV6o8k,R'cQtCk_8kd-5%Y"t1_]_Xb!Dc*#C`EL]3S@9f<[Qb-h=7m`\[58E$7mWA691sg'Nm:CJKfP:Tf[sA.>\t>;qpVE9UZa<CVU]/&*Q=P//nbR4IM0Ns%^W+!(<LY7*mKrl:3&_#(TSqHhb>Btq6%O-O6$"C\:!jm+kn_g/K\g$LB(!2t`Ws(;G5O/j=>DZJ?g;a&_N]Q>#K\"HWr&=N8Gc>&%AR1R2;g)0QH3+Ft.UpBJ4k6(2JBd.<TQeXN_%#A'qEBSSm^/&W.s2rNm"]%@Z\]%k@*F'CX:I1uR+E1B'fl"[ElY]Tp)uO^g"#S`%L(>FOPT?mWiGhW]!?N>FeX(=L4HB7\\Rf#fbGKj:CGq\o.)(E/iN6!q`C:(<LJU?hcq'1>4[WGi*T()m26"T(p=Y%d;_kCuhI\0!%%"Xi()R.%'(H=fFk66:EIeiM*ElY]Tp7A:5b#aX*D/!V2@Cic\DJF`^F7p;qo>kZlIDD:@2OelQ42t8ZqeG-+8sM9R4M@$_dSM>J%b%u)q:WW6/FW_;.ObCo3LjM2='udsJo>@BB/H<u131.E30sdS!Z;\2ZVNhX`r&I]R+I>+u4WdUOiL!.IBcEpBir5F+Fq,!OhH7^A%`W8>K@'D.T01"b:#__@9%[tH`/%-!DA%TJE[fQJpHcu,tSG>JV>%6fX,356Xh5`nFfFjX#8J>i\:AZ=3VH``i\>>of2$4mm*&jV0%'d[*+Os"oaj:sj57Dsg7n;d%&i.c/Mljk-9(\Qn+s6L/OW4^T9il7HimuAhs'UWD$VT-c,eL/Hjj.cDh4<,MI[.Ed("+Ci6!iX/$%Rj#$LX(06=:J=9Z`4/bG./5!6X1l.QB0lO#/lt;i$u?`;l8'[las.-(lun6I&08r+em<C;\>[u[lF<9@\:r;RU99D;U:B>3VDSu@%SCS8#SN&A"C4)9$0g8UpLT`2s&HAM@W6D8_H3Y-pnW-V:`W[Bd@.?,Y"VXONlM_p9j'+Cu8$A0B*6dIeX#sT):cpnZ7e[4Rorc-)%cY/@/.Jb="-!XFHnE"UIJStEAM'q\FU-6H?Ftoa5Ti4aE_roKDDF_/a^5q.@>4G'b!B?g[q6WuD2Iq&kk8`EB!O6_V?U1>!RC/76%0s8+$UOq9Y=Mk0o%b\eE*!3_nPL+AlB\IuiTrM,:M9qGh[$?%1/UFVrKVO9"m!nX=q%fFcgX5*n67gaT=Ct3GUsU2\-UFhn;f%h'%.da#^7^je[#4L3ZpYk[doLdV2:B8AWOdJ?sn.7+'7Mp$YZ$GPFejaW%[qNL"<RZ4,rc``N]rP>=ePY*+&bA]%?)n9?Xe/_ehJ+Xd%o@L<AZCZ[#*UHa@7PQWXG9V)=HlID*^p/g!A>lKI'=6)eBtEP#TmK,P3Q:#0@3M1D1<)cWI/rkPhQ-uYj)7;33DnqBfnc6q/s)Yp%WHP"]/:JZ`:AHIf=B<"Oe0ue>%Ef/,Hod9R6#`<+'4Xo]UaUkZZbDAXJ1OA.6!5-\aMQC3-mjSsJ#eH$qN^o8AbJDB7:mW/`O:jj%_oTc?Ddto@#Oq(\))0.nj'-3G:iQ*]6opV)J/E/^LfN;I!)$#bp684o7P):Li`e6\&g9uL,08'b1#EKUQ.qP)((54*E1utF2^h4q%eOi^0/6qC[LVB&/1;7o.,\lh*O&e`LBX.1-7Oq@_s*nF($1Bi.gOu2!.dc0bL!Hk:MJ^#1`$aLig#%r369hmmY&](a`<9PMmh^l[%T!7/^"YF"7Gh0Ar2p'PD)riZNG.LJ=P/FQFF$M>h\L*p[0-paTl<%XpmOB(:f1MB23i]lpa^6Ol6"eL3'u]\s.!])0>Zn5Vi3hI"%qG/cQoR_[#(^_n7n:i0mmh^kZDo!8[Au*n\>d*"p8X?mcR[$<b])AD#s&E^WK@eEWb4!H0Q'!&-AmPT=o(r#>#p5*VP_\'Z$h$i*%Vj&]h't^^4%(F>t@S$ek0?N4g^+n1tQ>Y+GqVTZHU='2Y/?C7[L_jmeX_#_o0qEa-,YM?k9a@qom]3Ogj)q`pOZQE$bH=tAB0-R3%M:X#f]RJ]8D0]cQ09!J<RrWJ<X7F^df7bp9"hNj7"Z<IZ?@m7$P.B>o08aZP\S,[8HrXKd6u:n@<M/:fCC4\rh$&.Or>6^744TZh%d?@B"1#crrnHD=@ZPArnQS*)TIM6%Nr?XIC4L*AKZ,s`O$X3(\?8/t'XV_\9r3H<j3C$r1l%P\cH*41U^'@bq[r<n/\b=rYIo7.J%hMtnML"<8=ES[:7lMUC.in#7kd0E37lnYp'0h=$6s/sqX-]ogH0a#MB>&7W!_K3e3pS[$bl:M""S5kcYSDro*>*N(6;iR$laJ7IW%jHQq-\*cSV!/;-CTNg!^<UOYa_J!h0dPPc1AD/cR[(i.),=US'S_j9J=J>,4EF\_pCp9-CY_JRjFQ2ctkHC!`SIk8'X(o):%2;IT%7b9nf[Gk`<p&3>'Q5$2R#DuNG/1E+s!A%Z76AV4FKQ&#'5,N$;?VhYPauNaB8Z%a3EX<m8Dl)V5"K/le]&>k>bG,'PC$QR[!>/^o%0`E&-#sp1a5c?H`6#ptT>YpJ&VH,(F@XG-II\ECjT*e3%p>d5-=YLBEN-Kd/f=5H.KT.B'g]iThS7ApggTW85cXd@tgIs/VJ$D88%$jo,G+c%C!K]lK-$A;fMQ1aAJaij9%pU);o.95OFja\R\qc)_u+K#L\L6TURGuE)QW@C9[G7n?n=gM]j[p`LJ?IK,5K4q?F<L6"b%HN,%5eO5:t+oubblm,_:$^?_c(J:ik7;g0>e9W4=g5GW8)T</#b3t3=W/-0NUq/..)HO=t7Q#u>5\/5:m[R-%gS35RX5Gn-0G@O0%R*r[#\Wu:&K?G:)NZtE(k@jWT88YjPSSh%t/VJs*q%Cr:S<M2Qk,fu[MKLLH%gf4Q)k]4IR%<$%D:*[%3NU7ZLMihs:?9YV_%DYL%j^\L5'IT\33Il4gr'>5<p<\)W2'F]"q5!>jRhMe_Q\jlQ$$?&:#[*M9)3b)B%\GV0Sd1GE1+-$J6RQ*dkUfuAhI.<`,H+V_8(b4<%QfhG):iY%jf/>s4>+`:PobQ?+^"F1'<tE,+S5hOnk8'L(e9eRj3;2'i'LsNQVeJL/<ZK!aR`"LFM!`9T9(*eM68\$(]otTR"_Ie\%=@pmW\6O8aB8YCsdTf6uHQ$\'&kp-[HsDko=Z#E[67!p"C)2Aa+bd>h#U8k'TZSg/K^d>$@LO]ZW@cD%DSrnrF^m29dtQCe3LV\5%khY!uW,)<Vm\Vt>U7op)KZ_MN9CAdjSFqK^R#B1MVp>18M0Kp;8[[ip:R]4T@K^si""5+=W$DF%4#D`=iM8fXPZ'@NPD+iC#[13a%VbAN(1\arT+":5#-HK0_KLRm`]KdSiF0Z@W5%T>/Mc3;*k#g;9kK<Y[U/U*:E"d.>C:9-g*kl6GXt5#6P3$p3KOB!j4H(XtLpD_K%rOU0li[5*g&KA@JV:CRi8f!FkW>XJ.HF=Aq[3@m,g`VjW+blo-2m615Rj;(0b9^ljj8<U"#!KA#dftL\S,a:/bb/""K<<:hk+._*%jX/ERNIY=+8Lu]b/$cdle:>W/rUd)]RQ*n3>PTpu!6^rPHo=HI?4atg;@j0L&B[0_@P,J+Wc:_!)`#KgUA_d(oV'DrO,?rCO<mL,%6P.G&VIPBj&C0hQ@HU;'&:-6-EbDLjaNYicF4IW%>;GEAeW!-d?]-8o-lJ5CVC2:LX:J4Sp@D.kKM!!o-=7C4^*+;Jb9\$sU0_,"%`@a)Qh3cP_YdNo-K\fCe)1`*R@HOgu&SmA\ChfC::::;Dq3tWQc(XIBbdpmpV5I4Z&lBb*g1sR>"EUOHB$NBGh_ud]KqB\3R10+0%e$H_(gQ4R`?B5ap;PKSI7rWg>;M3n$U)7Oh16WuWkY`_\o?A59k].XjYf5jC6#;J1lZp@\MuJhoSJMJ*X?3L"5u[Fn5d_&RVK(=t%h']`BgKg_<e?N%336[W3PT"qpn^/QqX!9T%ios9ZU"GQ3Z4VG)/NV^PXKiG>8(QI[gbe-NJ6DR:Cb's6fnp]D4S3WFlXk6CZ:_>u%/t8B5)62\D2d5%)'\,5I[+jRirliN*_PV-@4CoglfQolpR1<7^qrPjG\Mr2?Vje<F[Ou69F>G68@@bc6NGi39C-qEe,rB+QW4OWC%\II:llh**>3eU(+5I^`m<@0g;^BbNl@)Z,t+<SgrFK,"#m`"kKGWeVh=#`o4pCtl>519hh0-S54o2u47gc7]A2IeXS)m6)2N=u]>%>/-r1/&)Y^m[p0G4Fg<lTkR>GUjBdl`SP-$V/Ap8c$gX%/S7XE"tTkG(i,M!$k_&-W^G6Pfnf%**]d*Cg4YnQ1jjE@'7UZh>5Jg5%Ij'#LU2t_u<+[oS9E\i:C/Hi>,>JA$G%9b'Q;G&Wc?45<__G^h;/VZ*6?Ui"GNDkC_m\%*Z#8HRV6)p_lU7'"iN.T#p]P_u!"aTr%^C$dsXMBWi2$p[pZ^Xq*+;U"`*LaH7JK&VH<?"0bU\ehu@--/eLfDEJH?Q6/KBdES\\IQ5m`kITqMQ6?P=kG^"%h/k&n5]E0p%5:%!9m3=(a1fVW.ttH_D:jp)mVm]CdIlt`(2"MA[BQ-"5=:_FXR!c&VS9X(EC5QW9)dLI"ER\_'8-H1+:I0)%_dW*NpYid1oqp@/U_T%Q)0ROco<3BaG*He@cPHc'E#]lSa$@KfXETG6R&G`0*NA'8O7a4$1S2s8T)H>e9X:hW;FFGd.eEPCh6FS!G$aKNNCTUU>aa'cqFqs%4m8ZrS*d3JQeOKaW.?%:_I\gprktg?=a92P.[hM[K5u/aq)B(#J_!Vp`):a9kf/V)?YlfAobk[LMr+`Ik2>dO,1P%_kkN"&C>#<F%A!MH>11De'2GUP5^,AUP6R<74r9N\c>?h_3l@gq@"\jVEUjBdl`SP-LQ.IG#q68P>E_#pW0Y-Q_?<2ZjKhT'FLi2R2\6fgbU4^GG%(qV*&OhN_W2,K*DS2R1:A@&+6++\t67m\erGt^d]BK/?Y$=PqUR&%293M)A@o(CRZ%9(^naml"+]@Us']4'B]=*_2FW!"!Z!(V[O%#*E.RIl\mR<.9F6rRr[5%onI4GYi7W(UL$XC%<g\6\t9[KJ46p\AB@fI&IC#,4s@3,aV93X<(T1hYS\b347FBQg@;fq*P^B9SDWr%/Z?k2e<AQQ03Hnk=ro:T1p![RPKirId<b8S^_iQX2c]SI@k71`aV5'+lA//d(f$clZe6!ol9fStE^@`Jc+MRc9!8_V"6M<'bD:K5%*+8DF08$ApkaNfC.97_n2gaWXn3LeVoi.mqWudJ[q_<:93>'b5PT\]cBNk<(0dd+3?5sm>CtZpIfUc:&R+d1\Sa+:.$kF6[2JXA)%-j=bEgTFY6R5&E/@E)8N+EW)8et7*QU%c$Y4dB@&#.N74/<@dIVD*9P1#*9OZ6]WGE$^X44O'DK@ki$slIk:)a[L\-,3k`5Q/6.J%b5Q41b`#U+9=)><KaSaQGC,5L.^0Q63?=dTdq0u9+aY]PG>GH.$!u\lQp%.DLR['"#u*RM=;3)VJ7q_^;ed-e'P9MiZK=pGHIBUK%Q-N%'jpnPXP=^dJ92+CW$c^9QkCc_lc2+rFZE")(BGtfchGfD*\"pWabg%M%\h-Kmp4j9MJ8Ae95`$R+j<#l^AR"$XjYgocV:Vdt%3gJmC(`FiMWm2IW77)Du5k5$X'S@=V<-B<Z9$Q_UaR.WO>.nj[Y2/XDkefoiKPFG_$na#+jK+_\0(]F7BKp(%:)UC%Ha>;-Y;m#`%g0nKY>OQ/8X-<t0(5G_'7_rS.6G5F\ieTh@D:kF`]m&i.QCkYS6PZ%S.S6`K_tlS<+'p-G1`)R%(u1%_R@a7c#&\([%;.4ZcS[h1%PCqKm'=(%a$<4A'i;u,IC=q]r0,IMjfG:U@'[?u5Z*o<JU)DI%[%ZYO+sGM$#1U/q7=Dr8;S=>3W0_eP7?bpJjg9&UC%^>^7E`uV%?(m4VXZBRYRTP@-.o&D+<T)-)9;uUU#Itl0;l^kT0.Pr>Rn[.m<l;69D2Hr>P17(;hF;1*0hXE&DlQ7dodo'fZl,dIlOlke>ZN0!%-)?TG<Q$PQekAdk4dn5IYmo;PV>!U/"g5$CA4``VKD+0=c"aIi2^A_5FM-_55pa&j3aARbQRSUD-\L=C7d2d[;0:$8bGa]nKMZFd%)<V9=l:)g+;Y^kR-Y^"&JZ[^^mAX&jK1o[p\i"[PN\rj])l@fpNkq_i8idq)dN-$P1!*,Bah>b2S_')l$F"-WBAj8e;erc6nK*rl%n'2jHogP"IP?%L@%rsb?Vq1`Ako(9ePWFu\P=IH(%''M16F3X.B2F)ES=J(ETNeZ_):sqM:*6HK4,U''\MAjKQ3&"L.'-]cm0b=9%:.R!^>\BmJ[d<)3Cl;=Q-:AoI@NC]2fb/*9Jon/d57Y+/.E_$D^7`GpJRb!Ai/QNHm%O!=2"9K_;8/:/Klt)D&$U#r)NcKn)q7=n%A;f.#2)-ACVT\Z),rRnp@%1VP.TO5OKFsRo(MC%MT8K%qM3*^:6.Vna8:CkMp5NmskVA-u^1h&MSRbT.Mc.$\L1Z*$XHP4nS)0Hp%#V1fF&ulGdC-#N/`D!85SoX`7JZMRYbP'D_dd'bf8kdKZe^3-Dgt['Z*tp]Cf>=^L.g=TceS9kT>Ibd/;lb+;Cr8;c?A:3^Sr=tQ%0VrLd^g%k4C9j7-C@jNMdOCJ.VBBMk23BIOAI;&R<0L"n<\mV+fd$r4,=8g8cf&;#LoD[,Q#lrmjAr^Uf'@Sg80hZmE<K!FU^D25%^c@@,@aR6+Bidlpr2E=8l'i6K7)\/<j@5\8(6.[[o9qVJIr!UVk')nI:&Yh,-`8$R)M3qidn^O<-RGF%V_q\h%GRW-#HLrkA1cJF%9T<3X+Yp2ork-fim@d04U#@XDhO)BOS_T]Od<Zn9A!JeAY>O[D+6>sKe$?!F&fM[jXHF$'NQ#%c7Il)dNpWh=5$Us3<ij$[)PsJ[%A<SZ8bnKk^o$PFIT"`$DjW%gT7d`uo=3+gMa=bpN[)bQ>L7gu_!B*-<aFt;/*GmcHl^BA;3Z55e]<U=FpT=*.VM\>[h5%T#q\GQS%Yu]X7&F.*CT8?:a)PR[>eQ(N4\K0F'X7oB4f"tp"T?NVPL=on;)ZnMVY[93D.\WALPfaDPb=6Bep/H@`R#4j)eODPHVPPIrLM=od%HrSUK8.M=W!hn33=ilQjq&m.T>I<5l.nuYl<a6?s6#*F`/jMr;IXmN,MpO"5/kd-*K6D9R[RKMqLSB4sYTM7[%^:+T'gY<&qX_S:%4Ckk#9&s@)DU:jja7e#_fn4Nqm99;la5=e,>klY'LWB;:-A4!I.W962W:AUi\U;QY9inGHJW]'bp!i.?oV$=5"G?"(7dbf*V*=T?%SNe)oLRa/F`P.-7#,4JBcMAg\,$T0#.2J+uI?&`g/*iW]P=;<D6?\f[FF[J=0A?rp->5'?UO&q^91mbL:N@,5-)Gt;(jlFa7]f,n%c3VtS>,M8*]-Z!FF-<\t`RPq879kaG2oW4(fR@PH?&-tI+:)m-6>hUl/aC]6R%R@4P`==bl`&;A#u`p.ArLn+NmEW+.IV]lFmo&C%Rh7,l#>f%%aTo?cgS.]fd'LOM'Z9m`"kq?62M0Rt!)eUS[u7a""f!(UE`_MFKFim]:&AYJ`S$\G:T\M.YMPFAm7HaBa9k=$DEpQQ%@/,#G@N;hOB1+I=OHbYU<[?8`*$&QeA;en%Pmd>:Cb=]e8bOu&bsfY<-Al;aDr&[b"gWm3C;h_q/t:Y$?BncZmiU5_fG:U@.i06.%d9&c8DG[=SqDWN^T]8+I'Qh,6X.;X*-&%FHA]E\L70]%BZTXuNd710t<m!J2N-[k5Qt))DJQNTfauY`G$KEAZr&G8Wm$tQ;L253$%VM(i")<i4f94H9F,@Y(Gq<M^l/5`+MKMF_Me.=,?N_rJ$C:Ss`a?c[cF^EOOe]CKZ[mu>/PROSiK"rBu@g(t&)n(j&.h5Pe)*"5R%UPsN>*"\2@-S$BfWk>3&ZcX'Y:J97tn1A>)S5uLA`+[D0S^0F2d>R=q7472%Wl^WGX"'nWa77P]kIkeKojP#N5#(MuBI7(@_#Q3:%O.ac.VqZMTBT?cgZoh-p.(O(c(9gs9/6_N@PL!Ycd6?=0I</4XfU>e+ZmqdeV]&m:O(kjtUV5HPCsdOsT+oLm7Pi5V<3rtekGAG0%D`-FEjKtDSGe3`f`HGJsQ1r!Q2Ak"^4MmCAa6VXDl$3Ua-D+$>nIgNA)CKiGj:?8M[RI6gnTm<B5"VK3$Ncj7>8[1,_u2tW`=_u`%68P*k.+dWXE\F^eVjh.4_g+[l97$<`9gB1*6Gm.K])2S;CA'?:DVM%jgkP3qe4loc!th\9-W8'0Q]6C*WtjhD<4K;j1UfPY6)h"t%$Z?AGY"5_\4:MNE6"GmO[jBX@^[3q'EPC:'abWq+EGqGA9G`AnW>MbK,oa)ufi+eQ'($g+LF?bkSV@<[NX!q+WU755?1;aso!A*6%pEk6eF@1Y^=MrHW6po0N!)^qRM_<Xr<)=JMngP!=LH`[/fuWR5*_NWF$]]pr)9HDehZCFaILZ35Q.%SqV0)SG</:.["fQp4gTW85%Y;].k.>8Apme6;2URW\rgu\0K$Z]`#A4mnQTEsB?l".#,DmH99NE#`,^A1;V+3fn9SM%aFMGX%Ra=0\J9/]PHUF82^@N2V.9"-%;%>oMJN-/$QmJs%>Ja2&k@KUdLE'GJ9'/)=#oXt4T4[RI59'>:<2VF%`d2Ef-F)c3j-7Ss"7U#Em&IFA>0mUAOmEVf8BAe`osk;@TB%:9r6s3.8Z06KWsBaTW6fF@+78Iu$NfNkn^#h`,K7?>M9slC*[AS10h*R_AqT65?./R.(r+rc;q4ZKIVUP\o@Z\`%SAUa-m<R:P>-%rh\/)Bka#Bk$+0,npCNtpc6Mi?`.6UIk2b/CF,d(AKU!iA;eb!WCAYJAl^hOOTej0@L-pT""VR8OoioPKP#=,AXE9>pL[X:HJ]_.%&*qkOUDoC/?QlXpZOWUYm#:kd1&m[7%H"V"-*shF`+2J@[M3b)E@j6-PSg1'_\*OpX?JoW0(]Foe%/q?V3l7MdE7]_fT,9s;l8Ku%5$0Tr''"?I*7ZAU6K7NN9?+h)7(ti@DB;Je8M-D\+Zg^>,t4,XPNB!-cKikIjNB7%WRPPB%%SgJAA@,#b,&^8Q8+kuX>8!A`+!OY%W^Yr*I;s^7CtrOBd>U(D,h?egQk:6#=7&/.F".-';P(<-EZ;GUWt/0$dHh:\D(/-m8rQj2pbe7j':SjYd&4\A$j3J?94_DZLKnPi%/Sn4ZDMhoeEVSeqI?YQ.@0JHP<q0aL%00+oE[3k9X%_7dc'4ak@YJ'O>gc3BEhSBXWUrAe\:WkXNjiLQHQpX;&SsQJ3hYW2@gph]%$Xp9ZC?@o);c*tTkqsoUh8lnG=d5q%GWd^eB03UiW,f;Kl&G)JdDg.9@Il26e)7/jHA_6_F&2MVl'?G%`T'KIgGM:(R]uu7O"1gd%>ckOfa$>G<DTE[T1g:1Ulq4EP::4iU`cplElh*(T476:R'5Q/n.6poC+]tXGW;NuT"qL_Y<moH!UTHO"kL5?W>/]!iZOO/k>-E2b%IJ;!M@X4/=>in,K[RUq_KZqBO)c)PbT<ZV\,^VFiDmDgp]mhR8#YpJ&XCfb_9fLL*]1<U9N"XR<eA5>di@'/$[?]LO4gk.Q$/)4Z%Z8Wlno7MnJD\Q$trhg5j7YMpM\*98IG?^:A<H:Ye,qq'_fW&b5._UQDgVIPD*q@)G-91+'!jJtWYugT'2<$&/Uf/DuFOl@0i6pa%%K,5cS>`>@=)l;.g@;FJs,6O[MAPZqJ21i5.3=@,=_AO\'e#?RG<ZgB\Cl;>R's?Wj_"?*r'4Bo*0L.`$r-@3\'qiAh$U]WMeKNR(%Hn2[7>I:sr\HJ+,D@.8FPsYs&TBP3AE'1@s#'CtSJ1rD*BJ9*&PBi)7qojo!S$Z0V!go4CMMM1Y<!+J@Bt)Pkj:Tn^WaD[.>Ib3t%U@k$;AR[ilFA'NL14=<L19ptCP-tAUge.f5D6?FOl9<:kCi?EqXb'f)dj2Jor"c7+6%B7?j3Lk\J.T@!#SmAR1UfNhj[F()[V0en%)GB)l/kOpe!9M#B$]-FSSs-RL%e>:!GP_I5I!h%1YUs&7R*pVHF&nGNJCVB!*B>4\=;AaZW+06E7QIu2d3^X16=8e3Cl;=Q-M\4N%Un`HlV6^g^hBW(>Npn4nHoX3ZL!jeV2I'%CDTFO79eb;^/R5h)`]#8o/DhI5LjUR\cbo8cp;sV&H;cC6A]R]=MScD,*UEf:9i?QX%QWOD;I(IQZH;>1m/nLYIMRE-hgQ8Nuc^,%igNRM]S$L8\S.X;*Q61oZdpn&(*uo<R1qJ6(kDXbm%G@KJHH0+oHiD3Z:/U>kA7MH;%'HoPRBZP1[`L=42D-iLgKA;2ud<b8SP+8pm?(_78do\]`'<HQ<XA++Rom5/Z.Th>k1\Pi.[RKMqLQZ[gnD]8G%g_HLTX&$^=L01^%GjC%50d&K-</YCP6!=30Pf!`hD"V<X@U$4rHcT[:E1N6TQGDePa]L&()#u*]+!;i^+KKpI&`]+'%W18bCl;=W>t?V-bt]cCV\84M%'a6H7#q>0H+Lpg>G^HmXW\MR3aRrIA?V%KUHnINmGq6QtM](^M*u=F33P@p%#2UPf+\le^YJ(8sRk@:-**F[K>`8ae17i'?/;rko%dsIrAm4*"sZ@+D=1#&dB;Tg7H2WcVN&7NbfjkZ`rT.!VrEZ;GUWuI871U<I+N%)2+BM<$>g>;g67O4cR@J"b6MVUd:,PNNhFLinm%EM0tP94gaFhY0\kW.Na>An?M5!=<hPY)gso;-UROgI%s0&p1[?HT\s9A4r"g#XE\:ZBhnAn5WUn#rOLb`9EIs,ISb"P[7-DhN)sj%+],0&ai6Jl2qHCPm6__i%KNNO&u]KOQ;`U7d_Xrnp[s)R;0kB!%Eh-am7P%/!m=1(YDQ'Qr)1Mr@MGmL9if4KnbuG`n@dV3D:*[u%TW2B_hF&is"m[11lf1Ha(dKme*5-.'R^5R?h1uKnaR.WO>44V=;_r,?=_1Ft_+*(C[X=oRbIIaV4lg<?e<lrhK@kop;0q](=S4;H%380C):Ro[3$[6;5+"To5:kYof:W$CN`BHN-D:fW+HG#>6Xdbm7mQ1cJQXM!=kmN+^rTDg:P#;$#!%BA8#ItZ*9C"H=8;n=d2(ZiH%/Pm<SCK9Y66Go:[H'uKX^"s>^)u:\#-c9!_XjfF&dGCrh<R$](Lje+go<X8d[6FGD\&Kt[lWn#b^*K&.b9b7NYJ0"46Ym:(DFdVC%"'bo:50]=d)`rS_A7K'$D"C$Q#(X9f&p*Y>fnaLd(8YnA;Sl"1'DHQuZHf8(^Juf^OKG8ZHuhgq]VAU+5do`7>RQSN6oLU;$<_J^%.Da<J$;9X*P,P<J?mrlXW+uJ*@Tu[7`=jHbFXF\dgTWi+?4SpqpYBd0!.>6^--IGA+%e9k'4^l(+uPeN@COL>(oHPPl_X3!P&P3.%NO3gK,QSm&]c:eqmdZjU-VeADW(!&Q[K5:.D:fW+p\qFU]^iBTfI.0`EbQk=!n=N4[EOt!;W2C5?$%hRF#J%X[YIW&)h^U*6d'/\%9I\,b##TUK'!`$+Y5,\u=*(a*_r>\lAL"Zm>I:sr.<]K3ShZZgQLq.3U.`7eO)SYcJgmWVS"-Pq-<iBKaf[l]Z:3r)eq@N48[J75%%\m4B*fm20=ufN4PbR;/ANQV2K'qVIk1u;j<eFr=VGU)SA5Ac]R#K*Xdm:IsDh9eAK:<KtAgeS['B+2+%%==DFkm0tXqmAaj.59P%C2@$;?*q0tIaeLmK4;:A/u-Lk%"Ra(iU+EZ+TrW>s'8\;^g?HJoi1-e</&H3V'4JYPW`"g5TC@*fAVspS<4'j3i,<)B$!M[_mX6l%T';2<6$Bu%N"!j7[V,HW!\&/O"+gS#K^<[%6I02g7da!Zke(MG<dbb_MlpSG-O#hYL"d-V`WVVqJo*hpKa0GupJ8(p;muI+Z5"_p%,$U:HXDh+@WLB)-5dl@,Xm)[]3Pg4$9g_UnPkNeDB3nIhVO,;<S<0qe=mMGmi*5-m3ec7=_H'"Vr.Rf7K/1BD=himDI\("Rjs;&*%)d+r[WUq)W<\^r.Y?A]bL#pU=U*="a+>uWLcLR>tdhO<>(ml;6+P*I/<6IgCej#)@HiK=F_CY[9F3<i=C8VularD!3fq;3DOV[Td%6*AFo(Ug5>T/W`2@4o]6;%W`bVWVPsPFFceG!:NCCrq"(."ThP\II;feVsmaB,R8dA5)XkR;@c!Gp8W\jAQa;*GNqU;rVorj=Nm)%5#3q"Mp?+l+9T+_IB7T/J1(JkMp\G=Ld#Sg\H0dL<mki\`-hP7E._[bCD7!Dd]&7`a;/6:Tunr&i,HjA<`"<9Frf?k&N[Nbg9,HH%[NSk>?5&]Tnf6)""q.4$X*iUb[KB#p5h.5f5U6N,F.NV"(8'[ECl?mA:h>ohJX9-$bmZ'ol:qj3>h&n]pH-7LR[RBCs3spR;+sG7%"c7],jM06>j>K'frKGH*#g#K!7KQt?;V&6!7;r?-es+75#m@&-.XSE0f:qln4$e=jF<e(Q#$f7dQOhX^;7V5Xd?,K3I-Ug`1!H5K%gkK[nWk"'"q-bk^,*i4AkUro1@Sf[>6+O&H62;i-2*8+saDKTGXk-r8]<@XJIAmWqB,&p_BVakJV@IB1P>ja4JD/4ZcWb5'[HR7s%WBSZTfYW]#oL;pq0=GiC*iq*g>:-.b8jFl)_OmjR'L2jQP:`>A<GYI-f=Z[pYtt39'Vk`5qboqe%mWR7rIB-p%S/V$!VKU>Se>[Z%\LP.+BB<M/lC16.IAikImo3n@n[[]C:IuqhJ<H)2");(A_IM<s/.ME@m,^-AMq54i1'6M7*=u/*Al+:IfBB\;W;2C2S_rI8eY`^J%jiH0!X__pXB+H$_3]c$>%nX<&1'?`Wci\.f#Rqk2HD?T[HY6G\Z4Csp[RD^EF%3QUD<7MW0?]_0BD9R&*;Xdp0#fur9Qsn)1Z&h&%[8SVKbSD.[[@B/oh2mf-0k+Qjn!.?tWG$0uR0!"ngV?*/+nN93FJ!H%p2V+\7B7A;l+l9JVJkXKAVCT8bt_"'%<o0\4:%3`$&#;^%nNh'1p/H@1_KIQXO0Eh&<!m-Hcf#%k=Urd3a/$'&e63$tI*@o/I3_t?RSZ'@na1a?]OpV_-^FYE2?b"2L<5o>F^VlfBR0b"*,%lH%XF2ZN@E_K*A9B2F.b-3^%mYduSqU8Klt/;romdH>]@4)^I%ts_nI$I<mUAPuHugkhh3(s!8`oGq<:a7QW'IA[*M3>\>B$Q;BKB&)%:Ms'ej0@]lWk>4P5ir@lNJ-V==];%*Bh"UGTcU>P)(B#dR]8_LrW.AV%GRWM5%gV\YJX:XlC3lT>Fl9t9H4RV>2LY0!g2!XEXp/'%;f0K3>`2?!W*g+b=*Pn(AsTdY3.DtIM3[[@*hGZsEl$;MPiE/1+C//AQ<XNU=hL#+A&[N\esI$0l2kr"FJnF3TUEDZnAbO'nj>;"%'(qS5Ha+%3U@T9PGa)p@"*78ZR]`;%qHn:2TalUuC4b_^O]9_AFNN&".cchM]NXZqf]pRZ`:d01Ob-Y9&]gE?18Q=CWaN(;T;p*h%HA?J0:Hih-$4?Hj.3#f,gJd?bT\SGBU'"t&<o4,Qecp\L9]q*o&6o&:57NcXLb:V3QcjISc2)P0Gortu9+EL'McmsjLp2oW1,'t0%kBL-@+l:)-'^SPn4C&@u+2F_WG<gC?]iABe!tV5B"6_\D\XhS%!O4SPGbLW3E`3?ZC6]f=$UscBls4%?)n))6bo>g$\#q;Wq91Y4%hQ8"0\#OsXlVbI"8W5BlhPr?:+65=rMq2[BRO8Q"bA#RZI`Bo][!$)n!rs7m=]'F,XK!HL85VN'\aoEED:.X^;gdGu0$e-;eWaT,%S,BOn@L`[51Eaj<$q*%]Ha,N[;rN/U*3X+H%D;%l/ZJXF9^if#P`nn^@kStQ4Glc\c3.8Ca`Vt?,fTm"7TMsd.(t[?:hW!SCo;^"%iLnU.`7Y]`=FEC&r.h)a?ZU<KQTZ:u2qaqsl5g))qeJ+nq''Ase$lRmR7l1Y"tm2j\Y`*B4rLI0O6#RPVdCbmS)_s/^G\\ACT?P%%.eEQh0Qu8,]u].U_A>3T^$]mN/m%:F<bt1l7(BaRl&uj@Z(+-J;HiaP]/+neiT;&\?"*4K$t!;3/S+^3'IVCM+6<9Gb44W^62"4A%'*bk>p_(Y6fgNT)PaR$P+_O93f<LlSl!`\fbpX<Tbi?jW`8'9`\n[2-s8M&'YoGQTms8g@n2[QV2agn)o6q0^O0kdo2<Mf`arM]M%[X,5*e&p:^V,c*/:Y(da2M#p>9c.6@G+o(2J/\mNL&+ucGWHV6a/adG%Dst"D#%X6$&KMqf<H\j2D4Ph]qTuO+ZVa5Vqd3sXV-Bd%]79\I:WEPN^Adq8I^H;.o5DDCq7jXp?iU(cTDme6f)PH)J,,F<J,@!qs7*!OrV5WTs8:WDJ,_0Or:[>ooCkIur:t9GrU8XYIf%;q%rqcBHrr2fp3r\aDk<FFqgY`&-a7!Abq]C=d5<t7$\G/iarSrD(%mU%8qp*q?~>%AI9_PrivateDataEnd